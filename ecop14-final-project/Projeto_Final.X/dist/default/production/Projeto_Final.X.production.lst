

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Dec 15 22:55:20 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	text32,global,reloc=2,class=CODE,delta=1
    42                           	psect	text33,global,reloc=2,class=CODE,delta=1
    43                           	psect	text34,global,reloc=2,class=CODE,delta=1
    44                           	psect	text35,global,reloc=2,class=CODE,delta=1
    45                           	psect	text36,global,reloc=2,class=CODE,delta=1
    46                           	psect	text37,global,reloc=2,class=CODE,delta=1
    47                           	psect	text38,global,reloc=2,class=CODE,delta=1
    48                           	psect	text39,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    53  0000                     
    54                           ; Version 2.20
    55                           ; Generated 12/02/2020 GMT
    56                           ; 
    57                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F4520 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     
    89                           	psect	smallconst
    90  000600                     __psmallconst:
    91                           	callstack 0
    92  000600  00                 	db	0
    93  000601                     _charKey:
    94                           	callstack 0
    95  000601  55                 	db	85
    96  000602  4C                 	db	76
    97  000603  44                 	db	68
    98  000604  52                 	db	82
    99  000605  53                 	db	83
   100  000606  58                 	db	88
   101  000607  41                 	db	65
   102  000608  42                 	db	66
   103  000609  59                 	db	89
   104  00060A  73                 	db	115
   105  00060B                     __end_of_charKey:
   106                           	callstack 0
   107  0000                     _TRISE	set	3990
   108  0000                     _TRISD	set	3989
   109  0000                     _TRISB	set	3987
   110  0000                     _TRISA	set	3986
   111  0000                     _PORTE	set	3972
   112  0000                     _PORTD	set	3971
   113  0000                     _PORTC	set	3970
   114  0000                     _PORTB	set	3969
   115  0000                     _PORTA	set	3968
   116  0000                     _TRISC	set	3988
   117  0000                     _SPBRG	set	4015
   118  0000                     _SPBRGH	set	4016
   119  0000                     _BAUDCON	set	4024
   120  0000                     _TXSTA	set	4012
   121  0000                     _RCREG	set	4014
   122  0000                     _RCSTA	set	4011
   123  0000                     _TXREG	set	4013
   124  0000                     _PIR1	set	3998
   125  0000                     _ADRESL	set	4035
   126  0000                     _ADRESH	set	4036
   127  0000                     _ADCON2	set	4032
   128  0000                     _ADCON1	set	4033
   129  0000                     _ADCON0	set	4034
   130  00060B                     STR_10:
   131  00060B  50                 	db	80	;'P'
   132  00060C  72                 	db	114	;'r'
   133  00060D  6F                 	db	111	;'o'
   134  00060E  66                 	db	102	;'f'
   135  00060F  75                 	db	117	;'u'
   136  000610  6E                 	db	110	;'n'
   137  000611  64                 	db	100	;'d'
   138  000612  6F                 	db	111	;'o'
   139  000613  72                 	db	114	;'r'
   140  000614  0A                 	db	10
   141  000615  00                 	db	0
   142  000616                     STR_24:
   143  000616  50                 	db	80	;'P'
   144  000617  72                 	db	114	;'r'
   145  000618  6F                 	db	111	;'o'
   146  000619  66                 	db	102	;'f'
   147  00061A  75                 	db	117	;'u'
   148  00061B  6E                 	db	110	;'n'
   149  00061C  64                 	db	100	;'d'
   150  00061D  6F                 	db	111	;'o'
   151  00061E  72                 	db	114	;'r'
   152  00061F  3A                 	db	58	;':'
   153  000620  00                 	db	0
   154  000621                     STR_22:
   155  000621  41                 	db	65	;'A'
   156  000622  69                 	db	105	;'i'
   157  000623  6C                 	db	108	;'l'
   158  000624  65                 	db	101	;'e'
   159  000625  72                 	db	114	;'r'
   160  000626  6F                 	db	111	;'o'
   161  000627  6E                 	db	110	;'n'
   162  000628  3A                 	db	58	;':'
   163  000629  20                 	db	32
   164  00062A  00                 	db	0
   165  00062B                     STR_8:
   166  00062B  50                 	db	80	;'P'
   167  00062C  72                 	db	114	;'r'
   168  00062D  6F                 	db	111	;'o'
   169  00062E  66                 	db	102	;'f'
   170  00062F  75                 	db	117	;'u'
   171  000630  6E                 	db	110	;'n'
   172  000631  64                 	db	100	;'d'
   173  000632  6F                 	db	111	;'o'
   174  000633  72                 	db	114	;'r'
   175  000634  00                 	db	0
   176  000635                     STR_3:
   177  000635  41                 	db	65	;'A'
   178  000636  69                 	db	105	;'i'
   179  000637  6C                 	db	108	;'l'
   180  000638  65                 	db	101	;'e'
   181  000639  72                 	db	114	;'r'
   182  00063A  6F                 	db	111	;'o'
   183  00063B  6E                 	db	110	;'n'
   184  00063C  0A                 	db	10
   185  00063D  00                 	db	0
   186  00063E                     STR_23:
   187  00063E  41                 	db	65	;'A'
   188  00063F  69                 	db	105	;'i'
   189  000640  6C                 	db	108	;'l'
   190  000641  65                 	db	101	;'e'
   191  000642  72                 	db	114	;'r'
   192  000643  6F                 	db	111	;'o'
   193  000644  6E                 	db	110	;'n'
   194  000645  3A                 	db	58	;':'
   195  000646  00                 	db	0
   196  000647                     STR_1:
   197  000647  41                 	db	65	;'A'
   198  000648  69                 	db	105	;'i'
   199  000649  6C                 	db	108	;'l'
   200  00064A  65                 	db	101	;'e'
   201  00064B  72                 	db	114	;'r'
   202  00064C  6F                 	db	111	;'o'
   203  00064D  6E                 	db	110	;'n'
   204  00064E  00                 	db	0
   205  00064F                     STR_26:
   206  00064F  20                 	db	32
   207  000650  47                 	db	71	;'G'
   208  000651  72                 	db	114	;'r'
   209  000652  61                 	db	97	;'a'
   210  000653  75                 	db	117	;'u'
   211  000654  73                 	db	115	;'s'
   212  000655  00                 	db	0
   213  000656                     STR_17:
   214  000656  4C                 	db	76	;'L'
   215  000657  65                 	db	101	;'e'
   216  000658  6D                 	db	109	;'m'
   217  000659  65                 	db	101	;'e'
   218  00065A  0A                 	db	10
   219  00065B  00                 	db	0
   220  00065C                     STR_6:
   221  00065C  4D                 	db	77	;'M'
   222  00065D  49                 	db	73	;'I'
   223  00065E  4E                 	db	78	;'N'
   224  00065F  3A                 	db	58	;':'
   225  000660  20                 	db	32
   226  000661  00                 	db	0
   227  000662                     STR_2:
   228  000662  4D                 	db	77	;'M'
   229  000663  41                 	db	65	;'A'
   230  000664  58                 	db	88	;'X'
   231  000665  3A                 	db	58	;':'
   232  000666  20                 	db	32
   233  000667  00                 	db	0
   234  000668                     STR_25:
   235  000668  4C                 	db	76	;'L'
   236  000669  65                 	db	101	;'e'
   237  00066A  6D                 	db	109	;'m'
   238  00066B  65                 	db	101	;'e'
   239  00066C  3A                 	db	58	;':'
   240  00066D  00                 	db	0
   241  00066E                     STR_15:
   242  00066E  4C                 	db	76	;'L'
   243  00066F  65                 	db	101	;'e'
   244  000670  6D                 	db	109	;'m'
   245  000671  65                 	db	101	;'e'
   246  000672  00                 	db	0
   247  000673  00                 	db	0	; dummy byte at the end
   248  0000                     
   249                           ; #config settings
   250                           
   251                           	psect	cinit
   252  002B4E                     __pcinit:
   253                           	callstack 0
   254  002B4E                     start_initialization:
   255                           	callstack 0
   256  002B4E                     __initialization:
   257                           	callstack 0
   258                           
   259                           ; Clear objects allocated to COMRAM (10 bytes)
   260  002B4E  EE00  F06D         	lfsr	0,__pbssCOMRAM
   261  002B52  0E0A               	movlw	10
   262  002B54                     clear_0:
   263  002B54  6AEE               	clrf	postinc0,c
   264  002B56  06E8               	decf	wreg,f,c
   265  002B58  E1FD               	bnz	clear_0
   266  002B5A                     end_of_initialization:
   267                           	callstack 0
   268  002B5A                     __end_of__initialization:
   269                           	callstack 0
   270  002B5A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   271  002B5C  6EF8               	movwf	tblptru,c
   272  002B5E  0100               	movlb	0
   273  002B60  EF9A  F005         	goto	_main	;jump to C main() function
   274                           
   275                           	psect	bssCOMRAM
   276  00006D                     __pbssCOMRAM:
   277                           	callstack 0
   278  00006D                     kpDebounce@oldRead:
   279                           	callstack 0
   280  00006D                     	ds	2
   281  00006F                     kpDebounce@newRead:
   282                           	callstack 0
   283  00006F                     	ds	2
   284  000071                     _keys:
   285                           	callstack 0
   286  000071                     	ds	2
   287  000073                     leTeclado@Leitura:
   288                           	callstack 0
   289  000073                     	ds	2
   290  000075                     kpDebounce@tempo:
   291                           	callstack 0
   292  000075                     	ds	1
   293  000076                     leTeclado@Retorno:
   294                           	callstack 0
   295  000076                     	ds	1
   296                           
   297                           	psect	cstackCOMRAM
   298  000001                     __pcstackCOMRAM:
   299                           	callstack 0
   300  000001                     ??_kpReadKey:
   301  000001                     ?_kpRead:
   302                           	callstack 0
   303  000001                     ?_adcRead:
   304                           	callstack 0
   305  000001                     ?_digitalRead:
   306                           	callstack 0
   307  000001                     ?___awdiv:
   308                           	callstack 0
   309  000001                     ?___xxtofl:
   310                           	callstack 0
   311  000001                     serialSend@c:
   312                           	callstack 0
   313  000001                     serialRead@resp:
   314                           	callstack 0
   315  000001                     adcRead@channel:
   316                           	callstack 0
   317  000001                     delayMicro@a:
   318                           	callstack 0
   319  000001                     delayMili@a:
   320                           	callstack 0
   321  000001                     digitalWrite@pin:
   322                           	callstack 0
   323  000001                     digitalRead@pin:
   324                           	callstack 0
   325  000001                     pinMode@pin:
   326                           	callstack 0
   327  000001                     atraso_ms@num:
   328                           	callstack 0
   329  000001                     ___awdiv@dividend:
   330                           	callstack 0
   331  000001                     ___xxtofl@val:
   332                           	callstack 0
   333                           
   334                           ; 4 bytes @ 0x0
   335  000001                     	ds	1
   336  000002                     serialReadChar@Byte:
   337                           	callstack 0
   338  000002                     serialSendString@String:
   339                           	callstack 0
   340                           
   341                           ; 2 bytes @ 0x1
   342  000002                     	ds	1
   343  000003                     ??_digitalRead:
   344  000003                     ??_delayMili:
   345  000003                     adcRead@ADvalor:
   346                           	callstack 0
   347  000003                     digitalWrite@value:
   348                           	callstack 0
   349  000003                     pinMode@type:
   350                           	callstack 0
   351  000003                     atraso_ms@i:
   352                           	callstack 0
   353  000003                     ___awdiv@divisor:
   354                           	callstack 0
   355  000003                     leSerial@Input:
   356                           	callstack 0
   357                           
   358                           ; 3 bytes @ 0x2
   359  000003                     	ds	1
   360  000004                     ??_serialSendString:
   361  000004                     kpReadKey@i:
   362                           	callstack 0
   363  000004                     delayMili@i:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0x3
   367  000004                     	ds	1
   368  000005                     ??_pinMode:
   369  000005                     ??_digitalWrite:
   370  000005                     ??___xxtofl:
   371  000005                     atraso_ms@j:
   372                           	callstack 0
   373  000005                     ___awdiv@counter:
   374                           	callstack 0
   375                           
   376                           ; 1 bytes @ 0x4
   377  000005                     	ds	1
   378  000006                     serialSendString@i:
   379                           	callstack 0
   380  000006                     atraso_ms@k:
   381                           	callstack 0
   382  000006                     ___awdiv@sign:
   383                           	callstack 0
   384                           
   385                           ; 1 bytes @ 0x5
   386  000006                     	ds	1
   387  000007                     soWrite@value:
   388                           	callstack 0
   389  000007                     ___awdiv@quotient:
   390                           	callstack 0
   391                           
   392                           ; 2 bytes @ 0x6
   393  000007                     	ds	2
   394  000009                     ?___awmod:
   395                           	callstack 0
   396  000009                     soWrite@i:
   397                           	callstack 0
   398  000009                     ___xxtofl@sign:
   399                           	callstack 0
   400  000009                     ___awmod@dividend:
   401                           	callstack 0
   402                           
   403                           ; 2 bytes @ 0x8
   404  000009                     	ds	1
   405  00000A                     ??_kpDebounce:
   406  00000A                     ___xxtofl@exp:
   407                           	callstack 0
   408  00000A                     pushNibble@rs:
   409                           	callstack 0
   410  00000A                     pushByte@rs:
   411                           	callstack 0
   412                           
   413                           ; 2 bytes @ 0x9
   414  00000A                     	ds	1
   415  00000B                     ___awmod@divisor:
   416                           	callstack 0
   417  00000B                     ___xxtofl@arg:
   418                           	callstack 0
   419                           
   420                           ; 4 bytes @ 0xA
   421  00000B                     	ds	1
   422  00000C                     ??_pushByte:
   423  00000C                     pushNibble@value:
   424                           	callstack 0
   425                           
   426                           ; 1 bytes @ 0xB
   427  00000C                     	ds	1
   428  00000D                     pushByte@value:
   429                           	callstack 0
   430  00000D                     ___awmod@counter:
   431                           	callstack 0
   432  00000D                     kpDebounce@i:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0xC
   436  00000D                     	ds	1
   437  00000E                     lcdCommand@value:
   438                           	callstack 0
   439  00000E                     lcdChar@value:
   440                           	callstack 0
   441  00000E                     ___awmod@sign:
   442                           	callstack 0
   443                           
   444                           ; 1 bytes @ 0xD
   445  00000E                     	ds	1
   446  00000F                     ?___fldiv:
   447                           	callstack 0
   448  00000F                     lcdString@msg:
   449                           	callstack 0
   450  00000F                     lcdNumber@value:
   451                           	callstack 0
   452  00000F                     ___fldiv@b:
   453                           	callstack 0
   454                           
   455                           ; 4 bytes @ 0xE
   456  00000F                     	ds	2
   457  000011                     ??_lcdString:
   458  000011                     lcdNumber@i:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0x10
   462  000011                     	ds	2
   463  000013                     lcdString@i:
   464                           	callstack 0
   465  000013                     ___fldiv@a:
   466                           	callstack 0
   467                           
   468                           ; 4 bytes @ 0x12
   469  000013                     	ds	2
   470  000015                     ??_leTeclado:
   471                           
   472                           ; 1 bytes @ 0x14
   473  000015                     	ds	2
   474  000017                     ??___fldiv:
   475                           
   476                           ; 1 bytes @ 0x16
   477  000017                     	ds	4
   478  00001B                     ___fldiv@rem:
   479                           	callstack 0
   480                           
   481                           ; 4 bytes @ 0x1A
   482  00001B                     	ds	4
   483  00001F                     ___fldiv@sign:
   484                           	callstack 0
   485                           
   486                           ; 1 bytes @ 0x1E
   487  00001F                     	ds	1
   488  000020                     ___fldiv@new_exp:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0x1F
   492  000020                     	ds	2
   493  000022                     ___fldiv@grs:
   494                           	callstack 0
   495                           
   496                           ; 4 bytes @ 0x21
   497  000022                     	ds	4
   498  000026                     ___fldiv@bexp:
   499                           	callstack 0
   500                           
   501                           ; 1 bytes @ 0x25
   502  000026                     	ds	1
   503  000027                     ___fldiv@aexp:
   504                           	callstack 0
   505                           
   506                           ; 1 bytes @ 0x26
   507  000027                     	ds	1
   508  000028                     ?___flmul:
   509                           	callstack 0
   510  000028                     ___flmul@b:
   511                           	callstack 0
   512                           
   513                           ; 4 bytes @ 0x27
   514  000028                     	ds	4
   515  00002C                     ___flmul@a:
   516                           	callstack 0
   517                           
   518                           ; 4 bytes @ 0x2B
   519  00002C                     	ds	4
   520  000030                     ??___flmul:
   521                           
   522                           ; 1 bytes @ 0x2F
   523  000030                     	ds	4
   524  000034                     ___flmul@sign:
   525                           	callstack 0
   526                           
   527                           ; 1 bytes @ 0x33
   528  000034                     	ds	1
   529  000035                     ___flmul@grs:
   530                           	callstack 0
   531                           
   532                           ; 4 bytes @ 0x34
   533  000035                     	ds	4
   534  000039                     ___flmul@aexp:
   535                           	callstack 0
   536                           
   537                           ; 1 bytes @ 0x38
   538  000039                     	ds	1
   539  00003A                     ___flmul@bexp:
   540                           	callstack 0
   541                           
   542                           ; 1 bytes @ 0x39
   543  00003A                     	ds	1
   544  00003B                     ___flmul@prod:
   545                           	callstack 0
   546                           
   547                           ; 4 bytes @ 0x3A
   548  00003B                     	ds	4
   549  00003F                     ___flmul@temp:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0x3E
   553  00003F                     	ds	2
   554  000041                     ?___fladd:
   555                           	callstack 0
   556  000041                     ___fladd@b:
   557                           	callstack 0
   558                           
   559                           ; 4 bytes @ 0x40
   560  000041                     	ds	4
   561  000045                     ___fladd@a:
   562                           	callstack 0
   563                           
   564                           ; 4 bytes @ 0x44
   565  000045                     	ds	4
   566  000049                     ??___fladd:
   567                           
   568                           ; 1 bytes @ 0x48
   569  000049                     	ds	4
   570  00004D                     ___fladd@signs:
   571                           	callstack 0
   572                           
   573                           ; 1 bytes @ 0x4C
   574  00004D                     	ds	1
   575  00004E                     ___fladd@aexp:
   576                           	callstack 0
   577                           
   578                           ; 1 bytes @ 0x4D
   579  00004E                     	ds	1
   580  00004F                     ___fladd@bexp:
   581                           	callstack 0
   582                           
   583                           ; 1 bytes @ 0x4E
   584  00004F                     	ds	1
   585  000050                     ___fladd@grs:
   586                           	callstack 0
   587                           
   588                           ; 1 bytes @ 0x4F
   589  000050                     	ds	1
   590  000051                     ?___fltol:
   591                           	callstack 0
   592  000051                     ___fltol@f1:
   593                           	callstack 0
   594                           
   595                           ; 4 bytes @ 0x50
   596  000051                     	ds	4
   597  000055                     ??___fltol:
   598                           
   599                           ; 1 bytes @ 0x54
   600  000055                     	ds	4
   601  000059                     ___fltol@sign1:
   602                           	callstack 0
   603                           
   604                           ; 1 bytes @ 0x58
   605  000059                     	ds	1
   606  00005A                     ___fltol@exp1:
   607                           	callstack 0
   608                           
   609                           ; 1 bytes @ 0x59
   610  00005A                     	ds	1
   611  00005B                     leADC@Min:
   612                           	callstack 0
   613                           
   614                           ; 1 bytes @ 0x5A
   615  00005B                     	ds	1
   616  00005C                     ??_leADC:
   617                           
   618                           ; 1 bytes @ 0x5B
   619  00005C                     	ds	2
   620  00005E                     leADC@ValorADC:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x5D
   624  00005E                     	ds	2
   625  000060                     leADC@Max:
   626                           	callstack 0
   627                           
   628                           ; 1 bytes @ 0x5F
   629  000060                     	ds	1
   630  000061                     leADC@x:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x60
   634  000061                     	ds	2
   635  000063                     ??_main:
   636                           
   637                           ; 1 bytes @ 0x62
   638  000063                     	ds	2
   639  000065                     main@Slot:
   640                           	callstack 0
   641                           
   642                           ; 1 bytes @ 0x64
   643  000065                     	ds	1
   644  000066                     main@Superfice:
   645                           	callstack 0
   646                           
   647                           ; 1 bytes @ 0x65
   648  000066                     	ds	1
   649  000067                     main@Max:
   650                           	callstack 0
   651                           
   652                           ; 3 bytes @ 0x66
   653  000067                     	ds	3
   654  00006A                     main@Min:
   655                           	callstack 0
   656                           
   657                           ; 3 bytes @ 0x69
   658  00006A                     	ds	3
   659                           
   660 ;;
   661 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   662 ;;
   663 ;; *************** function _main *****************
   664 ;; Defined at:
   665 ;;		line 24 in file "main.c"
   666 ;; Parameters:    Size  Location     Type
   667 ;;		None
   668 ;; Auto vars:     Size  Location     Type
   669 ;;  Min             3  105[COMRAM] unsigned char [3]
   670 ;;  Max             3  102[COMRAM] unsigned char [3]
   671 ;;  Superfice       1  101[COMRAM] unsigned char 
   672 ;;  Slot            1  100[COMRAM] unsigned char 
   673 ;; Return value:  Size  Location     Type
   674 ;;                  1    wreg      void 
   675 ;; Registers used:
   676 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   677 ;; Tracked objects:
   678 ;;		On entry : 0/0
   679 ;;		On exit  : 0/0
   680 ;;		Unchanged: 0/0
   681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   682 ;;      Params:         0       0       0       0       0       0       0
   683 ;;      Locals:         8       0       0       0       0       0       0
   684 ;;      Temps:          2       0       0       0       0       0       0
   685 ;;      Totals:        10       0       0       0       0       0       0
   686 ;;Total ram usage:       10 bytes
   687 ;; Hardware stack levels required when called: 7
   688 ;; This function calls:
   689 ;;		___awdiv
   690 ;;		___awmod
   691 ;;		_adcInit
   692 ;;		_atraso_ms
   693 ;;		_kpDebounce
   694 ;;		_kpInit
   695 ;;		_lcdCommand
   696 ;;		_lcdInit
   697 ;;		_lcdNumber
   698 ;;		_lcdString
   699 ;;		_leADC
   700 ;;		_leSerial
   701 ;;		_leTeclado
   702 ;;		_serialInit
   703 ;;		_serialSend
   704 ;;		_serialSendString
   705 ;; This function is called by:
   706 ;;		Startup code after reset
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710                           	psect	text0
   711  000B34                     __ptext0:
   712                           	callstack 0
   713  000B34                     _main:
   714                           	callstack 24
   715  000B34                     
   716                           ;main.c: 25:     unsigned char Slot = 0;
   717  000B34  0E00               	movlw	0
   718  000B36  6E65               	movwf	main@Slot^0,c
   719                           
   720                           ;main.c: 26:     unsigned char Superfice = 0;
   721  000B38  0E00               	movlw	0
   722  000B3A  6E66               	movwf	main@Superfice^0,c
   723  000B3C                     
   724                           ;main.c: 27:     unsigned char Max[3], Min[3];;main.c: 29:     kpInit();
   725  000B3C  ECDC  F014         	call	_kpInit	;wreg free
   726  000B40                     
   727                           ;main.c: 30:     adcInit();
   728  000B40  EC78  F014         	call	_adcInit	;wreg free
   729  000B44                     
   730                           ;main.c: 31:     lcdInit();
   731  000B44  ECF6  F011         	call	_lcdInit	;wreg free
   732  000B48                     
   733                           ;main.c: 32:     serialInit();
   734  000B48  EC8D  F015         	call	_serialInit	;wreg free
   735  000B4C                     
   736                           ;main.c: 35:     lcdCommand(0x01);
   737  000B4C  0E01               	movlw	1
   738  000B4E  EC7E  F015         	call	_lcdCommand
   739  000B52                     
   740                           ;main.c: 36:     lcdCommand(0x80);
   741  000B52  0E80               	movlw	128
   742  000B54  EC7E  F015         	call	_lcdCommand
   743  000B58                     
   744                           ;main.c: 37:     lcdString("Aileron");
   745  000B58  0E47               	movlw	low STR_1
   746  000B5A  6E0F               	movwf	lcdString@msg^0,c
   747  000B5C  0E06               	movlw	high STR_1
   748  000B5E  6E10               	movwf	(lcdString@msg+1)^0,c
   749  000B60  ECD6  F013         	call	_lcdString	;wreg free
   750  000B64                     
   751                           ;main.c: 38:     lcdCommand(0xC0);
   752  000B64  0EC0               	movlw	192
   753  000B66  EC7E  F015         	call	_lcdCommand
   754  000B6A                     
   755                           ;main.c: 39:     lcdString("MAX: ");
   756  000B6A  0E62               	movlw	low STR_2
   757  000B6C  6E0F               	movwf	lcdString@msg^0,c
   758  000B6E  0E06               	movlw	high STR_2
   759  000B70  6E10               	movwf	(lcdString@msg+1)^0,c
   760  000B72  ECD6  F013         	call	_lcdString	;wreg free
   761  000B76                     
   762                           ;main.c: 41:     serialSendString("Aileron\n");
   763  000B76  0E35               	movlw	low STR_3
   764  000B78  6E02               	movwf	serialSendString@String^0,c
   765  000B7A  0E06               	movlw	high STR_3
   766  000B7C  6E03               	movwf	(serialSendString@String+1)^0,c
   767  000B7E  EC01  F014         	call	_serialSendString	;wreg free
   768  000B82                     
   769                           ;main.c: 42:     serialSendString("MAX: ");
   770  000B82  0E62               	movlw	low STR_2
   771  000B84  6E02               	movwf	serialSendString@String^0,c
   772  000B86  0E06               	movlw	high STR_2
   773  000B88  6E03               	movwf	(serialSendString@String+1)^0,c
   774  000B8A  EC01  F014         	call	_serialSendString	;wreg free
   775  000B8E                     
   776                           ;main.c: 44:     Max[0] = leSerial();
   777  000B8E  EC60  F015         	call	_leSerial	;wreg free
   778  000B92  6E67               	movwf	main@Max^0,c
   779  000B94                     
   780                           ;main.c: 46:     lcdNumber(Max[0]);
   781  000B94  C067  F00F         	movff	main@Max,lcdNumber@value
   782  000B98  6A10               	clrf	(lcdNumber@value+1)^0,c
   783  000B9A  EC3D  F013         	call	_lcdNumber	;wreg free
   784  000B9E                     
   785                           ;main.c: 48:     serialSend((Max[0]/10) % 10 + '0');
   786  000B9E  0E00               	movlw	0
   787  000BA0  6E04               	movwf	(___awdiv@divisor+1)^0,c
   788  000BA2  0E0A               	movlw	10
   789  000BA4  6E03               	movwf	___awdiv@divisor^0,c
   790  000BA6  C067  F001         	movff	main@Max,___awdiv@dividend
   791  000BAA  6A02               	clrf	(___awdiv@dividend+1)^0,c
   792  000BAC  EC94  F011         	call	___awdiv	;wreg free
   793  000BB0  C001  F009         	movff	?___awdiv,___awmod@dividend
   794  000BB4  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   795  000BB8  0E00               	movlw	0
   796  000BBA  6E0C               	movwf	(___awmod@divisor+1)^0,c
   797  000BBC  0E0A               	movlw	10
   798  000BBE  6E0B               	movwf	___awmod@divisor^0,c
   799  000BC0  ECA9  F012         	call	___awmod	;wreg free
   800  000BC4  5009               	movf	?___awmod^0,w,c
   801  000BC6  0F30               	addlw	48
   802  000BC8  ECB2  F015         	call	_serialSend
   803  000BCC                     
   804                           ;main.c: 49:     serialSend((Max[0]/1) % 10 + '0');
   805  000BCC  C067  F009         	movff	main@Max,___awmod@dividend
   806  000BD0  6A0A               	clrf	(___awmod@dividend+1)^0,c
   807  000BD2  0E00               	movlw	0
   808  000BD4  6E0C               	movwf	(___awmod@divisor+1)^0,c
   809  000BD6  0E0A               	movlw	10
   810  000BD8  6E0B               	movwf	___awmod@divisor^0,c
   811  000BDA  ECA9  F012         	call	___awmod	;wreg free
   812  000BDE  5009               	movf	?___awmod^0,w,c
   813  000BE0  0F30               	addlw	48
   814  000BE2  ECB2  F015         	call	_serialSend
   815  000BE6                     
   816                           ;main.c: 50:     serialSend('\n');
   817  000BE6  0E0A               	movlw	10
   818  000BE8  ECB2  F015         	call	_serialSend
   819  000BEC                     
   820                           ;main.c: 52:     atraso_ms(2000);
   821  000BEC  0E07               	movlw	7
   822  000BEE  6E02               	movwf	(atraso_ms@num+1)^0,c
   823  000BF0  0ED0               	movlw	208
   824  000BF2  6E01               	movwf	atraso_ms@num^0,c
   825  000BF4  EC77  F013         	call	_atraso_ms	;wreg free
   826  000BF8                     
   827                           ;main.c: 54:     lcdCommand(0x01);
   828  000BF8  0E01               	movlw	1
   829  000BFA  EC7E  F015         	call	_lcdCommand
   830  000BFE                     
   831                           ;main.c: 55:     lcdCommand(0x80);
   832  000BFE  0E80               	movlw	128
   833  000C00  EC7E  F015         	call	_lcdCommand
   834  000C04                     
   835                           ;main.c: 56:     lcdString("Aileron");
   836  000C04  0E47               	movlw	low STR_1
   837  000C06  6E0F               	movwf	lcdString@msg^0,c
   838  000C08  0E06               	movlw	high STR_1
   839  000C0A  6E10               	movwf	(lcdString@msg+1)^0,c
   840  000C0C  ECD6  F013         	call	_lcdString	;wreg free
   841  000C10                     
   842                           ;main.c: 57:     lcdCommand(0xC0);
   843  000C10  0EC0               	movlw	192
   844  000C12  EC7E  F015         	call	_lcdCommand
   845  000C16                     
   846                           ;main.c: 58:     lcdString("MIN: ");
   847  000C16  0E5C               	movlw	low STR_6
   848  000C18  6E0F               	movwf	lcdString@msg^0,c
   849  000C1A  0E06               	movlw	high STR_6
   850  000C1C  6E10               	movwf	(lcdString@msg+1)^0,c
   851  000C1E  ECD6  F013         	call	_lcdString	;wreg free
   852  000C22                     
   853                           ;main.c: 60:     serialSendString("MIN: ");
   854  000C22  0E5C               	movlw	low STR_6
   855  000C24  6E02               	movwf	serialSendString@String^0,c
   856  000C26  0E06               	movlw	high STR_6
   857  000C28  6E03               	movwf	(serialSendString@String+1)^0,c
   858  000C2A  EC01  F014         	call	_serialSendString	;wreg free
   859  000C2E                     
   860                           ;main.c: 62:     Min[0] = leSerial();
   861  000C2E  EC60  F015         	call	_leSerial	;wreg free
   862  000C32  6E6A               	movwf	main@Min^0,c
   863  000C34                     
   864                           ;main.c: 64:     lcdNumber(Min[0]);
   865  000C34  C06A  F00F         	movff	main@Min,lcdNumber@value
   866  000C38  6A10               	clrf	(lcdNumber@value+1)^0,c
   867  000C3A  EC3D  F013         	call	_lcdNumber	;wreg free
   868  000C3E                     
   869                           ;main.c: 66:     serialSend((Min[0]/10) % 10 + '0');
   870  000C3E  0E00               	movlw	0
   871  000C40  6E04               	movwf	(___awdiv@divisor+1)^0,c
   872  000C42  0E0A               	movlw	10
   873  000C44  6E03               	movwf	___awdiv@divisor^0,c
   874  000C46  C06A  F001         	movff	main@Min,___awdiv@dividend
   875  000C4A  6A02               	clrf	(___awdiv@dividend+1)^0,c
   876  000C4C  EC94  F011         	call	___awdiv	;wreg free
   877  000C50  C001  F009         	movff	?___awdiv,___awmod@dividend
   878  000C54  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   879  000C58  0E00               	movlw	0
   880  000C5A  6E0C               	movwf	(___awmod@divisor+1)^0,c
   881  000C5C  0E0A               	movlw	10
   882  000C5E  6E0B               	movwf	___awmod@divisor^0,c
   883  000C60  ECA9  F012         	call	___awmod	;wreg free
   884  000C64  5009               	movf	?___awmod^0,w,c
   885  000C66  0F30               	addlw	48
   886  000C68  ECB2  F015         	call	_serialSend
   887  000C6C                     
   888                           ;main.c: 67:     serialSend((Min[0]/1) % 10 + '0');
   889  000C6C  C06A  F009         	movff	main@Min,___awmod@dividend
   890  000C70  6A0A               	clrf	(___awmod@dividend+1)^0,c
   891  000C72  0E00               	movlw	0
   892  000C74  6E0C               	movwf	(___awmod@divisor+1)^0,c
   893  000C76  0E0A               	movlw	10
   894  000C78  6E0B               	movwf	___awmod@divisor^0,c
   895  000C7A  ECA9  F012         	call	___awmod	;wreg free
   896  000C7E  5009               	movf	?___awmod^0,w,c
   897  000C80  0F30               	addlw	48
   898  000C82  ECB2  F015         	call	_serialSend
   899  000C86                     
   900                           ;main.c: 68:     serialSend('\n');
   901  000C86  0E0A               	movlw	10
   902  000C88  ECB2  F015         	call	_serialSend
   903  000C8C                     
   904                           ;main.c: 70:     atraso_ms(2000);
   905  000C8C  0E07               	movlw	7
   906  000C8E  6E02               	movwf	(atraso_ms@num+1)^0,c
   907  000C90  0ED0               	movlw	208
   908  000C92  6E01               	movwf	atraso_ms@num^0,c
   909  000C94  EC77  F013         	call	_atraso_ms	;wreg free
   910  000C98                     
   911                           ;main.c: 74:     lcdCommand(0x01);
   912  000C98  0E01               	movlw	1
   913  000C9A  EC7E  F015         	call	_lcdCommand
   914  000C9E                     
   915                           ;main.c: 75:     lcdCommand(0x80);
   916  000C9E  0E80               	movlw	128
   917  000CA0  EC7E  F015         	call	_lcdCommand
   918  000CA4                     
   919                           ;main.c: 76:     lcdString("Profundor");
   920  000CA4  0E2B               	movlw	low STR_8
   921  000CA6  6E0F               	movwf	lcdString@msg^0,c
   922  000CA8  0E06               	movlw	high STR_8
   923  000CAA  6E10               	movwf	(lcdString@msg+1)^0,c
   924  000CAC  ECD6  F013         	call	_lcdString	;wreg free
   925  000CB0                     
   926                           ;main.c: 77:     lcdCommand(0xC0);
   927  000CB0  0EC0               	movlw	192
   928  000CB2  EC7E  F015         	call	_lcdCommand
   929  000CB6                     
   930                           ;main.c: 78:     lcdString("MAX: ");
   931  000CB6  0E62               	movlw	low STR_2
   932  000CB8  6E0F               	movwf	lcdString@msg^0,c
   933  000CBA  0E06               	movlw	high STR_2
   934  000CBC  6E10               	movwf	(lcdString@msg+1)^0,c
   935  000CBE  ECD6  F013         	call	_lcdString	;wreg free
   936  000CC2                     
   937                           ;main.c: 80:     serialSendString("Profundor\n");
   938  000CC2  0E0B               	movlw	low STR_10
   939  000CC4  6E02               	movwf	serialSendString@String^0,c
   940  000CC6  0E06               	movlw	high STR_10
   941  000CC8  6E03               	movwf	(serialSendString@String+1)^0,c
   942  000CCA  EC01  F014         	call	_serialSendString	;wreg free
   943  000CCE                     
   944                           ;main.c: 81:     serialSendString("MAX: ");
   945  000CCE  0E62               	movlw	low STR_2
   946  000CD0  6E02               	movwf	serialSendString@String^0,c
   947  000CD2  0E06               	movlw	high STR_2
   948  000CD4  6E03               	movwf	(serialSendString@String+1)^0,c
   949  000CD6  EC01  F014         	call	_serialSendString	;wreg free
   950  000CDA                     
   951                           ;main.c: 83:     Max[1] = leSerial();
   952  000CDA  EC60  F015         	call	_leSerial	;wreg free
   953  000CDE  6E68               	movwf	(main@Max+1)^0,c
   954  000CE0                     
   955                           ;main.c: 85:     lcdNumber(Max[1]);
   956  000CE0  C068  F00F         	movff	main@Max+1,lcdNumber@value
   957  000CE4  6A10               	clrf	(lcdNumber@value+1)^0,c
   958  000CE6  EC3D  F013         	call	_lcdNumber	;wreg free
   959  000CEA                     
   960                           ;main.c: 87:     serialSend((Max[1]/10) % 10 + '0');
   961  000CEA  0E00               	movlw	0
   962  000CEC  6E04               	movwf	(___awdiv@divisor+1)^0,c
   963  000CEE  0E0A               	movlw	10
   964  000CF0  6E03               	movwf	___awdiv@divisor^0,c
   965  000CF2  C068  F001         	movff	main@Max+1,___awdiv@dividend
   966  000CF6  6A02               	clrf	(___awdiv@dividend+1)^0,c
   967  000CF8  EC94  F011         	call	___awdiv	;wreg free
   968  000CFC  C001  F009         	movff	?___awdiv,___awmod@dividend
   969  000D00  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   970  000D04  0E00               	movlw	0
   971  000D06  6E0C               	movwf	(___awmod@divisor+1)^0,c
   972  000D08  0E0A               	movlw	10
   973  000D0A  6E0B               	movwf	___awmod@divisor^0,c
   974  000D0C  ECA9  F012         	call	___awmod	;wreg free
   975  000D10  5009               	movf	?___awmod^0,w,c
   976  000D12  0F30               	addlw	48
   977  000D14  ECB2  F015         	call	_serialSend
   978  000D18                     
   979                           ;main.c: 88:     serialSend((Max[1]/1) % 10 + '0');
   980  000D18  C068  F009         	movff	main@Max+1,___awmod@dividend
   981  000D1C  6A0A               	clrf	(___awmod@dividend+1)^0,c
   982  000D1E  0E00               	movlw	0
   983  000D20  6E0C               	movwf	(___awmod@divisor+1)^0,c
   984  000D22  0E0A               	movlw	10
   985  000D24  6E0B               	movwf	___awmod@divisor^0,c
   986  000D26  ECA9  F012         	call	___awmod	;wreg free
   987  000D2A  5009               	movf	?___awmod^0,w,c
   988  000D2C  0F30               	addlw	48
   989  000D2E  ECB2  F015         	call	_serialSend
   990  000D32                     
   991                           ;main.c: 89:     serialSend('\n');
   992  000D32  0E0A               	movlw	10
   993  000D34  ECB2  F015         	call	_serialSend
   994  000D38                     
   995                           ;main.c: 91:     atraso_ms(2000);
   996  000D38  0E07               	movlw	7
   997  000D3A  6E02               	movwf	(atraso_ms@num+1)^0,c
   998  000D3C  0ED0               	movlw	208
   999  000D3E  6E01               	movwf	atraso_ms@num^0,c
  1000  000D40  EC77  F013         	call	_atraso_ms	;wreg free
  1001  000D44                     
  1002                           ;main.c: 93:     lcdCommand(0x01);
  1003  000D44  0E01               	movlw	1
  1004  000D46  EC7E  F015         	call	_lcdCommand
  1005  000D4A                     
  1006                           ;main.c: 94:     lcdCommand(0x80);
  1007  000D4A  0E80               	movlw	128
  1008  000D4C  EC7E  F015         	call	_lcdCommand
  1009  000D50                     
  1010                           ;main.c: 95:     lcdString("Profundor");
  1011  000D50  0E2B               	movlw	low STR_8
  1012  000D52  6E0F               	movwf	lcdString@msg^0,c
  1013  000D54  0E06               	movlw	high STR_8
  1014  000D56  6E10               	movwf	(lcdString@msg+1)^0,c
  1015  000D58  ECD6  F013         	call	_lcdString	;wreg free
  1016  000D5C                     
  1017                           ;main.c: 96:     lcdCommand(0xC0);
  1018  000D5C  0EC0               	movlw	192
  1019  000D5E  EC7E  F015         	call	_lcdCommand
  1020  000D62                     
  1021                           ;main.c: 97:     lcdString("MIN: ");
  1022  000D62  0E5C               	movlw	low STR_6
  1023  000D64  6E0F               	movwf	lcdString@msg^0,c
  1024  000D66  0E06               	movlw	high STR_6
  1025  000D68  6E10               	movwf	(lcdString@msg+1)^0,c
  1026  000D6A  ECD6  F013         	call	_lcdString	;wreg free
  1027  000D6E                     
  1028                           ;main.c: 99:     serialSendString("MIN: ");
  1029  000D6E  0E5C               	movlw	low STR_6
  1030  000D70  6E02               	movwf	serialSendString@String^0,c
  1031  000D72  0E06               	movlw	high STR_6
  1032  000D74  6E03               	movwf	(serialSendString@String+1)^0,c
  1033  000D76  EC01  F014         	call	_serialSendString	;wreg free
  1034  000D7A                     
  1035                           ;main.c: 101:     Min[1] = leSerial();
  1036  000D7A  EC60  F015         	call	_leSerial	;wreg free
  1037  000D7E  6E6B               	movwf	(main@Min+1)^0,c
  1038  000D80                     
  1039                           ;main.c: 103:     lcdNumber(Min[1]);
  1040  000D80  C06B  F00F         	movff	main@Min+1,lcdNumber@value
  1041  000D84  6A10               	clrf	(lcdNumber@value+1)^0,c
  1042  000D86  EC3D  F013         	call	_lcdNumber	;wreg free
  1043  000D8A                     
  1044                           ;main.c: 105:     serialSend((Min[1]/10) % 10 + '0');
  1045  000D8A  0E00               	movlw	0
  1046  000D8C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1047  000D8E  0E0A               	movlw	10
  1048  000D90  6E03               	movwf	___awdiv@divisor^0,c
  1049  000D92  C06B  F001         	movff	main@Min+1,___awdiv@dividend
  1050  000D96  6A02               	clrf	(___awdiv@dividend+1)^0,c
  1051  000D98  EC94  F011         	call	___awdiv	;wreg free
  1052  000D9C  C001  F009         	movff	?___awdiv,___awmod@dividend
  1053  000DA0  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1054  000DA4  0E00               	movlw	0
  1055  000DA6  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1056  000DA8  0E0A               	movlw	10
  1057  000DAA  6E0B               	movwf	___awmod@divisor^0,c
  1058  000DAC  ECA9  F012         	call	___awmod	;wreg free
  1059  000DB0  5009               	movf	?___awmod^0,w,c
  1060  000DB2  0F30               	addlw	48
  1061  000DB4  ECB2  F015         	call	_serialSend
  1062  000DB8                     
  1063                           ;main.c: 106:     serialSend((Min[1]/1) % 10 + '0');
  1064  000DB8  C06B  F009         	movff	main@Min+1,___awmod@dividend
  1065  000DBC  6A0A               	clrf	(___awmod@dividend+1)^0,c
  1066  000DBE  0E00               	movlw	0
  1067  000DC0  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1068  000DC2  0E0A               	movlw	10
  1069  000DC4  6E0B               	movwf	___awmod@divisor^0,c
  1070  000DC6  ECA9  F012         	call	___awmod	;wreg free
  1071  000DCA  5009               	movf	?___awmod^0,w,c
  1072  000DCC  0F30               	addlw	48
  1073  000DCE  ECB2  F015         	call	_serialSend
  1074  000DD2                     
  1075                           ;main.c: 107:     serialSend('\n');
  1076  000DD2  0E0A               	movlw	10
  1077  000DD4  ECB2  F015         	call	_serialSend
  1078  000DD8                     
  1079                           ;main.c: 109:     atraso_ms(2000);
  1080  000DD8  0E07               	movlw	7
  1081  000DDA  6E02               	movwf	(atraso_ms@num+1)^0,c
  1082  000DDC  0ED0               	movlw	208
  1083  000DDE  6E01               	movwf	atraso_ms@num^0,c
  1084  000DE0  EC77  F013         	call	_atraso_ms	;wreg free
  1085  000DE4                     
  1086                           ;main.c: 114:     lcdCommand(0x01);
  1087  000DE4  0E01               	movlw	1
  1088  000DE6  EC7E  F015         	call	_lcdCommand
  1089  000DEA                     
  1090                           ;main.c: 115:     lcdCommand(0x80);
  1091  000DEA  0E80               	movlw	128
  1092  000DEC  EC7E  F015         	call	_lcdCommand
  1093  000DF0                     
  1094                           ;main.c: 116:     lcdString("Leme");
  1095  000DF0  0E6E               	movlw	low STR_15
  1096  000DF2  6E0F               	movwf	lcdString@msg^0,c
  1097  000DF4  0E06               	movlw	high STR_15
  1098  000DF6  6E10               	movwf	(lcdString@msg+1)^0,c
  1099  000DF8  ECD6  F013         	call	_lcdString	;wreg free
  1100  000DFC                     
  1101                           ;main.c: 117:     lcdCommand(0xC0);
  1102  000DFC  0EC0               	movlw	192
  1103  000DFE  EC7E  F015         	call	_lcdCommand
  1104  000E02                     
  1105                           ;main.c: 118:     lcdString("MAX: ");
  1106  000E02  0E62               	movlw	low STR_2
  1107  000E04  6E0F               	movwf	lcdString@msg^0,c
  1108  000E06  0E06               	movlw	high STR_2
  1109  000E08  6E10               	movwf	(lcdString@msg+1)^0,c
  1110  000E0A  ECD6  F013         	call	_lcdString	;wreg free
  1111  000E0E                     
  1112                           ;main.c: 120:     serialSendString("Leme\n");
  1113  000E0E  0E56               	movlw	low STR_17
  1114  000E10  6E02               	movwf	serialSendString@String^0,c
  1115  000E12  0E06               	movlw	high STR_17
  1116  000E14  6E03               	movwf	(serialSendString@String+1)^0,c
  1117  000E16  EC01  F014         	call	_serialSendString	;wreg free
  1118  000E1A                     
  1119                           ;main.c: 121:     serialSendString("MAX: ");
  1120  000E1A  0E62               	movlw	low STR_2
  1121  000E1C  6E02               	movwf	serialSendString@String^0,c
  1122  000E1E  0E06               	movlw	high STR_2
  1123  000E20  6E03               	movwf	(serialSendString@String+1)^0,c
  1124  000E22  EC01  F014         	call	_serialSendString	;wreg free
  1125  000E26                     
  1126                           ;main.c: 123:     Max[2] = leSerial();
  1127  000E26  EC60  F015         	call	_leSerial	;wreg free
  1128  000E2A  6E69               	movwf	(main@Max+2)^0,c
  1129  000E2C                     
  1130                           ;main.c: 125:     lcdNumber(Max[2]);
  1131  000E2C  C069  F00F         	movff	main@Max+2,lcdNumber@value
  1132  000E30  6A10               	clrf	(lcdNumber@value+1)^0,c
  1133  000E32  EC3D  F013         	call	_lcdNumber	;wreg free
  1134  000E36                     
  1135                           ;main.c: 127:     serialSend((Max[2]/10) % 10 + '0');
  1136  000E36  0E00               	movlw	0
  1137  000E38  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1138  000E3A  0E0A               	movlw	10
  1139  000E3C  6E03               	movwf	___awdiv@divisor^0,c
  1140  000E3E  C069  F001         	movff	main@Max+2,___awdiv@dividend
  1141  000E42  6A02               	clrf	(___awdiv@dividend+1)^0,c
  1142  000E44  EC94  F011         	call	___awdiv	;wreg free
  1143  000E48  C001  F009         	movff	?___awdiv,___awmod@dividend
  1144  000E4C  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1145  000E50  0E00               	movlw	0
  1146  000E52  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1147  000E54  0E0A               	movlw	10
  1148  000E56  6E0B               	movwf	___awmod@divisor^0,c
  1149  000E58  ECA9  F012         	call	___awmod	;wreg free
  1150  000E5C  5009               	movf	?___awmod^0,w,c
  1151  000E5E  0F30               	addlw	48
  1152  000E60  ECB2  F015         	call	_serialSend
  1153  000E64                     
  1154                           ;main.c: 128:     serialSend((Max[2]/1) % 10 + '0');
  1155  000E64  C069  F009         	movff	main@Max+2,___awmod@dividend
  1156  000E68  6A0A               	clrf	(___awmod@dividend+1)^0,c
  1157  000E6A  0E00               	movlw	0
  1158  000E6C  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1159  000E6E  0E0A               	movlw	10
  1160  000E70  6E0B               	movwf	___awmod@divisor^0,c
  1161  000E72  ECA9  F012         	call	___awmod	;wreg free
  1162  000E76  5009               	movf	?___awmod^0,w,c
  1163  000E78  0F30               	addlw	48
  1164  000E7A  ECB2  F015         	call	_serialSend
  1165  000E7E                     
  1166                           ;main.c: 129:     serialSend('\n');
  1167  000E7E  0E0A               	movlw	10
  1168  000E80  ECB2  F015         	call	_serialSend
  1169  000E84                     
  1170                           ;main.c: 131:     atraso_ms(2000);
  1171  000E84  0E07               	movlw	7
  1172  000E86  6E02               	movwf	(atraso_ms@num+1)^0,c
  1173  000E88  0ED0               	movlw	208
  1174  000E8A  6E01               	movwf	atraso_ms@num^0,c
  1175  000E8C  EC77  F013         	call	_atraso_ms	;wreg free
  1176  000E90                     
  1177                           ;main.c: 133:     lcdCommand(0x01);
  1178  000E90  0E01               	movlw	1
  1179  000E92  EC7E  F015         	call	_lcdCommand
  1180  000E96                     
  1181                           ;main.c: 134:     lcdCommand(0x80);
  1182  000E96  0E80               	movlw	128
  1183  000E98  EC7E  F015         	call	_lcdCommand
  1184  000E9C                     
  1185                           ;main.c: 135:     lcdString("Leme");
  1186  000E9C  0E6E               	movlw	low STR_15
  1187  000E9E  6E0F               	movwf	lcdString@msg^0,c
  1188  000EA0  0E06               	movlw	high STR_15
  1189  000EA2  6E10               	movwf	(lcdString@msg+1)^0,c
  1190  000EA4  ECD6  F013         	call	_lcdString	;wreg free
  1191  000EA8                     
  1192                           ;main.c: 136:     lcdCommand(0xC0);
  1193  000EA8  0EC0               	movlw	192
  1194  000EAA  EC7E  F015         	call	_lcdCommand
  1195  000EAE                     
  1196                           ;main.c: 137:     lcdString("MIN: ");
  1197  000EAE  0E5C               	movlw	low STR_6
  1198  000EB0  6E0F               	movwf	lcdString@msg^0,c
  1199  000EB2  0E06               	movlw	high STR_6
  1200  000EB4  6E10               	movwf	(lcdString@msg+1)^0,c
  1201  000EB6  ECD6  F013         	call	_lcdString	;wreg free
  1202  000EBA                     
  1203                           ;main.c: 139:     serialSendString("MIN: ");
  1204  000EBA  0E5C               	movlw	low STR_6
  1205  000EBC  6E02               	movwf	serialSendString@String^0,c
  1206  000EBE  0E06               	movlw	high STR_6
  1207  000EC0  6E03               	movwf	(serialSendString@String+1)^0,c
  1208  000EC2  EC01  F014         	call	_serialSendString	;wreg free
  1209  000EC6                     
  1210                           ;main.c: 141:     Min[2] = leSerial();
  1211  000EC6  EC60  F015         	call	_leSerial	;wreg free
  1212  000ECA  6E6C               	movwf	(main@Min+2)^0,c
  1213  000ECC                     
  1214                           ;main.c: 143:     lcdNumber(Min[2]);
  1215  000ECC  C06C  F00F         	movff	main@Min+2,lcdNumber@value
  1216  000ED0  6A10               	clrf	(lcdNumber@value+1)^0,c
  1217  000ED2  EC3D  F013         	call	_lcdNumber	;wreg free
  1218  000ED6                     
  1219                           ;main.c: 145:     serialSend((Min[2]/10) % 10 + '0');
  1220  000ED6  0E00               	movlw	0
  1221  000ED8  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1222  000EDA  0E0A               	movlw	10
  1223  000EDC  6E03               	movwf	___awdiv@divisor^0,c
  1224  000EDE  C06C  F001         	movff	main@Min+2,___awdiv@dividend
  1225  000EE2  6A02               	clrf	(___awdiv@dividend+1)^0,c
  1226  000EE4  EC94  F011         	call	___awdiv	;wreg free
  1227  000EE8  C001  F009         	movff	?___awdiv,___awmod@dividend
  1228  000EEC  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1229  000EF0  0E00               	movlw	0
  1230  000EF2  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1231  000EF4  0E0A               	movlw	10
  1232  000EF6  6E0B               	movwf	___awmod@divisor^0,c
  1233  000EF8  ECA9  F012         	call	___awmod	;wreg free
  1234  000EFC  5009               	movf	?___awmod^0,w,c
  1235  000EFE  0F30               	addlw	48
  1236  000F00  ECB2  F015         	call	_serialSend
  1237  000F04                     
  1238                           ;main.c: 146:     serialSend((Min[2]/1) % 10 + '0');
  1239  000F04  C06C  F009         	movff	main@Min+2,___awmod@dividend
  1240  000F08  6A0A               	clrf	(___awmod@dividend+1)^0,c
  1241  000F0A  0E00               	movlw	0
  1242  000F0C  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1243  000F0E  0E0A               	movlw	10
  1244  000F10  6E0B               	movwf	___awmod@divisor^0,c
  1245  000F12  ECA9  F012         	call	___awmod	;wreg free
  1246  000F16  5009               	movf	?___awmod^0,w,c
  1247  000F18  0F30               	addlw	48
  1248  000F1A  ECB2  F015         	call	_serialSend
  1249  000F1E                     
  1250                           ;main.c: 147:     serialSend('\n');
  1251  000F1E  0E0A               	movlw	10
  1252  000F20  ECB2  F015         	call	_serialSend
  1253  000F24                     
  1254                           ;main.c: 149:     atraso_ms(2000);
  1255  000F24  0E07               	movlw	7
  1256  000F26  6E02               	movwf	(atraso_ms@num+1)^0,c
  1257  000F28  0ED0               	movlw	208
  1258  000F2A  6E01               	movwf	atraso_ms@num^0,c
  1259  000F2C  EC77  F013         	call	_atraso_ms	;wreg free
  1260  000F30                     
  1261                           ;main.c: 153:     lcdCommand(0x01);
  1262  000F30  0E01               	movlw	1
  1263  000F32  EC7E  F015         	call	_lcdCommand
  1264  000F36                     
  1265                           ;main.c: 154:     lcdCommand(0x80);
  1266  000F36  0E80               	movlw	128
  1267  000F38  EC7E  F015         	call	_lcdCommand
  1268  000F3C                     
  1269                           ;main.c: 155:     lcdString("Aileron: ");
  1270  000F3C  0E21               	movlw	low STR_22
  1271  000F3E  6E0F               	movwf	lcdString@msg^0,c
  1272  000F40  0E06               	movlw	high STR_22
  1273  000F42  6E10               	movwf	(lcdString@msg+1)^0,c
  1274  000F44  ECD6  F013         	call	_lcdString	;wreg free
  1275  000F48  EFC6  F007         	goto	l3406
  1276  000F4C                     l3390:
  1277                           
  1278                           ;main.c: 160:                 kpDebounce();
  1279  000F4C  EC76  F010         	call	_kpDebounce	;wreg free
  1280  000F50                     
  1281                           ;main.c: 162:                 Slot = 1;
  1282  000F50  0E01               	movlw	1
  1283  000F52  6E65               	movwf	main@Slot^0,c
  1284                           
  1285                           ;main.c: 163:                 break;
  1286  000F54  EFC6  F007         	goto	l3406
  1287  000F58                     l3394:
  1288                           
  1289                           ;main.c: 165:                 Superfice = leTeclado();
  1290  000F58  EC50  F012         	call	_leTeclado	;wreg free
  1291  000F5C  6E66               	movwf	main@Superfice^0,c
  1292  000F5E                     
  1293                           ;main.c: 167:                 Slot = 2;
  1294  000F5E  0E02               	movlw	2
  1295  000F60  6E65               	movwf	main@Slot^0,c
  1296                           
  1297                           ;main.c: 168:                 break;
  1298  000F62  EFC6  F007         	goto	l3406
  1299  000F66                     l3398:
  1300                           
  1301                           ;main.c: 170:                 leADC(Max[Superfice], Min[Superfice]);
  1302  000F66  0E6A               	movlw	low main@Min
  1303  000F68  2466               	addwf	main@Superfice^0,w,c
  1304  000F6A  6ED9               	movwf	fsr2l,c
  1305  000F6C  6ADA               	clrf	fsr2h,c
  1306  000F6E  0E00               	movlw	high main@Min
  1307  000F70  22DA               	addwfc	fsr2h,f,c
  1308  000F72  50DF               	movf	indf2,w,c
  1309  000F74  6E5B               	movwf	leADC@Min^0,c
  1310  000F76  0E67               	movlw	low main@Max
  1311  000F78  2466               	addwf	main@Superfice^0,w,c
  1312  000F7A  6ED9               	movwf	fsr2l,c
  1313  000F7C  6ADA               	clrf	fsr2h,c
  1314  000F7E  0E00               	movlw	high main@Max
  1315  000F80  22DA               	addwfc	fsr2h,f,c
  1316  000F82  50DF               	movf	indf2,w,c
  1317  000F84  ECEB  F00E         	call	_leADC
  1318  000F88                     l3400:
  1319                           
  1320                           ;main.c: 172:                 Slot = 0;
  1321  000F88  0E00               	movlw	0
  1322  000F8A  6E65               	movwf	main@Slot^0,c
  1323  000F8C                     l3406:
  1324  000F8C  5065               	movf	main@Slot^0,w,c
  1325  000F8E  6E63               	movwf	??_main^0,c
  1326  000F90  6A64               	clrf	(??_main+1)^0,c
  1327                           
  1328                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1329                           ; Switch size 1, requested type "simple"
  1330                           ; Number of cases is 1, Range of values is 0 to 0
  1331                           ; switch strategies available:
  1332                           ; Name         Instructions Cycles
  1333                           ; simple_byte            4     3 (average)
  1334                           ;	Chosen strategy is simple_byte
  1335  000F92  5064               	movf	(??_main+1)^0,w,c
  1336  000F94  0A00               	xorlw	0	; case 0
  1337  000F96  B4D8               	btfsc	status,2,c
  1338  000F98  EFD0  F007         	goto	l3428
  1339  000F9C  EFC4  F007         	goto	l3400
  1340  000FA0                     l3428:
  1341                           
  1342                           ; Switch size 1, requested type "simple"
  1343                           ; Number of cases is 3, Range of values is 0 to 2
  1344                           ; switch strategies available:
  1345                           ; Name         Instructions Cycles
  1346                           ; simple_byte           10     6 (average)
  1347                           ;	Chosen strategy is simple_byte
  1348  000FA0  5063               	movf	??_main^0,w,c
  1349  000FA2  0A00               	xorlw	0	; case 0
  1350  000FA4  B4D8               	btfsc	status,2,c
  1351  000FA6  EFA6  F007         	goto	l3390
  1352  000FAA  0A01               	xorlw	1	; case 1
  1353  000FAC  B4D8               	btfsc	status,2,c
  1354  000FAE  EFAC  F007         	goto	l3394
  1355  000FB2  0A03               	xorlw	3	; case 2
  1356  000FB4  B4D8               	btfsc	status,2,c
  1357  000FB6  EFB3  F007         	goto	l3398
  1358  000FBA  EFC4  F007         	goto	l3400
  1359  000FBE  EF00  F000         	goto	start
  1360  000FC2                     __end_of_main:
  1361                           	callstack 0
  1362                           
  1363 ;; *************** function _serialSendString *****************
  1364 ;; Defined at:
  1365 ;;		line 235 in file "main.c"
  1366 ;; Parameters:    Size  Location     Type
  1367 ;;  String          2    1[COMRAM] PTR unsigned char 
  1368 ;;		 -> STR_21(6), STR_18(6), STR_17(6), STR_14(6), 
  1369 ;;		 -> STR_11(6), STR_10(11), STR_7(6), STR_4(6), 
  1370 ;;		 -> STR_3(9), 
  1371 ;; Auto vars:     Size  Location     Type
  1372 ;;  i               1    5[COMRAM] unsigned char 
  1373 ;; Return value:  Size  Location     Type
  1374 ;;                  1    wreg      void 
  1375 ;; Registers used:
  1376 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1377 ;; Tracked objects:
  1378 ;;		On entry : 0/0
  1379 ;;		On exit  : 0/0
  1380 ;;		Unchanged: 0/0
  1381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1382 ;;      Params:         2       0       0       0       0       0       0
  1383 ;;      Locals:         1       0       0       0       0       0       0
  1384 ;;      Temps:          2       0       0       0       0       0       0
  1385 ;;      Totals:         5       0       0       0       0       0       0
  1386 ;;Total ram usage:        5 bytes
  1387 ;; Hardware stack levels used: 1
  1388 ;; Hardware stack levels required when called: 1
  1389 ;; This function calls:
  1390 ;;		_serialSend
  1391 ;; This function is called by:
  1392 ;;		_main
  1393 ;; This function uses a non-reentrant model
  1394 ;;
  1395                           
  1396                           	psect	text1
  1397  002802                     __ptext1:
  1398                           	callstack 0
  1399  002802                     _serialSendString:
  1400                           	callstack 29
  1401  002802                     
  1402                           ;main.c: 236:     char i = 0;
  1403  002802  0E00               	movlw	0
  1404  002804  6E06               	movwf	serialSendString@i^0,c
  1405                           
  1406                           ;main.c: 238:     while(String[i] != '\0'){
  1407  002806  EF14  F014         	goto	l3112
  1408  00280A                     l3108:
  1409                           
  1410                           ;main.c: 239:         serialSend(String[i]);
  1411  00280A  5006               	movf	serialSendString@i^0,w,c
  1412  00280C  2402               	addwf	serialSendString@String^0,w,c
  1413  00280E  6E04               	movwf	??_serialSendString^0,c
  1414  002810  0E00               	movlw	0
  1415  002812  2003               	addwfc	(serialSendString@String+1)^0,w,c
  1416  002814  6E05               	movwf	(??_serialSendString+1)^0,c
  1417  002816  C004  FFF6         	movff	??_serialSendString,tblptrl
  1418  00281A  C005  FFF7         	movff	??_serialSendString+1,tblptrh
  1419  00281E                     	if	0	;tblptru may be non-zero
  1420  00281E                     	endif
  1421  00281E                     	if	0	;tblptru may be non-zero
  1422  00281E                     	endif
  1423  00281E  0008               	tblrd		*
  1424  002820  50F5               	movf	tablat,w,c
  1425  002822  ECB2  F015         	call	_serialSend
  1426  002826                     
  1427                           ;main.c: 240:         i++;
  1428  002826  2A06               	incf	serialSendString@i^0,f,c
  1429  002828                     l3112:
  1430                           
  1431                           ;main.c: 238:     while(String[i] != '\0'){
  1432  002828  5006               	movf	serialSendString@i^0,w,c
  1433  00282A  2402               	addwf	serialSendString@String^0,w,c
  1434  00282C  6E04               	movwf	??_serialSendString^0,c
  1435  00282E  0E00               	movlw	0
  1436  002830  2003               	addwfc	(serialSendString@String+1)^0,w,c
  1437  002832  6E05               	movwf	(??_serialSendString+1)^0,c
  1438  002834  C004  FFF6         	movff	??_serialSendString,tblptrl
  1439  002838  C005  FFF7         	movff	??_serialSendString+1,tblptrh
  1440  00283C                     	if	0	;tblptru may be non-zero
  1441  00283C                     	endif
  1442  00283C                     	if	0	;tblptru may be non-zero
  1443  00283C                     	endif
  1444  00283C  0008               	tblrd		*
  1445  00283E  50F5               	movf	tablat,w,c
  1446  002840  0900               	iorlw	0
  1447  002842  A4D8               	btfss	status,2,c
  1448  002844  EF26  F014         	goto	u3541
  1449  002848  EF28  F014         	goto	u3540
  1450  00284C                     u3541:
  1451  00284C  EF05  F014         	goto	l3108
  1452  002850                     u3540:
  1453  002850  0012               	return		;funcret
  1454  002852                     __end_of_serialSendString:
  1455                           	callstack 0
  1456                           
  1457 ;; *************** function _serialSend *****************
  1458 ;; Defined at:
  1459 ;;		line 25 in file "serial.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;  c               1    wreg     unsigned char 
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;  c               1    0[COMRAM] unsigned char 
  1464 ;; Return value:  Size  Location     Type
  1465 ;;                  1    wreg      void 
  1466 ;; Registers used:
  1467 ;;		wreg
  1468 ;; Tracked objects:
  1469 ;;		On entry : 0/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1473 ;;      Params:         0       0       0       0       0       0       0
  1474 ;;      Locals:         1       0       0       0       0       0       0
  1475 ;;      Temps:          0       0       0       0       0       0       0
  1476 ;;      Totals:         1       0       0       0       0       0       0
  1477 ;;Total ram usage:        1 bytes
  1478 ;; Hardware stack levels used: 1
  1479 ;; This function calls:
  1480 ;;		Nothing
  1481 ;; This function is called by:
  1482 ;;		_main
  1483 ;;		_serialSendString
  1484 ;; This function uses a non-reentrant model
  1485 ;;
  1486                           
  1487                           	psect	text2
  1488  002B64                     __ptext2:
  1489                           	callstack 0
  1490  002B64                     _serialSend:
  1491                           	callstack 29
  1492                           
  1493                           ;incstack = 0
  1494                           ;serialSend@c stored from wreg
  1495  002B64  6E01               	movwf	serialSend@c^0,c
  1496  002B66                     l223:
  1497  002B66  A89E               	btfss	158,4,c	;volatile
  1498  002B68  EFB8  F015         	goto	u461
  1499  002B6C  EFBA  F015         	goto	u460
  1500  002B70                     u461:
  1501  002B70  EFB3  F015         	goto	l223
  1502  002B74                     u460:
  1503  002B74                     
  1504                           ;serial.c: 27:     TXREG = c;
  1505  002B74  C001  FFAD         	movff	serialSend@c,4013	;volatile
  1506  002B78  0012               	return		;funcret
  1507  002B7A                     __end_of_serialSend:
  1508                           	callstack 0
  1509                           
  1510 ;; *************** function _serialInit *****************
  1511 ;; Defined at:
  1512 ;;		line 48 in file "serial.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;		None
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;		None
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  1    wreg      void 
  1519 ;; Registers used:
  1520 ;;		wreg, status,2, status,0
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1526 ;;      Params:         0       0       0       0       0       0       0
  1527 ;;      Locals:         0       0       0       0       0       0       0
  1528 ;;      Temps:          0       0       0       0       0       0       0
  1529 ;;      Totals:         0       0       0       0       0       0       0
  1530 ;;Total ram usage:        0 bytes
  1531 ;; Hardware stack levels used: 1
  1532 ;; This function calls:
  1533 ;;		Nothing
  1534 ;; This function is called by:
  1535 ;;		_main
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539                           	psect	text3
  1540  002B1A                     __ptext3:
  1541                           	callstack 0
  1542  002B1A                     _serialInit:
  1543                           	callstack 30
  1544  002B1A                     
  1545                           ;serial.c: 49:     TXSTA = 0b00101100;
  1546  002B1A  0E2C               	movlw	44
  1547  002B1C  6EAC               	movwf	172,c	;volatile
  1548                           
  1549                           ;serial.c: 50:     RCSTA = 0b10010000;
  1550  002B1E  0E90               	movlw	144
  1551  002B20  6EAB               	movwf	171,c	;volatile
  1552                           
  1553                           ;serial.c: 51:     BAUDCON = 0b00001000;
  1554  002B22  0E08               	movlw	8
  1555  002B24  6EB8               	movwf	184,c	;volatile
  1556                           
  1557                           ;serial.c: 52:     SPBRGH = 0;
  1558  002B26  0E00               	movlw	0
  1559  002B28  6EB0               	movwf	176,c	;volatile
  1560                           
  1561                           ;serial.c: 53:     SPBRG = 34;
  1562  002B2A  0E22               	movlw	34
  1563  002B2C  6EAF               	movwf	175,c	;volatile
  1564  002B2E                     
  1565                           ;serial.c: 54:     ((TRISC) |= (1<<(6)));
  1566  002B2E  8C94               	bsf	148,6,c	;volatile
  1567  002B30                     
  1568                           ;serial.c: 55:     ((TRISC) |= (1<<(7)));
  1569  002B30  8E94               	bsf	148,7,c	;volatile
  1570  002B32  0012               	return		;funcret
  1571  002B34                     __end_of_serialInit:
  1572                           	callstack 0
  1573                           
  1574 ;; *************** function _leTeclado *****************
  1575 ;; Defined at:
  1576 ;;		line 181 in file "main.c"
  1577 ;; Parameters:    Size  Location     Type
  1578 ;;		None
  1579 ;; Auto vars:     Size  Location     Type
  1580 ;;		None
  1581 ;; Return value:  Size  Location     Type
  1582 ;;                  1    wreg      unsigned char 
  1583 ;; Registers used:
  1584 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1585 ;; Tracked objects:
  1586 ;;		On entry : 0/0
  1587 ;;		On exit  : 0/0
  1588 ;;		Unchanged: 0/0
  1589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1590 ;;      Params:         0       0       0       0       0       0       0
  1591 ;;      Locals:         0       0       0       0       0       0       0
  1592 ;;      Temps:          2       0       0       0       0       0       0
  1593 ;;      Totals:         2       0       0       0       0       0       0
  1594 ;;Total ram usage:        2 bytes
  1595 ;; Hardware stack levels used: 1
  1596 ;; Hardware stack levels required when called: 6
  1597 ;; This function calls:
  1598 ;;		_kpRead
  1599 ;;		_kpReadKey
  1600 ;;		_lcdCommand
  1601 ;;		_lcdString
  1602 ;; This function is called by:
  1603 ;;		_main
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607                           	psect	text4
  1608  0024A0                     __ptext4:
  1609                           	callstack 0
  1610  0024A0                     _leTeclado:
  1611                           	callstack 24
  1612  0024A0                     
  1613                           ;main.c: 182:     static unsigned int Leitura = 0;;main.c: 183:     static unsigned char
      +                           Retorno = 0;;main.c: 185:     if(kpRead() != Leitura){
  1614  0024A0  ECBD  F015         	call	_kpRead	;wreg free
  1615  0024A4  5073               	movf	leTeclado@Leitura^0,w,c
  1616  0024A6  1801               	xorwf	?_kpRead^0,w,c
  1617  0024A8  E109               	bnz	u3670
  1618  0024AA  5074               	movf	(leTeclado@Leitura+1)^0,w,c
  1619  0024AC  1802               	xorwf	(?_kpRead+1)^0,w,c
  1620  0024AE  B4D8               	btfsc	status,2,c
  1621  0024B0  EF5C  F012         	goto	u3671
  1622  0024B4  EF5E  F012         	goto	u3670
  1623  0024B8                     u3671:
  1624  0024B8  EFA7  F012         	goto	l3200
  1625  0024BC                     u3670:
  1626  0024BC                     
  1627                           ;main.c: 186:         Leitura = kpRead();
  1628  0024BC  ECBD  F015         	call	_kpRead	;wreg free
  1629  0024C0  C001  F073         	movff	?_kpRead,leTeclado@Leitura
  1630  0024C4  C002  F074         	movff	?_kpRead+1,leTeclado@Leitura+1
  1631                           
  1632                           ;main.c: 188:         switch(kpReadKey()){
  1633  0024C8  EF8D  F012         	goto	l3198
  1634  0024CC                     l3178:
  1635                           
  1636                           ;main.c: 190:                 lcdCommand(0x01);
  1637  0024CC  0E01               	movlw	1
  1638  0024CE  EC7E  F015         	call	_lcdCommand
  1639  0024D2                     
  1640                           ;main.c: 191:                 lcdString("Aileron:");
  1641  0024D2  0E3E               	movlw	low STR_23
  1642  0024D4  6E0F               	movwf	lcdString@msg^0,c
  1643  0024D6  0E06               	movlw	high STR_23
  1644  0024D8  6E10               	movwf	(lcdString@msg+1)^0,c
  1645  0024DA  ECD6  F013         	call	_lcdString	;wreg free
  1646  0024DE                     
  1647                           ;main.c: 192:                 Retorno = 0;
  1648  0024DE  0E00               	movlw	0
  1649  0024E0  6E76               	movwf	leTeclado@Retorno^0,c
  1650                           
  1651                           ;main.c: 193:                 break;
  1652  0024E2  EFA7  F012         	goto	l3200
  1653  0024E6                     l3184:
  1654                           
  1655                           ;main.c: 195:                 lcdCommand(0x01);
  1656  0024E6  0E01               	movlw	1
  1657  0024E8  EC7E  F015         	call	_lcdCommand
  1658  0024EC                     
  1659                           ;main.c: 196:                 lcdString("Profundor:");
  1660  0024EC  0E16               	movlw	low STR_24
  1661  0024EE  6E0F               	movwf	lcdString@msg^0,c
  1662  0024F0  0E06               	movlw	high STR_24
  1663  0024F2  6E10               	movwf	(lcdString@msg+1)^0,c
  1664  0024F4  ECD6  F013         	call	_lcdString	;wreg free
  1665  0024F8                     
  1666                           ;main.c: 197:                 Retorno = 1;
  1667  0024F8  0E01               	movlw	1
  1668  0024FA  6E76               	movwf	leTeclado@Retorno^0,c
  1669                           
  1670                           ;main.c: 198:                 break;
  1671  0024FC  EFA7  F012         	goto	l3200
  1672  002500                     l3190:
  1673                           
  1674                           ;main.c: 200:                 lcdCommand(0x01);
  1675  002500  0E01               	movlw	1
  1676  002502  EC7E  F015         	call	_lcdCommand
  1677  002506                     
  1678                           ;main.c: 201:                 lcdString("Leme:");
  1679  002506  0E68               	movlw	low STR_25
  1680  002508  6E0F               	movwf	lcdString@msg^0,c
  1681  00250A  0E06               	movlw	high STR_25
  1682  00250C  6E10               	movwf	(lcdString@msg+1)^0,c
  1683  00250E  ECD6  F013         	call	_lcdString	;wreg free
  1684  002512                     
  1685                           ;main.c: 202:                 Retorno = 2;
  1686  002512  0E02               	movlw	2
  1687  002514  6E76               	movwf	leTeclado@Retorno^0,c
  1688                           
  1689                           ;main.c: 203:                 break;
  1690  002516  EFA7  F012         	goto	l3200
  1691  00251A                     l3198:
  1692  00251A  EC01  F013         	call	_kpReadKey	;wreg free
  1693  00251E  6E15               	movwf	??_leTeclado^0,c
  1694  002520  6A16               	clrf	(??_leTeclado+1)^0,c
  1695                           
  1696                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1697                           ; Switch size 1, requested type "simple"
  1698                           ; Number of cases is 1, Range of values is 0 to 0
  1699                           ; switch strategies available:
  1700                           ; Name         Instructions Cycles
  1701                           ; simple_byte            4     3 (average)
  1702                           ;	Chosen strategy is simple_byte
  1703  002522  5016               	movf	(??_leTeclado+1)^0,w,c
  1704  002524  0A00               	xorlw	0	; case 0
  1705  002526  B4D8               	btfsc	status,2,c
  1706  002528  EF98  F012         	goto	l3430
  1707  00252C  EFA7  F012         	goto	l3200
  1708  002530                     l3430:
  1709                           
  1710                           ; Switch size 1, requested type "simple"
  1711                           ; Number of cases is 3, Range of values is 68 to 85
  1712                           ; switch strategies available:
  1713                           ; Name         Instructions Cycles
  1714                           ; simple_byte           10     6 (average)
  1715                           ;	Chosen strategy is simple_byte
  1716  002530  5015               	movf	??_leTeclado^0,w,c
  1717  002532  0A44               	xorlw	68	; case 68
  1718  002534  B4D8               	btfsc	status,2,c
  1719  002536  EF80  F012         	goto	l3190
  1720  00253A  0A08               	xorlw	8	; case 76
  1721  00253C  B4D8               	btfsc	status,2,c
  1722  00253E  EF73  F012         	goto	l3184
  1723  002542  0A19               	xorlw	25	; case 85
  1724  002544  B4D8               	btfsc	status,2,c
  1725  002546  EF66  F012         	goto	l3178
  1726  00254A  EFA7  F012         	goto	l3200
  1727  00254E                     l3200:
  1728                           
  1729                           ;main.c: 209:     return Retorno;
  1730  00254E  5076               	movf	leTeclado@Retorno^0,w,c
  1731  002550  0012               	return		;funcret
  1732  002552                     __end_of_leTeclado:
  1733                           	callstack 0
  1734                           
  1735 ;; *************** function _kpReadKey *****************
  1736 ;; Defined at:
  1737 ;;		line 17 in file "keypad.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;		None
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;  i               2    3[COMRAM] int 
  1742 ;; Return value:  Size  Location     Type
  1743 ;;                  1    wreg      unsigned char 
  1744 ;; Registers used:
  1745 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1746 ;; Tracked objects:
  1747 ;;		On entry : 0/0
  1748 ;;		On exit  : 0/0
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1751 ;;      Params:         0       0       0       0       0       0       0
  1752 ;;      Locals:         2       0       0       0       0       0       0
  1753 ;;      Temps:          3       0       0       0       0       0       0
  1754 ;;      Totals:         5       0       0       0       0       0       0
  1755 ;;Total ram usage:        5 bytes
  1756 ;; Hardware stack levels used: 1
  1757 ;; This function calls:
  1758 ;;		Nothing
  1759 ;; This function is called by:
  1760 ;;		_leTeclado
  1761 ;; This function uses a non-reentrant model
  1762 ;;
  1763                           
  1764                           	psect	text5
  1765  002602                     __ptext5:
  1766                           	callstack 0
  1767  002602                     _kpReadKey:
  1768                           	callstack 29
  1769  002602                     
  1770                           ;keypad.c: 18:  int i;;keypad.c: 19:  for(i=0;i<10;i++){
  1771  002602  0E00               	movlw	0
  1772  002604  6E05               	movwf	(kpReadKey@i+1)^0,c
  1773  002606  0E00               	movlw	0
  1774  002608  6E04               	movwf	kpReadKey@i^0,c
  1775  00260A                     l1170:
  1776                           
  1777                           ;keypad.c: 20:   if (((keys) & (1<<(i)))){
  1778  00260A  C004  F001         	movff	kpReadKey@i,??_kpReadKey
  1779  00260E  0E01               	movlw	1
  1780  002610  6E02               	movwf	(??_kpReadKey+1)^0,c
  1781  002612  0E00               	movlw	0
  1782  002614  6E03               	movwf	(??_kpReadKey+2)^0,c
  1783  002616  2A01               	incf	??_kpReadKey^0,f,c
  1784  002618  EF11  F013         	goto	u474
  1785  00261C                     u475:
  1786  00261C  90D8               	bcf	status,0,c
  1787  00261E  3602               	rlcf	(??_kpReadKey+1)^0,f,c
  1788  002620  3603               	rlcf	(??_kpReadKey+2)^0,f,c
  1789  002622                     u474:
  1790  002622  2E01               	decfsz	??_kpReadKey^0,f,c
  1791  002624  EF0E  F013         	goto	u475
  1792  002628  5071               	movf	_keys^0,w,c
  1793  00262A  1602               	andwf	(??_kpReadKey+1)^0,f,c
  1794  00262C  5072               	movf	(_keys+1)^0,w,c
  1795  00262E  1603               	andwf	(??_kpReadKey+2)^0,f,c
  1796  002630  5002               	movf	(??_kpReadKey+1)^0,w,c
  1797  002632  1003               	iorwf	(??_kpReadKey+2)^0,w,c
  1798  002634  B4D8               	btfsc	status,2,c
  1799  002636  EF1F  F013         	goto	u481
  1800  00263A  EF21  F013         	goto	u480
  1801  00263E                     u481:
  1802  00263E  EF2B  F013         	goto	l1176
  1803  002642                     u480:
  1804  002642                     
  1805                           ;keypad.c: 21:    return charKey[i];
  1806  002642  0E01               	movlw	low _charKey
  1807  002644  2404               	addwf	kpReadKey@i^0,w,c
  1808  002646  6EF6               	movwf	tblptrl,c
  1809  002648  0E06               	movlw	high _charKey
  1810  00264A  2005               	addwfc	(kpReadKey@i+1)^0,w,c
  1811  00264C  6EF7               	movwf	tblptrh,c
  1812  00264E                     	if	0	;There are less than 3 active tblptr bytes
  1813  00264E                     	endif
  1814  00264E  0008               	tblrd		*
  1815  002650  50F5               	movf	tablat,w,c
  1816  002652  EF3C  F013         	goto	l131
  1817  002656                     l1176:
  1818                           
  1819                           ;keypad.c: 23:  }
  1820  002656  4A04               	infsnz	kpReadKey@i^0,f,c
  1821  002658  2A05               	incf	(kpReadKey@i+1)^0,f,c
  1822  00265A  BE05               	btfsc	(kpReadKey@i+1)^0,7,c
  1823  00265C  EF39  F013         	goto	u491
  1824  002660  5005               	movf	(kpReadKey@i+1)^0,w,c
  1825  002662  E109               	bnz	u490
  1826  002664  0E0A               	movlw	10
  1827  002666  5C04               	subwf	kpReadKey@i^0,w,c
  1828  002668  A0D8               	btfss	status,0,c
  1829  00266A  EF39  F013         	goto	u491
  1830  00266E  EF3B  F013         	goto	u490
  1831  002672                     u491:
  1832  002672  EF05  F013         	goto	l1170
  1833  002676                     u490:
  1834  002676                     
  1835                           ;keypad.c: 25:  return 0;
  1836  002676  0E00               	movlw	0
  1837  002678                     l131:
  1838  002678  0012               	return		;funcret
  1839  00267A                     __end_of_kpReadKey:
  1840                           	callstack 0
  1841                           
  1842 ;; *************** function _kpRead *****************
  1843 ;; Defined at:
  1844 ;;		line 14 in file "keypad.c"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;		None
  1847 ;; Auto vars:     Size  Location     Type
  1848 ;;		None
  1849 ;; Return value:  Size  Location     Type
  1850 ;;                  2    0[COMRAM] unsigned int 
  1851 ;; Registers used:
  1852 ;;		None
  1853 ;; Tracked objects:
  1854 ;;		On entry : 0/0
  1855 ;;		On exit  : 0/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1858 ;;      Params:         2       0       0       0       0       0       0
  1859 ;;      Locals:         0       0       0       0       0       0       0
  1860 ;;      Temps:          0       0       0       0       0       0       0
  1861 ;;      Totals:         2       0       0       0       0       0       0
  1862 ;;Total ram usage:        2 bytes
  1863 ;; Hardware stack levels used: 1
  1864 ;; This function calls:
  1865 ;;		Nothing
  1866 ;; This function is called by:
  1867 ;;		_leTeclado
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871                           	psect	text6
  1872  002B7A                     __ptext6:
  1873                           	callstack 0
  1874  002B7A                     _kpRead:
  1875                           	callstack 29
  1876  002B7A                     
  1877                           ;keypad.c: 15:     return keys;
  1878  002B7A  C071  F001         	movff	_keys,?_kpRead
  1879  002B7E  C072  F002         	movff	_keys+1,?_kpRead+1
  1880  002B82  0012               	return		;funcret
  1881  002B84                     __end_of_kpRead:
  1882                           	callstack 0
  1883                           
  1884 ;; *************** function _leSerial *****************
  1885 ;; Defined at:
  1886 ;;		line 225 in file "main.c"
  1887 ;; Parameters:    Size  Location     Type
  1888 ;;		None
  1889 ;; Auto vars:     Size  Location     Type
  1890 ;;  Input           3    2[COMRAM] unsigned char [3]
  1891 ;; Return value:  Size  Location     Type
  1892 ;;                  1    wreg      unsigned char 
  1893 ;; Registers used:
  1894 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1895 ;; Tracked objects:
  1896 ;;		On entry : 0/0
  1897 ;;		On exit  : 0/0
  1898 ;;		Unchanged: 0/0
  1899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1900 ;;      Params:         0       0       0       0       0       0       0
  1901 ;;      Locals:         3       0       0       0       0       0       0
  1902 ;;      Temps:          0       0       0       0       0       0       0
  1903 ;;      Totals:         3       0       0       0       0       0       0
  1904 ;;Total ram usage:        3 bytes
  1905 ;; Hardware stack levels used: 1
  1906 ;; Hardware stack levels required when called: 2
  1907 ;; This function calls:
  1908 ;;		_serialReadChar
  1909 ;; This function is called by:
  1910 ;;		_main
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914                           	psect	text7
  1915  002AC0                     __ptext7:
  1916                           	callstack 0
  1917  002AC0                     _leSerial:
  1918                           	callstack 28
  1919  002AC0                     
  1920                           ;main.c: 226:     unsigned char Input[3];;main.c: 228:     Input[0] = serialReadChar();
  1921  002AC0  EC9A  F015         	call	_serialReadChar	;wreg free
  1922  002AC4  6E03               	movwf	leSerial@Input^0,c
  1923                           
  1924                           ;main.c: 229:     Input[1] = serialReadChar();
  1925  002AC6  EC9A  F015         	call	_serialReadChar	;wreg free
  1926  002ACA  6E04               	movwf	(leSerial@Input+1)^0,c
  1927                           
  1928                           ;main.c: 230:     Input[2] = serialReadChar();
  1929  002ACC  EC9A  F015         	call	_serialReadChar	;wreg free
  1930  002AD0  6E05               	movwf	(leSerial@Input+2)^0,c
  1931  002AD2                     
  1932                           ;main.c: 232:     return (Input[0] - '0')*10 + Input[1] - '0';
  1933  002AD2  5003               	movf	leSerial@Input^0,w,c
  1934  002AD4  0D0A               	mullw	10
  1935  002AD6  50F3               	movf	243,w,c
  1936  002AD8  2404               	addwf	(leSerial@Input+1)^0,w,c
  1937  002ADA  0FF0               	addlw	240
  1938  002ADC  0012               	return		;funcret
  1939  002ADE                     __end_of_leSerial:
  1940                           	callstack 0
  1941                           
  1942 ;; *************** function _serialReadChar *****************
  1943 ;; Defined at:
  1944 ;;		line 244 in file "main.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;		None
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;  Byte            1    1[COMRAM] unsigned char 
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  1    wreg      unsigned char 
  1951 ;; Registers used:
  1952 ;;		wreg, status,2, status,0, cstack
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1958 ;;      Params:         0       0       0       0       0       0       0
  1959 ;;      Locals:         1       0       0       0       0       0       0
  1960 ;;      Temps:          0       0       0       0       0       0       0
  1961 ;;      Totals:         1       0       0       0       0       0       0
  1962 ;;Total ram usage:        1 bytes
  1963 ;; Hardware stack levels used: 1
  1964 ;; Hardware stack levels required when called: 1
  1965 ;; This function calls:
  1966 ;;		_serialRead
  1967 ;; This function is called by:
  1968 ;;		_leSerial
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972                           	psect	text8
  1973  002B34                     __ptext8:
  1974                           	callstack 0
  1975  002B34                     _serialReadChar:
  1976                           	callstack 28
  1977  002B34                     l82:
  1978  002B34                     
  1979                           ;main.c: 248:         Byte = serialRead();
  1980  002B34  EC0D  F015         	call	_serialRead	;wreg free
  1981  002B38  6E02               	movwf	serialReadChar@Byte^0,c
  1982  002B3A                     
  1983                           ;main.c: 250:         if(Byte != 0) return Byte;
  1984  002B3A  5002               	movf	serialReadChar@Byte^0,w,c
  1985  002B3C  B4D8               	btfsc	status,2,c
  1986  002B3E  EFA3  F015         	goto	u521
  1987  002B42  EFA5  F015         	goto	u520
  1988  002B46                     u521:
  1989  002B46  EF9A  F015         	goto	l82
  1990  002B4A                     u520:
  1991  002B4A  5002               	movf	serialReadChar@Byte^0,w,c
  1992  002B4C  0012               	return		;funcret
  1993  002B4E                     __end_of_serialReadChar:
  1994                           	callstack 0
  1995                           
  1996 ;; *************** function _serialRead *****************
  1997 ;; Defined at:
  1998 ;;		line 30 in file "serial.c"
  1999 ;; Parameters:    Size  Location     Type
  2000 ;;		None
  2001 ;; Auto vars:     Size  Location     Type
  2002 ;;  resp            1    0[COMRAM] unsigned char 
  2003 ;; Return value:  Size  Location     Type
  2004 ;;                  1    wreg      unsigned char 
  2005 ;; Registers used:
  2006 ;;		wreg, status,2, status,0
  2007 ;; Tracked objects:
  2008 ;;		On entry : 0/0
  2009 ;;		On exit  : 0/0
  2010 ;;		Unchanged: 0/0
  2011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2012 ;;      Params:         0       0       0       0       0       0       0
  2013 ;;      Locals:         1       0       0       0       0       0       0
  2014 ;;      Temps:          0       0       0       0       0       0       0
  2015 ;;      Totals:         1       0       0       0       0       0       0
  2016 ;;Total ram usage:        1 bytes
  2017 ;; Hardware stack levels used: 1
  2018 ;; This function calls:
  2019 ;;		Nothing
  2020 ;; This function is called by:
  2021 ;;		_serialReadChar
  2022 ;; This function uses a non-reentrant model
  2023 ;;
  2024                           
  2025                           	psect	text9
  2026  002A1A                     __ptext9:
  2027                           	callstack 0
  2028  002A1A                     _serialRead:
  2029                           	callstack 28
  2030  002A1A                     
  2031                           ;serial.c: 31:     char resp = 0;
  2032  002A1A  0E00               	movlw	0
  2033  002A1C  6E01               	movwf	serialRead@resp^0,c
  2034  002A1E                     
  2035                           ;serial.c: 33:     if (((RCSTA) & (1<<(1))))
  2036  002A1E  A2AB               	btfss	171,1,c	;volatile
  2037  002A20  EF14  F015         	goto	u221
  2038  002A24  EF16  F015         	goto	u220
  2039  002A28                     u221:
  2040  002A28  EF18  F015         	goto	l1094
  2041  002A2C                     u220:
  2042  002A2C                     
  2043                           ;serial.c: 34:     {;serial.c: 35:         ((RCSTA) &= ~(1<<(4)));
  2044  002A2C  98AB               	bcf	171,4,c	;volatile
  2045                           
  2046                           ;serial.c: 36:         ((RCSTA) |= (1<<(4)));
  2047  002A2E  88AB               	bsf	171,4,c	;volatile
  2048  002A30                     l1094:
  2049                           
  2050                           ;serial.c: 39:     if (((PIR1) & (1<<(5))))
  2051  002A30  AA9E               	btfss	158,5,c	;volatile
  2052  002A32  EF1D  F015         	goto	u231
  2053  002A36  EF1F  F015         	goto	u230
  2054  002A3A                     u231:
  2055  002A3A  EF21  F015         	goto	l1098
  2056  002A3E                     u230:
  2057  002A3E                     
  2058                           ;serial.c: 40:     {;serial.c: 41:         resp = RCREG;
  2059  002A3E  CFAE F001          	movff	4014,serialRead@resp	;volatile
  2060  002A42                     l1098:
  2061                           
  2062                           ;serial.c: 43:     return resp;
  2063  002A42  5001               	movf	serialRead@resp^0,w,c
  2064  002A44  0012               	return		;funcret
  2065  002A46                     __end_of_serialRead:
  2066                           	callstack 0
  2067                           
  2068 ;; *************** function _leADC *****************
  2069 ;; Defined at:
  2070 ;;		line 212 in file "main.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;  Max             1    wreg     unsigned char 
  2073 ;;  Min             1   90[COMRAM] unsigned char 
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;  Max             1   95[COMRAM] unsigned char 
  2076 ;;  x               2   96[COMRAM] int 
  2077 ;;  ValorADC        2   93[COMRAM] int 
  2078 ;; Return value:  Size  Location     Type
  2079 ;;                  1    wreg      void 
  2080 ;; Registers used:
  2081 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2087 ;;      Params:         1       0       0       0       0       0       0
  2088 ;;      Locals:         5       0       0       0       0       0       0
  2089 ;;      Temps:          2       0       0       0       0       0       0
  2090 ;;      Totals:         8       0       0       0       0       0       0
  2091 ;;Total ram usage:        8 bytes
  2092 ;; Hardware stack levels used: 1
  2093 ;; Hardware stack levels required when called: 6
  2094 ;; This function calls:
  2095 ;;		___awdiv
  2096 ;;		___awmod
  2097 ;;		___fladd
  2098 ;;		___fldiv
  2099 ;;		___flmul
  2100 ;;		___fltol
  2101 ;;		___xxtofl
  2102 ;;		_adcRead
  2103 ;;		_lcdChar
  2104 ;;		_lcdCommand
  2105 ;;		_lcdString
  2106 ;; This function is called by:
  2107 ;;		_main
  2108 ;; This function uses a non-reentrant model
  2109 ;;
  2110                           
  2111                           	psect	text10
  2112  001DD6                     __ptext10:
  2113                           	callstack 0
  2114  001DD6                     _leADC:
  2115                           	callstack 24
  2116                           
  2117                           ;incstack = 0
  2118                           ;leADC@Max stored from wreg
  2119  001DD6  6E60               	movwf	leADC@Max^0,c
  2120  001DD8                     
  2121                           ;main.c: 213:     int ValorADC = adcRead(0);
  2122  001DD8  0E00               	movlw	0
  2123  001DDA  6E02               	movwf	(adcRead@channel+1)^0,c
  2124  001DDC  0E00               	movlw	0
  2125  001DDE  6E01               	movwf	adcRead@channel^0,c
  2126  001DE0  EC29  F014         	call	_adcRead	;wreg free
  2127  001DE4  C001  F05E         	movff	?_adcRead,leADC@ValorADC
  2128  001DE8  C002  F05F         	movff	?_adcRead+1,leADC@ValorADC+1
  2129  001DEC                     
  2130                           ;main.c: 215:     int x = (float) (((Max - Min)*(ValorADC/1023.0)) + Min);
  2131  001DEC  505B               	movf	leADC@Min^0,w,c
  2132  001DEE  6E01               	movwf	___xxtofl@val^0,c
  2133  001DF0  6A02               	clrf	(___xxtofl@val+1)^0,c
  2134  001DF2  6A03               	clrf	(___xxtofl@val+2)^0,c
  2135  001DF4  6A04               	clrf	(___xxtofl@val+3)^0,c
  2136  001DF6  0E01               	movlw	1
  2137  001DF8  EC11  F00E         	call	___xxtofl
  2138  001DFC  C001  F045         	movff	?___xxtofl,___fladd@a
  2139  001E00  C002  F046         	movff	?___xxtofl+1,___fladd@a+1
  2140  001E04  C003  F047         	movff	?___xxtofl+2,___fladd@a+2
  2141  001E08  C004  F048         	movff	?___xxtofl+3,___fladd@a+3
  2142  001E0C  0E00               	movlw	0
  2143  001E0E  6E13               	movwf	___fldiv@a^0,c
  2144  001E10  0EC0               	movlw	192
  2145  001E12  6E14               	movwf	(___fldiv@a+1)^0,c
  2146  001E14  0E7F               	movlw	127
  2147  001E16  6E15               	movwf	(___fldiv@a+2)^0,c
  2148  001E18  0E44               	movlw	68
  2149  001E1A  6E16               	movwf	(___fldiv@a+3)^0,c
  2150  001E1C  C05E  F001         	movff	leADC@ValorADC,___xxtofl@val
  2151  001E20  C05F  F002         	movff	leADC@ValorADC+1,___xxtofl@val+1
  2152  001E24  0E00               	movlw	0
  2153  001E26  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  2154  001E28  0EFF               	movlw	-1
  2155  001E2A  6E03               	movwf	(___xxtofl@val+2)^0,c
  2156  001E2C  6E04               	movwf	(___xxtofl@val+3)^0,c
  2157  001E2E  0E01               	movlw	1
  2158  001E30  EC11  F00E         	call	___xxtofl
  2159  001E34  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2160  001E38  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2161  001E3C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2162  001E40  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2163  001E44  ECF6  F009         	call	___fldiv	;wreg free
  2164  001E48  C00F  F02C         	movff	?___fldiv,___flmul@a
  2165  001E4C  C010  F02D         	movff	?___fldiv+1,___flmul@a+1
  2166  001E50  C011  F02E         	movff	?___fldiv+2,___flmul@a+2
  2167  001E54  C012  F02F         	movff	?___fldiv+3,___flmul@a+3
  2168  001E58  505B               	movf	leADC@Min^0,w,c
  2169  001E5A  C060  F05C         	movff	leADC@Max,??_leADC
  2170  001E5E  6A5D               	clrf	(??_leADC+1)^0,c
  2171  001E60  5E5C               	subwf	??_leADC^0,f,c
  2172  001E62  0E00               	movlw	0
  2173  001E64  5A5D               	subwfb	(??_leADC+1)^0,f,c
  2174  001E66  C05C  F001         	movff	??_leADC,___xxtofl@val
  2175  001E6A  C05D  F002         	movff	??_leADC+1,___xxtofl@val+1
  2176  001E6E  0E00               	movlw	0
  2177  001E70  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  2178  001E72  0EFF               	movlw	-1
  2179  001E74  6E03               	movwf	(___xxtofl@val+2)^0,c
  2180  001E76  6E04               	movwf	(___xxtofl@val+3)^0,c
  2181  001E78  0E01               	movlw	1
  2182  001E7A  EC11  F00E         	call	___xxtofl
  2183  001E7E  C001  F028         	movff	?___xxtofl,___flmul@b
  2184  001E82  C002  F029         	movff	?___xxtofl+1,___flmul@b+1
  2185  001E86  C003  F02A         	movff	?___xxtofl+2,___flmul@b+2
  2186  001E8A  C004  F02B         	movff	?___xxtofl+3,___flmul@b+3
  2187  001E8E  ECE1  F007         	call	___flmul	;wreg free
  2188  001E92  C028  F041         	movff	?___flmul,___fladd@b
  2189  001E96  C029  F042         	movff	?___flmul+1,___fladd@b+1
  2190  001E9A  C02A  F043         	movff	?___flmul+2,___fladd@b+2
  2191  001E9E  C02B  F044         	movff	?___flmul+3,___fladd@b+3
  2192  001EA2  EC3A  F003         	call	___fladd	;wreg free
  2193  001EA6  C041  F051         	movff	?___fladd,___fltol@f1
  2194  001EAA  C042  F052         	movff	?___fladd+1,___fltol@f1+1
  2195  001EAE  C043  F053         	movff	?___fladd+2,___fltol@f1+2
  2196  001EB2  C044  F054         	movff	?___fladd+3,___fltol@f1+3
  2197  001EB6  EC11  F011         	call	___fltol	;wreg free
  2198  001EBA  C051  F061         	movff	?___fltol,leADC@x
  2199  001EBE  C052  F062         	movff	?___fltol+1,leADC@x+1
  2200  001EC2                     
  2201                           ;main.c: 217:     lcdCommand(0xC0);
  2202  001EC2  0EC0               	movlw	192
  2203  001EC4  EC7E  F015         	call	_lcdCommand
  2204  001EC8                     
  2205                           ;main.c: 218:     lcdChar((x / 1000) % 10 + '0');
  2206  001EC8  0E03               	movlw	3
  2207  001ECA  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2208  001ECC  0EE8               	movlw	232
  2209  001ECE  6E03               	movwf	___awdiv@divisor^0,c
  2210  001ED0  C061  F001         	movff	leADC@x,___awdiv@dividend
  2211  001ED4  C062  F002         	movff	leADC@x+1,___awdiv@dividend+1
  2212  001ED8  EC94  F011         	call	___awdiv	;wreg free
  2213  001EDC  C001  F009         	movff	?___awdiv,___awmod@dividend
  2214  001EE0  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  2215  001EE4  0E00               	movlw	0
  2216  001EE6  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2217  001EE8  0E0A               	movlw	10
  2218  001EEA  6E0B               	movwf	___awmod@divisor^0,c
  2219  001EEC  ECA9  F012         	call	___awmod	;wreg free
  2220  001EF0  5009               	movf	?___awmod^0,w,c
  2221  001EF2  0F30               	addlw	48
  2222  001EF4  EC6F  F015         	call	_lcdChar
  2223  001EF8                     
  2224                           ;main.c: 219:     lcdChar((x / 100) % 10 + '0');
  2225  001EF8  0E00               	movlw	0
  2226  001EFA  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2227  001EFC  0E64               	movlw	100
  2228  001EFE  6E03               	movwf	___awdiv@divisor^0,c
  2229  001F00  C061  F001         	movff	leADC@x,___awdiv@dividend
  2230  001F04  C062  F002         	movff	leADC@x+1,___awdiv@dividend+1
  2231  001F08  EC94  F011         	call	___awdiv	;wreg free
  2232  001F0C  C001  F009         	movff	?___awdiv,___awmod@dividend
  2233  001F10  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  2234  001F14  0E00               	movlw	0
  2235  001F16  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2236  001F18  0E0A               	movlw	10
  2237  001F1A  6E0B               	movwf	___awmod@divisor^0,c
  2238  001F1C  ECA9  F012         	call	___awmod	;wreg free
  2239  001F20  5009               	movf	?___awmod^0,w,c
  2240  001F22  0F30               	addlw	48
  2241  001F24  EC6F  F015         	call	_lcdChar
  2242  001F28                     
  2243                           ;main.c: 220:     lcdChar((x / 10) % 10 + '0');
  2244  001F28  0E00               	movlw	0
  2245  001F2A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2246  001F2C  0E0A               	movlw	10
  2247  001F2E  6E03               	movwf	___awdiv@divisor^0,c
  2248  001F30  C061  F001         	movff	leADC@x,___awdiv@dividend
  2249  001F34  C062  F002         	movff	leADC@x+1,___awdiv@dividend+1
  2250  001F38  EC94  F011         	call	___awdiv	;wreg free
  2251  001F3C  C001  F009         	movff	?___awdiv,___awmod@dividend
  2252  001F40  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  2253  001F44  0E00               	movlw	0
  2254  001F46  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2255  001F48  0E0A               	movlw	10
  2256  001F4A  6E0B               	movwf	___awmod@divisor^0,c
  2257  001F4C  ECA9  F012         	call	___awmod	;wreg free
  2258  001F50  5009               	movf	?___awmod^0,w,c
  2259  001F52  0F30               	addlw	48
  2260  001F54  EC6F  F015         	call	_lcdChar
  2261  001F58                     
  2262                           ;main.c: 221:     lcdChar((x / 1) % 10 + '0');
  2263  001F58  C061  F009         	movff	leADC@x,___awmod@dividend
  2264  001F5C  C062  F00A         	movff	leADC@x+1,___awmod@dividend+1
  2265  001F60  0E00               	movlw	0
  2266  001F62  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2267  001F64  0E0A               	movlw	10
  2268  001F66  6E0B               	movwf	___awmod@divisor^0,c
  2269  001F68  ECA9  F012         	call	___awmod	;wreg free
  2270  001F6C  5009               	movf	?___awmod^0,w,c
  2271  001F6E  0F30               	addlw	48
  2272  001F70  EC6F  F015         	call	_lcdChar
  2273  001F74                     
  2274                           ;main.c: 222:     lcdString(" Graus");
  2275  001F74  0E4F               	movlw	low STR_26
  2276  001F76  6E0F               	movwf	lcdString@msg^0,c
  2277  001F78  0E06               	movlw	high STR_26
  2278  001F7A  6E10               	movwf	(lcdString@msg+1)^0,c
  2279  001F7C  ECD6  F013         	call	_lcdString	;wreg free
  2280  001F80  0012               	return		;funcret
  2281  001F82                     __end_of_leADC:
  2282                           	callstack 0
  2283                           
  2284 ;; *************** function _lcdString *****************
  2285 ;; Defined at:
  2286 ;;		line 57 in file "lcd.c"
  2287 ;; Parameters:    Size  Location     Type
  2288 ;;  msg             2   14[COMRAM] PTR unsigned char 
  2289 ;;		 -> STR_26(7), STR_25(6), STR_24(11), STR_23(9), 
  2290 ;;		 -> STR_22(10), STR_20(6), STR_19(5), STR_16(6), 
  2291 ;;		 -> STR_15(5), STR_13(6), STR_12(10), STR_9(6), 
  2292 ;;		 -> STR_8(10), STR_6(6), STR_5(8), STR_2(6), 
  2293 ;;		 -> STR_1(8), 
  2294 ;; Auto vars:     Size  Location     Type
  2295 ;;  i               2   18[COMRAM] int 
  2296 ;; Return value:  Size  Location     Type
  2297 ;;                  1    wreg      void 
  2298 ;; Registers used:
  2299 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2300 ;; Tracked objects:
  2301 ;;		On entry : 0/0
  2302 ;;		On exit  : 0/0
  2303 ;;		Unchanged: 0/0
  2304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2305 ;;      Params:         2       0       0       0       0       0       0
  2306 ;;      Locals:         2       0       0       0       0       0       0
  2307 ;;      Temps:          2       0       0       0       0       0       0
  2308 ;;      Totals:         6       0       0       0       0       0       0
  2309 ;;Total ram usage:        6 bytes
  2310 ;; Hardware stack levels used: 1
  2311 ;; Hardware stack levels required when called: 5
  2312 ;; This function calls:
  2313 ;;		_lcdChar
  2314 ;; This function is called by:
  2315 ;;		_main
  2316 ;;		_leTeclado
  2317 ;;		_leADC
  2318 ;; This function uses a non-reentrant model
  2319 ;;
  2320                           
  2321                           	psect	text11
  2322  0027AC                     __ptext11:
  2323                           	callstack 0
  2324  0027AC                     _lcdString:
  2325                           	callstack 24
  2326  0027AC                     
  2327                           ;lcd.c: 58:  int i = 0;
  2328  0027AC  0E00               	movlw	0
  2329  0027AE  6E14               	movwf	(lcdString@i+1)^0,c
  2330  0027B0  0E00               	movlw	0
  2331  0027B2  6E13               	movwf	lcdString@i^0,c
  2332                           
  2333                           ;lcd.c: 59:  while (msg[i] != 0) {
  2334  0027B4  EFEC  F013         	goto	l2378
  2335  0027B8                     l2374:
  2336                           
  2337                           ;lcd.c: 60:   lcdChar(msg[i]);
  2338  0027B8  5013               	movf	lcdString@i^0,w,c
  2339  0027BA  240F               	addwf	lcdString@msg^0,w,c
  2340  0027BC  6E11               	movwf	??_lcdString^0,c
  2341  0027BE  5014               	movf	(lcdString@i+1)^0,w,c
  2342  0027C0  2010               	addwfc	(lcdString@msg+1)^0,w,c
  2343  0027C2  6E12               	movwf	(??_lcdString+1)^0,c
  2344  0027C4  C011  FFF6         	movff	??_lcdString,tblptrl
  2345  0027C8  C012  FFF7         	movff	??_lcdString+1,tblptrh
  2346  0027CC                     	if	0	;tblptru may be non-zero
  2347  0027CC                     	endif
  2348  0027CC                     	if	0	;tblptru may be non-zero
  2349  0027CC                     	endif
  2350  0027CC  0008               	tblrd		*
  2351  0027CE  50F5               	movf	tablat,w,c
  2352  0027D0  EC6F  F015         	call	_lcdChar
  2353  0027D4                     
  2354                           ;lcd.c: 61:   i++;
  2355  0027D4  4A13               	infsnz	lcdString@i^0,f,c
  2356  0027D6  2A14               	incf	(lcdString@i+1)^0,f,c
  2357  0027D8                     l2378:
  2358                           
  2359                           ;lcd.c: 59:  while (msg[i] != 0) {
  2360  0027D8  5013               	movf	lcdString@i^0,w,c
  2361  0027DA  240F               	addwf	lcdString@msg^0,w,c
  2362  0027DC  6E11               	movwf	??_lcdString^0,c
  2363  0027DE  5014               	movf	(lcdString@i+1)^0,w,c
  2364  0027E0  2010               	addwfc	(lcdString@msg+1)^0,w,c
  2365  0027E2  6E12               	movwf	(??_lcdString+1)^0,c
  2366  0027E4  C011  FFF6         	movff	??_lcdString,tblptrl
  2367  0027E8  C012  FFF7         	movff	??_lcdString+1,tblptrh
  2368  0027EC                     	if	0	;tblptru may be non-zero
  2369  0027EC                     	endif
  2370  0027EC                     	if	0	;tblptru may be non-zero
  2371  0027EC                     	endif
  2372  0027EC  0008               	tblrd		*
  2373  0027EE  50F5               	movf	tablat,w,c
  2374  0027F0  0900               	iorlw	0
  2375  0027F2  A4D8               	btfss	status,2,c
  2376  0027F4  EFFE  F013         	goto	u2311
  2377  0027F8  EF00  F014         	goto	u2310
  2378  0027FC                     u2311:
  2379  0027FC  EFDC  F013         	goto	l2374
  2380  002800                     u2310:
  2381  002800  0012               	return		;funcret
  2382  002802                     __end_of_lcdString:
  2383                           	callstack 0
  2384                           
  2385 ;; *************** function _adcRead *****************
  2386 ;; Defined at:
  2387 ;;		line 38 in file "adc.c"
  2388 ;; Parameters:    Size  Location     Type
  2389 ;;  channel         2    0[COMRAM] unsigned int 
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;  ADvalor         2    2[COMRAM] unsigned int 
  2392 ;; Return value:  Size  Location     Type
  2393 ;;                  2    0[COMRAM] int 
  2394 ;; Registers used:
  2395 ;;		wreg, status,2, status,0
  2396 ;; Tracked objects:
  2397 ;;		On entry : 0/0
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2401 ;;      Params:         2       0       0       0       0       0       0
  2402 ;;      Locals:         2       0       0       0       0       0       0
  2403 ;;      Temps:          0       0       0       0       0       0       0
  2404 ;;      Totals:         4       0       0       0       0       0       0
  2405 ;;Total ram usage:        4 bytes
  2406 ;; Hardware stack levels used: 1
  2407 ;; This function calls:
  2408 ;;		Nothing
  2409 ;; This function is called by:
  2410 ;;		_leADC
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           
  2414                           	psect	text12
  2415  002852                     __ptext12:
  2416                           	callstack 0
  2417  002852                     _adcRead:
  2418                           	callstack 29
  2419  002852                     
  2420                           ;adc.c: 39:     unsigned int ADvalor;;adc.c: 40:     ADCON0 &= 0b11000011;
  2421  002852  0EC3               	movlw	195
  2422  002854  16C2               	andwf	194,f,c	;volatile
  2423                           
  2424                           ;adc.c: 41:     if (channel < 3) {
  2425  002856  5002               	movf	(adcRead@channel+1)^0,w,c
  2426  002858  E107               	bnz	u2321
  2427  00285A  0E03               	movlw	3
  2428  00285C  5C01               	subwf	adcRead@channel^0,w,c
  2429  00285E  B0D8               	btfsc	status,0,c
  2430  002860  EF34  F014         	goto	u2321
  2431  002864  EF36  F014         	goto	u2320
  2432  002868                     u2321:
  2433  002868  EF3A  F014         	goto	l2386
  2434  00286C                     u2320:
  2435  00286C                     
  2436                           ;adc.c: 42:         ADCON0 |= channel << 2;
  2437  00286C  4401               	rlncf	adcRead@channel^0,w,c	;volatile
  2438  00286E  46E8               	rlncf	wreg,f,c
  2439  002870  0BFC               	andlw	252
  2440  002872  12C2               	iorwf	194,f,c	;volatile
  2441  002874                     l2386:
  2442                           
  2443                           ;adc.c: 45:     ADCON0 |= 0b00000010;
  2444  002874  82C2               	bsf	194,1,c	;volatile
  2445  002876                     l105:
  2446  002876  B2C2               	btfsc	194,1,c	;volatile
  2447  002878  EF40  F014         	goto	u2331
  2448  00287C  EF42  F014         	goto	u2330
  2449  002880                     u2331:
  2450  002880  EF3B  F014         	goto	l105
  2451  002884                     u2330:
  2452  002884                     
  2453                           ;adc.c: 49:     ADvalor = ADRESH;
  2454  002884  CFC4 F003          	movff	4036,adcRead@ADvalor	;volatile
  2455  002888  6A04               	clrf	(adcRead@ADvalor+1)^0,c
  2456  00288A                     
  2457                           ;adc.c: 50:     ADvalor <<= 8;
  2458  00288A  5003               	movf	adcRead@ADvalor^0,w,c
  2459  00288C  6E04               	movwf	(adcRead@ADvalor+1)^0,c
  2460  00288E  6A03               	clrf	adcRead@ADvalor^0,c
  2461  002890                     
  2462                           ;adc.c: 51:     ADvalor += ADRESL;
  2463  002890  50C3               	movf	195,w,c	;volatile
  2464  002892  2603               	addwf	adcRead@ADvalor^0,f,c
  2465  002894  0E00               	movlw	0
  2466  002896  2204               	addwfc	(adcRead@ADvalor+1)^0,f,c
  2467  002898                     
  2468                           ;adc.c: 52:     return ADvalor;
  2469  002898  C003  F001         	movff	adcRead@ADvalor,?_adcRead
  2470  00289C  C004  F002         	movff	adcRead@ADvalor+1,?_adcRead+1
  2471  0028A0  0012               	return		;funcret
  2472  0028A2                     __end_of_adcRead:
  2473                           	callstack 0
  2474                           
  2475 ;; *************** function ___xxtofl *****************
  2476 ;; Defined at:
  2477 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;  sign            1    wreg     unsigned char 
  2480 ;;  val             4    0[COMRAM] long 
  2481 ;; Auto vars:     Size  Location     Type
  2482 ;;  sign            1    8[COMRAM] unsigned char 
  2483 ;;  arg             4   10[COMRAM] unsigned long 
  2484 ;;  exp             1    9[COMRAM] unsigned char 
  2485 ;; Return value:  Size  Location     Type
  2486 ;;                  4    0[COMRAM] unsigned char 
  2487 ;; Registers used:
  2488 ;;		wreg, status,2, status,0
  2489 ;; Tracked objects:
  2490 ;;		On entry : 0/0
  2491 ;;		On exit  : 0/0
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2494 ;;      Params:         4       0       0       0       0       0       0
  2495 ;;      Locals:         6       0       0       0       0       0       0
  2496 ;;      Temps:          4       0       0       0       0       0       0
  2497 ;;      Totals:        14       0       0       0       0       0       0
  2498 ;;Total ram usage:       14 bytes
  2499 ;; Hardware stack levels used: 1
  2500 ;; This function calls:
  2501 ;;		Nothing
  2502 ;; This function is called by:
  2503 ;;		_leADC
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507                           	psect	text13
  2508  001C22                     __ptext13:
  2509                           	callstack 0
  2510  001C22                     ___xxtofl:
  2511                           	callstack 29
  2512                           
  2513                           ;incstack = 0
  2514                           ;___xxtofl@sign stored from wreg
  2515  001C22  6E09               	movwf	___xxtofl@sign^0,c
  2516  001C24  5009               	movf	___xxtofl@sign^0,w,c
  2517  001C26  B4D8               	btfsc	status,2,c
  2518  001C28  EF18  F00E         	goto	u3441
  2519  001C2C  EF1A  F00E         	goto	u3440
  2520  001C30                     u3441:
  2521  001C30  EF3C  F00E         	goto	l996
  2522  001C34                     u3440:
  2523  001C34  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  2524  001C36  EF21  F00E         	goto	u3450
  2525  001C3A  EF1F  F00E         	goto	u3451
  2526  001C3E                     u3451:
  2527  001C3E  EF3C  F00E         	goto	l996
  2528  001C42                     u3450:
  2529  001C42  C001  F005         	movff	___xxtofl@val,??___xxtofl
  2530  001C46  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  2531  001C4A  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  2532  001C4E  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  2533  001C52  1E05               	comf	??___xxtofl^0,f,c
  2534  001C54  1E06               	comf	(??___xxtofl+1)^0,f,c
  2535  001C56  1E07               	comf	(??___xxtofl+2)^0,f,c
  2536  001C58  1E08               	comf	(??___xxtofl+3)^0,f,c
  2537  001C5A  2A05               	incf	??___xxtofl^0,f,c
  2538  001C5C  0E00               	movlw	0
  2539  001C5E  2206               	addwfc	(??___xxtofl+1)^0,f,c
  2540  001C60  2207               	addwfc	(??___xxtofl+2)^0,f,c
  2541  001C62  2208               	addwfc	(??___xxtofl+3)^0,f,c
  2542  001C64  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  2543  001C68  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  2544  001C6C  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  2545  001C70  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  2546  001C74  EF44  F00E         	goto	l3038
  2547  001C78                     l996:
  2548  001C78  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  2549  001C7C  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2550  001C80  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2551  001C84  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2552  001C88                     l3038:
  2553  001C88  5001               	movf	___xxtofl@val^0,w,c
  2554  001C8A  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  2555  001C8C  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  2556  001C8E  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  2557  001C90  A4D8               	btfss	status,2,c
  2558  001C92  EF4D  F00E         	goto	u3461
  2559  001C96  EF4F  F00E         	goto	u3460
  2560  001C9A                     u3461:
  2561  001C9A  EF59  F00E         	goto	l3044
  2562  001C9E                     u3460:
  2563  001C9E  0E00               	movlw	0
  2564  001CA0  6E01               	movwf	?___xxtofl^0,c
  2565  001CA2  0E00               	movlw	0
  2566  001CA4  6E02               	movwf	(?___xxtofl+1)^0,c
  2567  001CA6  0E00               	movlw	0
  2568  001CA8  6E03               	movwf	(?___xxtofl+2)^0,c
  2569  001CAA  0E00               	movlw	0
  2570  001CAC  6E04               	movwf	(?___xxtofl+3)^0,c
  2571  001CAE  EFEA  F00E         	goto	l999
  2572  001CB2                     l3044:
  2573  001CB2  0E96               	movlw	150
  2574  001CB4  6E0A               	movwf	___xxtofl@exp^0,c
  2575  001CB6  EF63  F00E         	goto	l3048
  2576  001CBA                     l3046:
  2577  001CBA  2A0A               	incf	___xxtofl@exp^0,f,c
  2578  001CBC  90D8               	bcf	status,0,c
  2579  001CBE  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  2580  001CC0  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  2581  001CC2  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  2582  001CC4  320B               	rrcf	___xxtofl@arg^0,f,c
  2583  001CC6                     l3048:
  2584  001CC6  0E00               	movlw	0
  2585  001CC8  140B               	andwf	___xxtofl@arg^0,w,c
  2586  001CCA  6E05               	movwf	??___xxtofl^0,c
  2587  001CCC  0E00               	movlw	0
  2588  001CCE  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  2589  001CD0  6E06               	movwf	(??___xxtofl+1)^0,c
  2590  001CD2  0E00               	movlw	0
  2591  001CD4  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  2592  001CD6  6E07               	movwf	(??___xxtofl+2)^0,c
  2593  001CD8  0EFE               	movlw	254
  2594  001CDA  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  2595  001CDC  6E08               	movwf	(??___xxtofl+3)^0,c
  2596  001CDE  5005               	movf	??___xxtofl^0,w,c
  2597  001CE0  1006               	iorwf	(??___xxtofl+1)^0,w,c
  2598  001CE2  1007               	iorwf	(??___xxtofl+2)^0,w,c
  2599  001CE4  1008               	iorwf	(??___xxtofl+3)^0,w,c
  2600  001CE6  A4D8               	btfss	status,2,c
  2601  001CE8  EF78  F00E         	goto	u3471
  2602  001CEC  EF7A  F00E         	goto	u3470
  2603  001CF0                     u3471:
  2604  001CF0  EF5D  F00E         	goto	l3046
  2605  001CF4                     u3470:
  2606  001CF4  EF88  F00E         	goto	l1003
  2607  001CF8                     l3050:
  2608  001CF8  2A0A               	incf	___xxtofl@exp^0,f,c
  2609  001CFA  0E01               	movlw	1
  2610  001CFC  260B               	addwf	___xxtofl@arg^0,f,c
  2611  001CFE  0E00               	movlw	0
  2612  001D00  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  2613  001D02  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  2614  001D04  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  2615  001D06  90D8               	bcf	status,0,c
  2616  001D08  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  2617  001D0A  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  2618  001D0C  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  2619  001D0E  320B               	rrcf	___xxtofl@arg^0,f,c
  2620  001D10                     l1003:
  2621  001D10  0E00               	movlw	0
  2622  001D12  140B               	andwf	___xxtofl@arg^0,w,c
  2623  001D14  6E05               	movwf	??___xxtofl^0,c
  2624  001D16  0E00               	movlw	0
  2625  001D18  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  2626  001D1A  6E06               	movwf	(??___xxtofl+1)^0,c
  2627  001D1C  0E00               	movlw	0
  2628  001D1E  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  2629  001D20  6E07               	movwf	(??___xxtofl+2)^0,c
  2630  001D22  0EFF               	movlw	255
  2631  001D24  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  2632  001D26  6E08               	movwf	(??___xxtofl+3)^0,c
  2633  001D28  5005               	movf	??___xxtofl^0,w,c
  2634  001D2A  1006               	iorwf	(??___xxtofl+1)^0,w,c
  2635  001D2C  1007               	iorwf	(??___xxtofl+2)^0,w,c
  2636  001D2E  1008               	iorwf	(??___xxtofl+3)^0,w,c
  2637  001D30  A4D8               	btfss	status,2,c
  2638  001D32  EF9D  F00E         	goto	u3481
  2639  001D36  EF9F  F00E         	goto	u3480
  2640  001D3A                     u3481:
  2641  001D3A  EF7C  F00E         	goto	l3050
  2642  001D3E                     u3480:
  2643  001D3E  EFA7  F00E         	goto	l3058
  2644  001D42                     l3056:
  2645  001D42  060A               	decf	___xxtofl@exp^0,f,c
  2646  001D44  90D8               	bcf	status,0,c
  2647  001D46  360B               	rlcf	___xxtofl@arg^0,f,c
  2648  001D48  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  2649  001D4A  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  2650  001D4C  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  2651  001D4E                     l3058:
  2652  001D4E  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  2653  001D50  EFAC  F00E         	goto	u3491
  2654  001D54  EFAE  F00E         	goto	u3490
  2655  001D58                     u3491:
  2656  001D58  EFB6  F00E         	goto	l1010
  2657  001D5C                     u3490:
  2658  001D5C  0E02               	movlw	2
  2659  001D5E  600A               	cpfslt	___xxtofl@exp^0,c
  2660  001D60  EFB4  F00E         	goto	u3501
  2661  001D64  EFB6  F00E         	goto	u3500
  2662  001D68                     u3501:
  2663  001D68  EFA1  F00E         	goto	l3056
  2664  001D6C                     u3500:
  2665  001D6C                     l1010:
  2666  001D6C  B00A               	btfsc	___xxtofl@exp^0,0,c
  2667  001D6E  EFBB  F00E         	goto	u3511
  2668  001D72  EFBD  F00E         	goto	u3510
  2669  001D76                     u3511:
  2670  001D76  EFBE  F00E         	goto	l3064
  2671  001D7A                     u3510:
  2672  001D7A  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  2673  001D7C                     l3064:
  2674  001D7C  90D8               	bcf	status,0,c
  2675  001D7E  320A               	rrcf	___xxtofl@exp^0,f,c
  2676  001D80  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  2677  001D84  6A06               	clrf	(??___xxtofl+1)^0,c
  2678  001D86  6A07               	clrf	(??___xxtofl+2)^0,c
  2679  001D88  6A08               	clrf	(??___xxtofl+3)^0,c
  2680  001D8A  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  2681  001D8E  6A07               	clrf	(??___xxtofl+2)^0,c
  2682  001D90  6A06               	clrf	(??___xxtofl+1)^0,c
  2683  001D92  6A05               	clrf	??___xxtofl^0,c
  2684  001D94  5005               	movf	??___xxtofl^0,w,c
  2685  001D96  120B               	iorwf	___xxtofl@arg^0,f,c
  2686  001D98  5006               	movf	(??___xxtofl+1)^0,w,c
  2687  001D9A  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  2688  001D9C  5007               	movf	(??___xxtofl+2)^0,w,c
  2689  001D9E  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  2690  001DA0  5008               	movf	(??___xxtofl+3)^0,w,c
  2691  001DA2  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  2692  001DA4  5009               	movf	___xxtofl@sign^0,w,c
  2693  001DA6  B4D8               	btfsc	status,2,c
  2694  001DA8  EFD8  F00E         	goto	u3521
  2695  001DAC  EFDA  F00E         	goto	u3520
  2696  001DB0                     u3521:
  2697  001DB0  EFE2  F00E         	goto	l3074
  2698  001DB4                     u3520:
  2699  001DB4  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  2700  001DB6  EFE1  F00E         	goto	u3530
  2701  001DBA  EFDF  F00E         	goto	u3531
  2702  001DBE                     u3531:
  2703  001DBE  EFE2  F00E         	goto	l3074
  2704  001DC2                     u3530:
  2705  001DC2  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  2706  001DC4                     l3074:
  2707  001DC4  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  2708  001DC8  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  2709  001DCC  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  2710  001DD0  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  2711  001DD4                     l999:
  2712  001DD4  0012               	return		;funcret
  2713  001DD6                     __end_of___xxtofl:
  2714                           	callstack 0
  2715                           
  2716 ;; *************** function ___fltol *****************
  2717 ;; Defined at:
  2718 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  2719 ;; Parameters:    Size  Location     Type
  2720 ;;  f1              4   80[COMRAM] unsigned char 
  2721 ;; Auto vars:     Size  Location     Type
  2722 ;;  exp1            1   89[COMRAM] unsigned char 
  2723 ;;  sign1           1   88[COMRAM] unsigned char 
  2724 ;; Return value:  Size  Location     Type
  2725 ;;                  4   80[COMRAM] long 
  2726 ;; Registers used:
  2727 ;;		wreg, status,2, status,0
  2728 ;; Tracked objects:
  2729 ;;		On entry : 0/0
  2730 ;;		On exit  : 0/0
  2731 ;;		Unchanged: 0/0
  2732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2733 ;;      Params:         4       0       0       0       0       0       0
  2734 ;;      Locals:         2       0       0       0       0       0       0
  2735 ;;      Temps:          4       0       0       0       0       0       0
  2736 ;;      Totals:        10       0       0       0       0       0       0
  2737 ;;Total ram usage:       10 bytes
  2738 ;; Hardware stack levels used: 1
  2739 ;; This function calls:
  2740 ;;		Nothing
  2741 ;; This function is called by:
  2742 ;;		_leADC
  2743 ;; This function uses a non-reentrant model
  2744 ;;
  2745                           
  2746                           	psect	text14
  2747  002222                     __ptext14:
  2748                           	callstack 0
  2749  002222                     ___fltol:
  2750                           	callstack 29
  2751  002222  3453               	rlcf	(___fltol@f1+2)^0,w,c
  2752  002224  3454               	rlcf	(___fltol@f1+3)^0,w,c
  2753  002226  6E5A               	movwf	___fltol@exp1^0,c
  2754  002228  505A               	movf	___fltol@exp1^0,w,c
  2755  00222A  A4D8               	btfss	status,2,c
  2756  00222C  EF1A  F011         	goto	u3371
  2757  002230  EF1C  F011         	goto	u3370
  2758  002234                     u3371:
  2759  002234  EF26  F011         	goto	l2994
  2760  002238                     u3370:
  2761  002238                     l2990:
  2762  002238  0E00               	movlw	0
  2763  00223A  6E51               	movwf	?___fltol^0,c
  2764  00223C  0E00               	movlw	0
  2765  00223E  6E52               	movwf	(?___fltol+1)^0,c
  2766  002240  0E00               	movlw	0
  2767  002242  6E53               	movwf	(?___fltol+2)^0,c
  2768  002244  0E00               	movlw	0
  2769  002246  6E54               	movwf	(?___fltol+3)^0,c
  2770  002248  EF93  F011         	goto	l638
  2771  00224C                     l2994:
  2772  00224C  C051  F055         	movff	___fltol@f1,??___fltol
  2773  002250  C052  F056         	movff	___fltol@f1+1,??___fltol+1
  2774  002254  C053  F057         	movff	___fltol@f1+2,??___fltol+2
  2775  002258  C054  F058         	movff	___fltol@f1+3,??___fltol+3
  2776  00225C  0E20               	movlw	32
  2777  00225E  EF36  F011         	goto	u3380
  2778  002262                     u3385:
  2779  002262  90D8               	bcf	status,0,c
  2780  002264  3258               	rrcf	(??___fltol+3)^0,f,c
  2781  002266  3257               	rrcf	(??___fltol+2)^0,f,c
  2782  002268  3256               	rrcf	(??___fltol+1)^0,f,c
  2783  00226A  3255               	rrcf	??___fltol^0,f,c
  2784  00226C                     u3380:
  2785  00226C  2EE8               	decfsz	wreg,f,c
  2786  00226E  EF31  F011         	goto	u3385
  2787  002272  5055               	movf	??___fltol^0,w,c
  2788  002274  6E59               	movwf	___fltol@sign1^0,c
  2789  002276  8E53               	bsf	(___fltol@f1+2)^0,7,c
  2790  002278  0EFF               	movlw	255
  2791  00227A  1651               	andwf	___fltol@f1^0,f,c
  2792  00227C  0EFF               	movlw	255
  2793  00227E  1652               	andwf	(___fltol@f1+1)^0,f,c
  2794  002280  0EFF               	movlw	255
  2795  002282  1653               	andwf	(___fltol@f1+2)^0,f,c
  2796  002284  0E00               	movlw	0
  2797  002286  1654               	andwf	(___fltol@f1+3)^0,f,c
  2798  002288  0E96               	movlw	150
  2799  00228A  5E5A               	subwf	___fltol@exp1^0,f,c
  2800  00228C  BE5A               	btfsc	___fltol@exp1^0,7,c
  2801  00228E  EF4D  F011         	goto	u3390
  2802  002292  EF4B  F011         	goto	u3391
  2803  002296                     u3391:
  2804  002296  EF63  F011         	goto	l3014
  2805  00229A                     u3390:
  2806  00229A  505A               	movf	___fltol@exp1^0,w,c
  2807  00229C  0A80               	xorlw	128
  2808  00229E  0F97               	addlw	151
  2809  0022A0  B0D8               	btfsc	status,0,c
  2810  0022A2  EF55  F011         	goto	u3401
  2811  0022A6  EF57  F011         	goto	u3400
  2812  0022AA                     u3401:
  2813  0022AA  EF59  F011         	goto	l3010
  2814  0022AE                     u3400:
  2815  0022AE  EF1C  F011         	goto	l2990
  2816  0022B2                     l3010:
  2817  0022B2  90D8               	bcf	status,0,c
  2818  0022B4  3254               	rrcf	(___fltol@f1+3)^0,f,c
  2819  0022B6  3253               	rrcf	(___fltol@f1+2)^0,f,c
  2820  0022B8  3252               	rrcf	(___fltol@f1+1)^0,f,c
  2821  0022BA  3251               	rrcf	___fltol@f1^0,f,c
  2822  0022BC  3E5A               	incfsz	___fltol@exp1^0,f,c
  2823  0022BE  EF59  F011         	goto	l3010
  2824  0022C2  EF7B  F011         	goto	l3024
  2825  0022C6                     l3014:
  2826  0022C6  0E1F               	movlw	31
  2827  0022C8  645A               	cpfsgt	___fltol@exp1^0,c
  2828  0022CA  EF69  F011         	goto	u3411
  2829  0022CE  EF6B  F011         	goto	u3410
  2830  0022D2                     u3411:
  2831  0022D2  EF73  F011         	goto	l3022
  2832  0022D6                     u3410:
  2833  0022D6  EF1C  F011         	goto	l2990
  2834  0022DA                     l3020:
  2835  0022DA  90D8               	bcf	status,0,c
  2836  0022DC  3651               	rlcf	___fltol@f1^0,f,c
  2837  0022DE  3652               	rlcf	(___fltol@f1+1)^0,f,c
  2838  0022E0  3653               	rlcf	(___fltol@f1+2)^0,f,c
  2839  0022E2  3654               	rlcf	(___fltol@f1+3)^0,f,c
  2840  0022E4  065A               	decf	___fltol@exp1^0,f,c
  2841  0022E6                     l3022:
  2842  0022E6  505A               	movf	___fltol@exp1^0,w,c
  2843  0022E8  A4D8               	btfss	status,2,c
  2844  0022EA  EF79  F011         	goto	u3421
  2845  0022EE  EF7B  F011         	goto	u3420
  2846  0022F2                     u3421:
  2847  0022F2  EF6D  F011         	goto	l3020
  2848  0022F6                     u3420:
  2849  0022F6                     l3024:
  2850  0022F6  5059               	movf	___fltol@sign1^0,w,c
  2851  0022F8  B4D8               	btfsc	status,2,c
  2852  0022FA  EF81  F011         	goto	u3431
  2853  0022FE  EF83  F011         	goto	u3430
  2854  002302                     u3431:
  2855  002302  EF8B  F011         	goto	l3028
  2856  002306                     u3430:
  2857  002306  1E54               	comf	(___fltol@f1+3)^0,f,c
  2858  002308  1E53               	comf	(___fltol@f1+2)^0,f,c
  2859  00230A  1E52               	comf	(___fltol@f1+1)^0,f,c
  2860  00230C  6C51               	negf	___fltol@f1^0,c
  2861  00230E  0E00               	movlw	0
  2862  002310  2252               	addwfc	(___fltol@f1+1)^0,f,c
  2863  002312  2253               	addwfc	(___fltol@f1+2)^0,f,c
  2864  002314  2254               	addwfc	(___fltol@f1+3)^0,f,c
  2865  002316                     l3028:
  2866  002316  C051  F051         	movff	___fltol@f1,?___fltol
  2867  00231A  C052  F052         	movff	___fltol@f1+1,?___fltol+1
  2868  00231E  C053  F053         	movff	___fltol@f1+2,?___fltol+2
  2869  002322  C054  F054         	movff	___fltol@f1+3,?___fltol+3
  2870  002326                     l638:
  2871  002326  0012               	return		;funcret
  2872  002328                     __end_of___fltol:
  2873                           	callstack 0
  2874                           
  2875 ;; *************** function ___flmul *****************
  2876 ;; Defined at:
  2877 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;  b               4   39[COMRAM] long 
  2880 ;;  a               4   43[COMRAM] long 
  2881 ;; Auto vars:     Size  Location     Type
  2882 ;;  prod            4   58[COMRAM] struct .
  2883 ;;  grs             4   52[COMRAM] unsigned long 
  2884 ;;  temp            2   62[COMRAM] struct .
  2885 ;;  bexp            1   57[COMRAM] unsigned char 
  2886 ;;  aexp            1   56[COMRAM] unsigned char 
  2887 ;;  sign            1   51[COMRAM] unsigned char 
  2888 ;; Return value:  Size  Location     Type
  2889 ;;                  4   39[COMRAM] unsigned char 
  2890 ;; Registers used:
  2891 ;;		wreg, status,2, status,0, prodl, prodh
  2892 ;; Tracked objects:
  2893 ;;		On entry : 0/0
  2894 ;;		On exit  : 0/0
  2895 ;;		Unchanged: 0/0
  2896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2897 ;;      Params:         8       0       0       0       0       0       0
  2898 ;;      Locals:        13       0       0       0       0       0       0
  2899 ;;      Temps:          4       0       0       0       0       0       0
  2900 ;;      Totals:        25       0       0       0       0       0       0
  2901 ;;Total ram usage:       25 bytes
  2902 ;; Hardware stack levels used: 1
  2903 ;; This function calls:
  2904 ;;		Nothing
  2905 ;; This function is called by:
  2906 ;;		_leADC
  2907 ;; This function uses a non-reentrant model
  2908 ;;
  2909                           
  2910                           	psect	text15
  2911  000FC2                     __ptext15:
  2912                           	callstack 0
  2913  000FC2                     ___flmul:
  2914                           	callstack 29
  2915  000FC2  502B               	movf	(___flmul@b+3)^0,w,c
  2916  000FC4  0B80               	andlw	128
  2917  000FC6  6E34               	movwf	___flmul@sign^0,c
  2918  000FC8  502B               	movf	(___flmul@b+3)^0,w,c
  2919  000FCA  242B               	addwf	(___flmul@b+3)^0,w,c
  2920  000FCC  6E3A               	movwf	___flmul@bexp^0,c
  2921  000FCE  AE2A               	btfss	(___flmul@b+2)^0,7,c
  2922  000FD0  EFEC  F007         	goto	u3061
  2923  000FD4  EFEE  F007         	goto	u3060
  2924  000FD8                     u3061:
  2925  000FD8  EFEF  F007         	goto	l2784
  2926  000FDC                     u3060:
  2927  000FDC  803A               	bsf	___flmul@bexp^0,0,c
  2928  000FDE                     l2784:
  2929  000FDE  503A               	movf	___flmul@bexp^0,w,c
  2930  000FE0  B4D8               	btfsc	status,2,c
  2931  000FE2  EFF5  F007         	goto	u3071
  2932  000FE6  EFF7  F007         	goto	u3070
  2933  000FEA                     u3071:
  2934  000FEA  EF0A  F008         	goto	l2792
  2935  000FEE                     u3070:
  2936  000FEE  283A               	incf	___flmul@bexp^0,w,c
  2937  000FF0  A4D8               	btfss	status,2,c
  2938  000FF2  EFFD  F007         	goto	u3081
  2939  000FF6  EFFF  F007         	goto	u3080
  2940  000FFA                     u3081:
  2941  000FFA  EF07  F008         	goto	l2790
  2942  000FFE                     u3080:
  2943  000FFE  0E00               	movlw	0
  2944  001000  6E28               	movwf	___flmul@b^0,c
  2945  001002  0E00               	movlw	0
  2946  001004  6E29               	movwf	(___flmul@b+1)^0,c
  2947  001006  0E00               	movlw	0
  2948  001008  6E2A               	movwf	(___flmul@b+2)^0,c
  2949  00100A  0E00               	movlw	0
  2950  00100C  6E2B               	movwf	(___flmul@b+3)^0,c
  2951  00100E                     l2790:
  2952  00100E  8E2A               	bsf	(___flmul@b+2)^0,7,c
  2953  001010  EF12  F008         	goto	l2794
  2954  001014                     l2792:
  2955  001014  0E00               	movlw	0
  2956  001016  6E28               	movwf	___flmul@b^0,c
  2957  001018  0E00               	movlw	0
  2958  00101A  6E29               	movwf	(___flmul@b+1)^0,c
  2959  00101C  0E00               	movlw	0
  2960  00101E  6E2A               	movwf	(___flmul@b+2)^0,c
  2961  001020  0E00               	movlw	0
  2962  001022  6E2B               	movwf	(___flmul@b+3)^0,c
  2963  001024                     l2794:
  2964  001024  502F               	movf	(___flmul@a+3)^0,w,c
  2965  001026  0B80               	andlw	128
  2966  001028  1A34               	xorwf	___flmul@sign^0,f,c
  2967  00102A  502F               	movf	(___flmul@a+3)^0,w,c
  2968  00102C  242F               	addwf	(___flmul@a+3)^0,w,c
  2969  00102E  6E39               	movwf	___flmul@aexp^0,c
  2970  001030  AE2E               	btfss	(___flmul@a+2)^0,7,c
  2971  001032  EF1D  F008         	goto	u3091
  2972  001036  EF1F  F008         	goto	u3090
  2973  00103A                     u3091:
  2974  00103A  EF20  F008         	goto	l2802
  2975  00103E                     u3090:
  2976  00103E  8039               	bsf	___flmul@aexp^0,0,c
  2977  001040                     l2802:
  2978  001040  5039               	movf	___flmul@aexp^0,w,c
  2979  001042  B4D8               	btfsc	status,2,c
  2980  001044  EF26  F008         	goto	u3101
  2981  001048  EF28  F008         	goto	u3100
  2982  00104C                     u3101:
  2983  00104C  EF3B  F008         	goto	l2810
  2984  001050                     u3100:
  2985  001050  2839               	incf	___flmul@aexp^0,w,c
  2986  001052  A4D8               	btfss	status,2,c
  2987  001054  EF2E  F008         	goto	u3111
  2988  001058  EF30  F008         	goto	u3110
  2989  00105C                     u3111:
  2990  00105C  EF38  F008         	goto	l2808
  2991  001060                     u3110:
  2992  001060  0E00               	movlw	0
  2993  001062  6E2C               	movwf	___flmul@a^0,c
  2994  001064  0E00               	movlw	0
  2995  001066  6E2D               	movwf	(___flmul@a+1)^0,c
  2996  001068  0E00               	movlw	0
  2997  00106A  6E2E               	movwf	(___flmul@a+2)^0,c
  2998  00106C  0E00               	movlw	0
  2999  00106E  6E2F               	movwf	(___flmul@a+3)^0,c
  3000  001070                     l2808:
  3001  001070  8E2E               	bsf	(___flmul@a+2)^0,7,c
  3002  001072  EF43  F008         	goto	l955
  3003  001076                     l2810:
  3004  001076  0E00               	movlw	0
  3005  001078  6E2C               	movwf	___flmul@a^0,c
  3006  00107A  0E00               	movlw	0
  3007  00107C  6E2D               	movwf	(___flmul@a+1)^0,c
  3008  00107E  0E00               	movlw	0
  3009  001080  6E2E               	movwf	(___flmul@a+2)^0,c
  3010  001082  0E00               	movlw	0
  3011  001084  6E2F               	movwf	(___flmul@a+3)^0,c
  3012  001086                     l955:
  3013  001086  5039               	movf	___flmul@aexp^0,w,c
  3014  001088  B4D8               	btfsc	status,2,c
  3015  00108A  EF49  F008         	goto	u3121
  3016  00108E  EF4B  F008         	goto	u3120
  3017  001092                     u3121:
  3018  001092  EF53  F008         	goto	l2814
  3019  001096                     u3120:
  3020  001096  503A               	movf	___flmul@bexp^0,w,c
  3021  001098  A4D8               	btfss	status,2,c
  3022  00109A  EF51  F008         	goto	u3131
  3023  00109E  EF53  F008         	goto	u3130
  3024  0010A2                     u3131:
  3025  0010A2  EF5D  F008         	goto	l2818
  3026  0010A6                     u3130:
  3027  0010A6                     l2814:
  3028  0010A6  0E00               	movlw	0
  3029  0010A8  6E28               	movwf	?___flmul^0,c
  3030  0010AA  0E00               	movlw	0
  3031  0010AC  6E29               	movwf	(?___flmul+1)^0,c
  3032  0010AE  0E00               	movlw	0
  3033  0010B0  6E2A               	movwf	(?___flmul+2)^0,c
  3034  0010B2  0E00               	movlw	0
  3035  0010B4  6E2B               	movwf	(?___flmul+3)^0,c
  3036  0010B6  EFF5  F009         	goto	l959
  3037  0010BA                     l2818:
  3038  0010BA  502E               	movf	(___flmul@a+2)^0,w,c
  3039  0010BC  0228               	mulwf	___flmul@b^0,c
  3040  0010BE  CFF3 F03F          	movff	prodl,___flmul@temp
  3041  0010C2  CFF4 F040          	movff	prodh,___flmul@temp+1
  3042  0010C6  503F               	movf	___flmul@temp^0,w,c
  3043  0010C8  6E35               	movwf	___flmul@grs^0,c
  3044  0010CA  6A36               	clrf	(___flmul@grs+1)^0,c
  3045  0010CC  6A37               	clrf	(___flmul@grs+2)^0,c
  3046  0010CE  6A38               	clrf	(___flmul@grs+3)^0,c
  3047  0010D0  5040               	movf	(___flmul@temp+1)^0,w,c
  3048  0010D2  6E3B               	movwf	___flmul@prod^0,c
  3049  0010D4  6A3C               	clrf	(___flmul@prod+1)^0,c
  3050  0010D6  6A3D               	clrf	(___flmul@prod+2)^0,c
  3051  0010D8  6A3E               	clrf	(___flmul@prod+3)^0,c
  3052  0010DA  502D               	movf	(___flmul@a+1)^0,w,c
  3053  0010DC  0229               	mulwf	(___flmul@b+1)^0,c
  3054  0010DE  CFF3 F03F          	movff	prodl,___flmul@temp
  3055  0010E2  CFF4 F040          	movff	prodh,___flmul@temp+1
  3056  0010E6  503F               	movf	___flmul@temp^0,w,c
  3057  0010E8  2635               	addwf	___flmul@grs^0,f,c
  3058  0010EA  0E00               	movlw	0
  3059  0010EC  2236               	addwfc	(___flmul@grs+1)^0,f,c
  3060  0010EE  2237               	addwfc	(___flmul@grs+2)^0,f,c
  3061  0010F0  2238               	addwfc	(___flmul@grs+3)^0,f,c
  3062  0010F2  5040               	movf	(___flmul@temp+1)^0,w,c
  3063  0010F4  263B               	addwf	___flmul@prod^0,f,c
  3064  0010F6  0E00               	movlw	0
  3065  0010F8  223C               	addwfc	(___flmul@prod+1)^0,f,c
  3066  0010FA  223D               	addwfc	(___flmul@prod+2)^0,f,c
  3067  0010FC  223E               	addwfc	(___flmul@prod+3)^0,f,c
  3068  0010FE  502C               	movf	___flmul@a^0,w,c
  3069  001100  022A               	mulwf	(___flmul@b+2)^0,c
  3070  001102  CFF3 F03F          	movff	prodl,___flmul@temp
  3071  001106  CFF4 F040          	movff	prodh,___flmul@temp+1
  3072  00110A  503F               	movf	___flmul@temp^0,w,c
  3073  00110C  2635               	addwf	___flmul@grs^0,f,c
  3074  00110E  0E00               	movlw	0
  3075  001110  2236               	addwfc	(___flmul@grs+1)^0,f,c
  3076  001112  2237               	addwfc	(___flmul@grs+2)^0,f,c
  3077  001114  2238               	addwfc	(___flmul@grs+3)^0,f,c
  3078  001116  5040               	movf	(___flmul@temp+1)^0,w,c
  3079  001118  263B               	addwf	___flmul@prod^0,f,c
  3080  00111A  0E00               	movlw	0
  3081  00111C  223C               	addwfc	(___flmul@prod+1)^0,f,c
  3082  00111E  223D               	addwfc	(___flmul@prod+2)^0,f,c
  3083  001120  223E               	addwfc	(___flmul@prod+3)^0,f,c
  3084  001122  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  3085  001126  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  3086  00112A  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  3087  00112E  6A35               	clrf	___flmul@grs^0,c
  3088  001130  502C               	movf	___flmul@a^0,w,c
  3089  001132  0229               	mulwf	(___flmul@b+1)^0,c
  3090  001134  CFF3 F03F          	movff	prodl,___flmul@temp
  3091  001138  CFF4 F040          	movff	prodh,___flmul@temp+1
  3092  00113C  503F               	movf	___flmul@temp^0,w,c
  3093  00113E  2635               	addwf	___flmul@grs^0,f,c
  3094  001140  5040               	movf	(___flmul@temp+1)^0,w,c
  3095  001142  2236               	addwfc	(___flmul@grs+1)^0,f,c
  3096  001144  0E00               	movlw	0
  3097  001146  2237               	addwfc	(___flmul@grs+2)^0,f,c
  3098  001148  0E00               	movlw	0
  3099  00114A  2238               	addwfc	(___flmul@grs+3)^0,f,c
  3100  00114C  502D               	movf	(___flmul@a+1)^0,w,c
  3101  00114E  0228               	mulwf	___flmul@b^0,c
  3102  001150  CFF3 F03F          	movff	prodl,___flmul@temp
  3103  001154  CFF4 F040          	movff	prodh,___flmul@temp+1
  3104  001158  503F               	movf	___flmul@temp^0,w,c
  3105  00115A  2635               	addwf	___flmul@grs^0,f,c
  3106  00115C  5040               	movf	(___flmul@temp+1)^0,w,c
  3107  00115E  2236               	addwfc	(___flmul@grs+1)^0,f,c
  3108  001160  0E00               	movlw	0
  3109  001162  2237               	addwfc	(___flmul@grs+2)^0,f,c
  3110  001164  0E00               	movlw	0
  3111  001166  2238               	addwfc	(___flmul@grs+3)^0,f,c
  3112  001168  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  3113  00116C  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  3114  001170  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  3115  001174  6A35               	clrf	___flmul@grs^0,c
  3116  001176  502C               	movf	___flmul@a^0,w,c
  3117  001178  0228               	mulwf	___flmul@b^0,c
  3118  00117A  CFF3 F03F          	movff	prodl,___flmul@temp
  3119  00117E  CFF4 F040          	movff	prodh,___flmul@temp+1
  3120  001182  503F               	movf	___flmul@temp^0,w,c
  3121  001184  2635               	addwf	___flmul@grs^0,f,c
  3122  001186  5040               	movf	(___flmul@temp+1)^0,w,c
  3123  001188  2236               	addwfc	(___flmul@grs+1)^0,f,c
  3124  00118A  0E00               	movlw	0
  3125  00118C  2237               	addwfc	(___flmul@grs+2)^0,f,c
  3126  00118E  0E00               	movlw	0
  3127  001190  2238               	addwfc	(___flmul@grs+3)^0,f,c
  3128  001192  502E               	movf	(___flmul@a+2)^0,w,c
  3129  001194  0229               	mulwf	(___flmul@b+1)^0,c
  3130  001196  CFF3 F03F          	movff	prodl,___flmul@temp
  3131  00119A  CFF4 F040          	movff	prodh,___flmul@temp+1
  3132  00119E  503F               	movf	___flmul@temp^0,w,c
  3133  0011A0  263B               	addwf	___flmul@prod^0,f,c
  3134  0011A2  5040               	movf	(___flmul@temp+1)^0,w,c
  3135  0011A4  223C               	addwfc	(___flmul@prod+1)^0,f,c
  3136  0011A6  0E00               	movlw	0
  3137  0011A8  223D               	addwfc	(___flmul@prod+2)^0,f,c
  3138  0011AA  0E00               	movlw	0
  3139  0011AC  223E               	addwfc	(___flmul@prod+3)^0,f,c
  3140  0011AE  502D               	movf	(___flmul@a+1)^0,w,c
  3141  0011B0  022A               	mulwf	(___flmul@b+2)^0,c
  3142  0011B2  CFF3 F03F          	movff	prodl,___flmul@temp
  3143  0011B6  CFF4 F040          	movff	prodh,___flmul@temp+1
  3144  0011BA  503F               	movf	___flmul@temp^0,w,c
  3145  0011BC  263B               	addwf	___flmul@prod^0,f,c
  3146  0011BE  5040               	movf	(___flmul@temp+1)^0,w,c
  3147  0011C0  223C               	addwfc	(___flmul@prod+1)^0,f,c
  3148  0011C2  0E00               	movlw	0
  3149  0011C4  223D               	addwfc	(___flmul@prod+2)^0,f,c
  3150  0011C6  0E00               	movlw	0
  3151  0011C8  223E               	addwfc	(___flmul@prod+3)^0,f,c
  3152  0011CA  502E               	movf	(___flmul@a+2)^0,w,c
  3153  0011CC  022A               	mulwf	(___flmul@b+2)^0,c
  3154  0011CE  CFF3 F03F          	movff	prodl,___flmul@temp
  3155  0011D2  CFF4 F040          	movff	prodh,___flmul@temp+1
  3156  0011D6  503F               	movf	___flmul@temp^0,w,c
  3157  0011D8  6E30               	movwf	??___flmul^0,c
  3158  0011DA  5040               	movf	(___flmul@temp+1)^0,w,c
  3159  0011DC  6E31               	movwf	(??___flmul+1)^0,c
  3160  0011DE  6A32               	clrf	(??___flmul+2)^0,c
  3161  0011E0  6A33               	clrf	(??___flmul+3)^0,c
  3162  0011E2  C032  F033         	movff	??___flmul+2,??___flmul+3
  3163  0011E6  C031  F032         	movff	??___flmul+1,??___flmul+2
  3164  0011EA  C030  F031         	movff	??___flmul,??___flmul+1
  3165  0011EE  6A30               	clrf	??___flmul^0,c
  3166  0011F0  5030               	movf	??___flmul^0,w,c
  3167  0011F2  263B               	addwf	___flmul@prod^0,f,c
  3168  0011F4  5031               	movf	(??___flmul+1)^0,w,c
  3169  0011F6  223C               	addwfc	(___flmul@prod+1)^0,f,c
  3170  0011F8  5032               	movf	(??___flmul+2)^0,w,c
  3171  0011FA  223D               	addwfc	(___flmul@prod+2)^0,f,c
  3172  0011FC  5033               	movf	(??___flmul+3)^0,w,c
  3173  0011FE  223E               	addwfc	(___flmul@prod+3)^0,f,c
  3174  001200  C035  F030         	movff	___flmul@grs,??___flmul
  3175  001204  C036  F031         	movff	___flmul@grs+1,??___flmul+1
  3176  001208  C037  F032         	movff	___flmul@grs+2,??___flmul+2
  3177  00120C  C038  F033         	movff	___flmul@grs+3,??___flmul+3
  3178  001210  0E19               	movlw	25
  3179  001212  EF10  F009         	goto	u3140
  3180  001216                     u3145:
  3181  001216  90D8               	bcf	status,0,c
  3182  001218  3233               	rrcf	(??___flmul+3)^0,f,c
  3183  00121A  3232               	rrcf	(??___flmul+2)^0,f,c
  3184  00121C  3231               	rrcf	(??___flmul+1)^0,f,c
  3185  00121E  3230               	rrcf	??___flmul^0,f,c
  3186  001220                     u3140:
  3187  001220  2EE8               	decfsz	wreg,f,c
  3188  001222  EF0B  F009         	goto	u3145
  3189  001226  5030               	movf	??___flmul^0,w,c
  3190  001228  263B               	addwf	___flmul@prod^0,f,c
  3191  00122A  5031               	movf	(??___flmul+1)^0,w,c
  3192  00122C  223C               	addwfc	(___flmul@prod+1)^0,f,c
  3193  00122E  5032               	movf	(??___flmul+2)^0,w,c
  3194  001230  223D               	addwfc	(___flmul@prod+2)^0,f,c
  3195  001232  5033               	movf	(??___flmul+3)^0,w,c
  3196  001234  223E               	addwfc	(___flmul@prod+3)^0,f,c
  3197  001236  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  3198  00123A  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  3199  00123E  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  3200  001242  6A35               	clrf	___flmul@grs^0,c
  3201  001244  5039               	movf	___flmul@aexp^0,w,c
  3202  001246  C03A  F030         	movff	___flmul@bexp,??___flmul
  3203  00124A  6A31               	clrf	(??___flmul+1)^0,c
  3204  00124C  2630               	addwf	??___flmul^0,f,c
  3205  00124E  0E00               	movlw	0
  3206  001250  2231               	addwfc	(??___flmul+1)^0,f,c
  3207  001252  0E82               	movlw	130
  3208  001254  2430               	addwf	??___flmul^0,w,c
  3209  001256  6E3F               	movwf	___flmul@temp^0,c
  3210  001258  0EFF               	movlw	255
  3211  00125A  2031               	addwfc	(??___flmul+1)^0,w,c
  3212  00125C  6E40               	movwf	(___flmul@temp+1)^0,c
  3213  00125E  EF46  F009         	goto	l2866
  3214  001262                     l2860:
  3215  001262  90D8               	bcf	status,0,c
  3216  001264  363B               	rlcf	___flmul@prod^0,f,c
  3217  001266  363C               	rlcf	(___flmul@prod+1)^0,f,c
  3218  001268  363D               	rlcf	(___flmul@prod+2)^0,f,c
  3219  00126A  363E               	rlcf	(___flmul@prod+3)^0,f,c
  3220  00126C  AE38               	btfss	(___flmul@grs+3)^0,7,c
  3221  00126E  EF3B  F009         	goto	u3151
  3222  001272  EF3D  F009         	goto	u3150
  3223  001276                     u3151:
  3224  001276  EF3E  F009         	goto	l962
  3225  00127A                     u3150:
  3226  00127A  803B               	bsf	___flmul@prod^0,0,c
  3227  00127C                     l962:
  3228  00127C  90D8               	bcf	status,0,c
  3229  00127E  3635               	rlcf	___flmul@grs^0,f,c
  3230  001280  3636               	rlcf	(___flmul@grs+1)^0,f,c
  3231  001282  3637               	rlcf	(___flmul@grs+2)^0,f,c
  3232  001284  3638               	rlcf	(___flmul@grs+3)^0,f,c
  3233  001286  063F               	decf	___flmul@temp^0,f,c
  3234  001288  A0D8               	btfss	status,0,c
  3235  00128A  0640               	decf	(___flmul@temp+1)^0,f,c
  3236  00128C                     l2866:
  3237  00128C  AE3D               	btfss	(___flmul@prod+2)^0,7,c
  3238  00128E  EF4B  F009         	goto	u3161
  3239  001292  EF4D  F009         	goto	u3160
  3240  001296                     u3161:
  3241  001296  EF31  F009         	goto	l2860
  3242  00129A                     u3160:
  3243  00129A  0E00               	movlw	0
  3244  00129C  6E39               	movwf	___flmul@aexp^0,c
  3245  00129E  AE38               	btfss	(___flmul@grs+3)^0,7,c
  3246  0012A0  EF54  F009         	goto	u3171
  3247  0012A4  EF56  F009         	goto	u3170
  3248  0012A8                     u3171:
  3249  0012A8  EF7A  F009         	goto	l964
  3250  0012AC                     u3170:
  3251  0012AC  0EFF               	movlw	255
  3252  0012AE  1435               	andwf	___flmul@grs^0,w,c
  3253  0012B0  6E30               	movwf	??___flmul^0,c
  3254  0012B2  0EFF               	movlw	255
  3255  0012B4  1436               	andwf	(___flmul@grs+1)^0,w,c
  3256  0012B6  6E31               	movwf	(??___flmul+1)^0,c
  3257  0012B8  0EFF               	movlw	255
  3258  0012BA  1437               	andwf	(___flmul@grs+2)^0,w,c
  3259  0012BC  6E32               	movwf	(??___flmul+2)^0,c
  3260  0012BE  0E7F               	movlw	127
  3261  0012C0  1438               	andwf	(___flmul@grs+3)^0,w,c
  3262  0012C2  6E33               	movwf	(??___flmul+3)^0,c
  3263  0012C4  5030               	movf	??___flmul^0,w,c
  3264  0012C6  1031               	iorwf	(??___flmul+1)^0,w,c
  3265  0012C8  1032               	iorwf	(??___flmul+2)^0,w,c
  3266  0012CA  1033               	iorwf	(??___flmul+3)^0,w,c
  3267  0012CC  B4D8               	btfsc	status,2,c
  3268  0012CE  EF6B  F009         	goto	u3181
  3269  0012D2  EF6D  F009         	goto	u3180
  3270  0012D6                     u3181:
  3271  0012D6  EF71  F009         	goto	l965
  3272  0012DA                     u3180:
  3273  0012DA                     l2874:
  3274  0012DA  0E01               	movlw	1
  3275  0012DC  6E39               	movwf	___flmul@aexp^0,c
  3276  0012DE  EF7A  F009         	goto	l964
  3277  0012E2                     l965:
  3278  0012E2  A03B               	btfss	___flmul@prod^0,0,c
  3279  0012E4  EF76  F009         	goto	u3191
  3280  0012E8  EF78  F009         	goto	u3190
  3281  0012EC                     u3191:
  3282  0012EC  EF7A  F009         	goto	l964
  3283  0012F0                     u3190:
  3284  0012F0  EF6D  F009         	goto	l2874
  3285  0012F4                     l964:
  3286  0012F4  5039               	movf	___flmul@aexp^0,w,c
  3287  0012F6  B4D8               	btfsc	status,2,c
  3288  0012F8  EF80  F009         	goto	u3201
  3289  0012FC  EF82  F009         	goto	u3200
  3290  001300                     u3201:
  3291  001300  EFA6  F009         	goto	l2886
  3292  001304                     u3200:
  3293  001304  0E01               	movlw	1
  3294  001306  263B               	addwf	___flmul@prod^0,f,c
  3295  001308  0E00               	movlw	0
  3296  00130A  223C               	addwfc	(___flmul@prod+1)^0,f,c
  3297  00130C  223D               	addwfc	(___flmul@prod+2)^0,f,c
  3298  00130E  223E               	addwfc	(___flmul@prod+3)^0,f,c
  3299  001310  A03E               	btfss	(___flmul@prod+3)^0,0,c
  3300  001312  EF8D  F009         	goto	u3211
  3301  001316  EF8F  F009         	goto	u3210
  3302  00131A                     u3211:
  3303  00131A  EFA6  F009         	goto	l2886
  3304  00131E                     u3210:
  3305  00131E  C03B  F030         	movff	___flmul@prod,??___flmul
  3306  001322  C03C  F031         	movff	___flmul@prod+1,??___flmul+1
  3307  001326  C03D  F032         	movff	___flmul@prod+2,??___flmul+2
  3308  00132A  C03E  F033         	movff	___flmul@prod+3,??___flmul+3
  3309  00132E  3433               	rlcf	(??___flmul+3)^0,w,c
  3310  001330  3233               	rrcf	(??___flmul+3)^0,f,c
  3311  001332  3232               	rrcf	(??___flmul+2)^0,f,c
  3312  001334  3231               	rrcf	(??___flmul+1)^0,f,c
  3313  001336  3230               	rrcf	??___flmul^0,f,c
  3314  001338  C030  F03B         	movff	??___flmul,___flmul@prod
  3315  00133C  C031  F03C         	movff	??___flmul+1,___flmul@prod+1
  3316  001340  C032  F03D         	movff	??___flmul+2,___flmul@prod+2
  3317  001344  C033  F03E         	movff	??___flmul+3,___flmul@prod+3
  3318  001348  4A3F               	infsnz	___flmul@temp^0,f,c
  3319  00134A  2A40               	incf	(___flmul@temp+1)^0,f,c
  3320  00134C                     l2886:
  3321  00134C  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  3322  00134E  EFB1  F009         	goto	u3221
  3323  001352  5040               	movf	(___flmul@temp+1)^0,w,c
  3324  001354  E108               	bnz	u3220
  3325  001356  283F               	incf	___flmul@temp^0,w,c
  3326  001358  A0D8               	btfss	status,0,c
  3327  00135A  EFB1  F009         	goto	u3221
  3328  00135E  EFB3  F009         	goto	u3220
  3329  001362                     u3221:
  3330  001362  EFBD  F009         	goto	l2890
  3331  001366                     u3220:
  3332  001366  0E00               	movlw	0
  3333  001368  6E3B               	movwf	___flmul@prod^0,c
  3334  00136A  0E00               	movlw	0
  3335  00136C  6E3C               	movwf	(___flmul@prod+1)^0,c
  3336  00136E  0E80               	movlw	128
  3337  001370  6E3D               	movwf	(___flmul@prod+2)^0,c
  3338  001372  0E7F               	movlw	127
  3339  001374  6E3E               	movwf	(___flmul@prod+3)^0,c
  3340  001376  EFEB  F009         	goto	l2902
  3341  00137A                     l2890:
  3342  00137A  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  3343  00137C  EFCA  F009         	goto	u3230
  3344  001380  5040               	movf	(___flmul@temp+1)^0,w,c
  3345  001382  E106               	bnz	u3231
  3346  001384  043F               	decf	___flmul@temp^0,w,c
  3347  001386  B0D8               	btfsc	status,0,c
  3348  001388  EFC8  F009         	goto	u3231
  3349  00138C  EFCA  F009         	goto	u3230
  3350  001390                     u3231:
  3351  001390  EFD6  F009         	goto	l972
  3352  001394                     u3230:
  3353  001394  0E00               	movlw	0
  3354  001396  6E3B               	movwf	___flmul@prod^0,c
  3355  001398  0E00               	movlw	0
  3356  00139A  6E3C               	movwf	(___flmul@prod+1)^0,c
  3357  00139C  0E00               	movlw	0
  3358  00139E  6E3D               	movwf	(___flmul@prod+2)^0,c
  3359  0013A0  0E00               	movlw	0
  3360  0013A2  6E3E               	movwf	(___flmul@prod+3)^0,c
  3361  0013A4  0E00               	movlw	0
  3362  0013A6  6E34               	movwf	___flmul@sign^0,c
  3363  0013A8  EFEB  F009         	goto	l2902
  3364  0013AC                     l972:
  3365  0013AC  C03F  F03A         	movff	___flmul@temp,___flmul@bexp
  3366  0013B0  0EFF               	movlw	255
  3367  0013B2  163B               	andwf	___flmul@prod^0,f,c
  3368  0013B4  0EFF               	movlw	255
  3369  0013B6  163C               	andwf	(___flmul@prod+1)^0,f,c
  3370  0013B8  0E7F               	movlw	127
  3371  0013BA  163D               	andwf	(___flmul@prod+2)^0,f,c
  3372  0013BC  0E00               	movlw	0
  3373  0013BE  163E               	andwf	(___flmul@prod+3)^0,f,c
  3374  0013C0  A03A               	btfss	___flmul@bexp^0,0,c
  3375  0013C2  EFE5  F009         	goto	u3241
  3376  0013C6  EFE7  F009         	goto	u3240
  3377  0013CA                     u3241:
  3378  0013CA  EFE8  F009         	goto	l2900
  3379  0013CE                     u3240:
  3380  0013CE  8E3D               	bsf	(___flmul@prod+2)^0,7,c
  3381  0013D0                     l2900:
  3382  0013D0  90D8               	bcf	status,0,c
  3383  0013D2  303A               	rrcf	___flmul@bexp^0,w,c
  3384  0013D4  6E3E               	movwf	(___flmul@prod+3)^0,c
  3385  0013D6                     l2902:
  3386  0013D6  5034               	movf	___flmul@sign^0,w,c
  3387  0013D8  123E               	iorwf	(___flmul@prod+3)^0,f,c
  3388  0013DA  C03B  F028         	movff	___flmul@prod,?___flmul
  3389  0013DE  C03C  F029         	movff	___flmul@prod+1,?___flmul+1
  3390  0013E2  C03D  F02A         	movff	___flmul@prod+2,?___flmul+2
  3391  0013E6  C03E  F02B         	movff	___flmul@prod+3,?___flmul+3
  3392  0013EA                     l959:
  3393  0013EA  0012               	return		;funcret
  3394  0013EC                     __end_of___flmul:
  3395                           	callstack 0
  3396                           
  3397 ;; *************** function ___fldiv *****************
  3398 ;; Defined at:
  3399 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;  b               4   14[COMRAM] unsigned char 
  3402 ;;  a               4   18[COMRAM] unsigned char 
  3403 ;; Auto vars:     Size  Location     Type
  3404 ;;  grs             4   33[COMRAM] unsigned long 
  3405 ;;  rem             4   26[COMRAM] unsigned long 
  3406 ;;  new_exp         2   31[COMRAM] short 
  3407 ;;  aexp            1   38[COMRAM] unsigned char 
  3408 ;;  bexp            1   37[COMRAM] unsigned char 
  3409 ;;  sign            1   30[COMRAM] unsigned char 
  3410 ;; Return value:  Size  Location     Type
  3411 ;;                  4   14[COMRAM] unsigned char 
  3412 ;; Registers used:
  3413 ;;		wreg, status,2, status,0
  3414 ;; Tracked objects:
  3415 ;;		On entry : 0/0
  3416 ;;		On exit  : 0/0
  3417 ;;		Unchanged: 0/0
  3418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3419 ;;      Params:         8       0       0       0       0       0       0
  3420 ;;      Locals:        13       0       0       0       0       0       0
  3421 ;;      Temps:          4       0       0       0       0       0       0
  3422 ;;      Totals:        25       0       0       0       0       0       0
  3423 ;;Total ram usage:       25 bytes
  3424 ;; Hardware stack levels used: 1
  3425 ;; This function calls:
  3426 ;;		Nothing
  3427 ;; This function is called by:
  3428 ;;		_leADC
  3429 ;; This function uses a non-reentrant model
  3430 ;;
  3431                           
  3432                           	psect	text16
  3433  0013EC                     __ptext16:
  3434                           	callstack 0
  3435  0013EC                     ___fldiv:
  3436                           	callstack 29
  3437  0013EC  5012               	movf	(___fldiv@b+3)^0,w,c
  3438  0013EE  0B80               	andlw	128
  3439  0013F0  6E1F               	movwf	___fldiv@sign^0,c
  3440  0013F2  5012               	movf	(___fldiv@b+3)^0,w,c
  3441  0013F4  2412               	addwf	(___fldiv@b+3)^0,w,c
  3442  0013F6  6E26               	movwf	___fldiv@bexp^0,c
  3443  0013F8  AE11               	btfss	(___fldiv@b+2)^0,7,c
  3444  0013FA  EF01  F00A         	goto	u2831
  3445  0013FE  EF03  F00A         	goto	u2830
  3446  001402                     u2831:
  3447  001402  EF04  F00A         	goto	l2646
  3448  001406                     u2830:
  3449  001406  8026               	bsf	___fldiv@bexp^0,0,c
  3450  001408                     l2646:
  3451  001408  5026               	movf	___fldiv@bexp^0,w,c
  3452  00140A  B4D8               	btfsc	status,2,c
  3453  00140C  EF0A  F00A         	goto	u2841
  3454  001410  EF0C  F00A         	goto	u2840
  3455  001414                     u2841:
  3456  001414  EF21  F00A         	goto	l2656
  3457  001418                     u2840:
  3458  001418  2826               	incf	___fldiv@bexp^0,w,c
  3459  00141A  A4D8               	btfss	status,2,c
  3460  00141C  EF12  F00A         	goto	u2851
  3461  001420  EF14  F00A         	goto	u2850
  3462  001424                     u2851:
  3463  001424  EF1C  F00A         	goto	l2652
  3464  001428                     u2850:
  3465  001428  0E00               	movlw	0
  3466  00142A  6E0F               	movwf	___fldiv@b^0,c
  3467  00142C  0E00               	movlw	0
  3468  00142E  6E10               	movwf	(___fldiv@b+1)^0,c
  3469  001430  0E00               	movlw	0
  3470  001432  6E11               	movwf	(___fldiv@b+2)^0,c
  3471  001434  0E00               	movlw	0
  3472  001436  6E12               	movwf	(___fldiv@b+3)^0,c
  3473  001438                     l2652:
  3474  001438  8E11               	bsf	(___fldiv@b+2)^0,7,c
  3475  00143A  0E00               	movlw	0
  3476  00143C  6E12               	movwf	(___fldiv@b+3)^0,c
  3477  00143E  EF29  F00A         	goto	l2658
  3478  001442                     l2656:
  3479  001442  0E00               	movlw	0
  3480  001444  6E0F               	movwf	___fldiv@b^0,c
  3481  001446  0E00               	movlw	0
  3482  001448  6E10               	movwf	(___fldiv@b+1)^0,c
  3483  00144A  0E00               	movlw	0
  3484  00144C  6E11               	movwf	(___fldiv@b+2)^0,c
  3485  00144E  0E00               	movlw	0
  3486  001450  6E12               	movwf	(___fldiv@b+3)^0,c
  3487  001452                     l2658:
  3488  001452  5016               	movf	(___fldiv@a+3)^0,w,c
  3489  001454  0B80               	andlw	128
  3490  001456  1A1F               	xorwf	___fldiv@sign^0,f,c
  3491  001458  5016               	movf	(___fldiv@a+3)^0,w,c
  3492  00145A  2416               	addwf	(___fldiv@a+3)^0,w,c
  3493  00145C  6E27               	movwf	___fldiv@aexp^0,c
  3494  00145E  AE15               	btfss	(___fldiv@a+2)^0,7,c
  3495  001460  EF34  F00A         	goto	u2861
  3496  001464  EF36  F00A         	goto	u2860
  3497  001468                     u2861:
  3498  001468  EF37  F00A         	goto	l2666
  3499  00146C                     u2860:
  3500  00146C  8027               	bsf	___fldiv@aexp^0,0,c
  3501  00146E                     l2666:
  3502  00146E  5027               	movf	___fldiv@aexp^0,w,c
  3503  001470  B4D8               	btfsc	status,2,c
  3504  001472  EF3D  F00A         	goto	u2871
  3505  001476  EF3F  F00A         	goto	u2870
  3506  00147A                     u2871:
  3507  00147A  EF54  F00A         	goto	l2676
  3508  00147E                     u2870:
  3509  00147E  2827               	incf	___fldiv@aexp^0,w,c
  3510  001480  A4D8               	btfss	status,2,c
  3511  001482  EF45  F00A         	goto	u2881
  3512  001486  EF47  F00A         	goto	u2880
  3513  00148A                     u2881:
  3514  00148A  EF4F  F00A         	goto	l2672
  3515  00148E                     u2880:
  3516  00148E  0E00               	movlw	0
  3517  001490  6E13               	movwf	___fldiv@a^0,c
  3518  001492  0E00               	movlw	0
  3519  001494  6E14               	movwf	(___fldiv@a+1)^0,c
  3520  001496  0E00               	movlw	0
  3521  001498  6E15               	movwf	(___fldiv@a+2)^0,c
  3522  00149A  0E00               	movlw	0
  3523  00149C  6E16               	movwf	(___fldiv@a+3)^0,c
  3524  00149E                     l2672:
  3525  00149E  8E15               	bsf	(___fldiv@a+2)^0,7,c
  3526  0014A0  0E00               	movlw	0
  3527  0014A2  6E16               	movwf	(___fldiv@a+3)^0,c
  3528  0014A4  EF5C  F00A         	goto	l2678
  3529  0014A8                     l2676:
  3530  0014A8  0E00               	movlw	0
  3531  0014AA  6E13               	movwf	___fldiv@a^0,c
  3532  0014AC  0E00               	movlw	0
  3533  0014AE  6E14               	movwf	(___fldiv@a+1)^0,c
  3534  0014B0  0E00               	movlw	0
  3535  0014B2  6E15               	movwf	(___fldiv@a+2)^0,c
  3536  0014B4  0E00               	movlw	0
  3537  0014B6  6E16               	movwf	(___fldiv@a+3)^0,c
  3538  0014B8                     l2678:
  3539  0014B8  5013               	movf	___fldiv@a^0,w,c
  3540  0014BA  1014               	iorwf	(___fldiv@a+1)^0,w,c
  3541  0014BC  1015               	iorwf	(___fldiv@a+2)^0,w,c
  3542  0014BE  1016               	iorwf	(___fldiv@a+3)^0,w,c
  3543  0014C0  A4D8               	btfss	status,2,c
  3544  0014C2  EF65  F00A         	goto	u2891
  3545  0014C6  EF67  F00A         	goto	u2890
  3546  0014CA                     u2891:
  3547  0014CA  EF7F  F00A         	goto	l2690
  3548  0014CE                     u2890:
  3549  0014CE  0E00               	movlw	0
  3550  0014D0  6E0F               	movwf	___fldiv@b^0,c
  3551  0014D2  0E00               	movlw	0
  3552  0014D4  6E10               	movwf	(___fldiv@b+1)^0,c
  3553  0014D6  0E00               	movlw	0
  3554  0014D8  6E11               	movwf	(___fldiv@b+2)^0,c
  3555  0014DA  0E00               	movlw	0
  3556  0014DC  6E12               	movwf	(___fldiv@b+3)^0,c
  3557  0014DE  0E80               	movlw	128
  3558  0014E0  1211               	iorwf	(___fldiv@b+2)^0,f,c
  3559  0014E2  0E7F               	movlw	127
  3560  0014E4  1212               	iorwf	(___fldiv@b+3)^0,f,c
  3561  0014E6                     l2684:
  3562  0014E6  501F               	movf	___fldiv@sign^0,w,c
  3563  0014E8  1212               	iorwf	(___fldiv@b+3)^0,f,c
  3564  0014EA  C00F  F00F         	movff	___fldiv@b,?___fldiv
  3565  0014EE  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  3566  0014F2  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  3567  0014F6  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  3568  0014FA  EFC2  F00B         	goto	l923
  3569  0014FE                     l2690:
  3570  0014FE  5026               	movf	___fldiv@bexp^0,w,c
  3571  001500  A4D8               	btfss	status,2,c
  3572  001502  EF85  F00A         	goto	u2901
  3573  001506  EF87  F00A         	goto	u2900
  3574  00150A                     u2901:
  3575  00150A  EF91  F00A         	goto	l2698
  3576  00150E                     u2900:
  3577  00150E  0E00               	movlw	0
  3578  001510  6E0F               	movwf	?___fldiv^0,c
  3579  001512  0E00               	movlw	0
  3580  001514  6E10               	movwf	(?___fldiv+1)^0,c
  3581  001516  0E00               	movlw	0
  3582  001518  6E11               	movwf	(?___fldiv+2)^0,c
  3583  00151A  0E00               	movlw	0
  3584  00151C  6E12               	movwf	(?___fldiv+3)^0,c
  3585  00151E  EFC2  F00B         	goto	l923
  3586  001522                     l2698:
  3587  001522  5027               	movf	___fldiv@aexp^0,w,c
  3588  001524  C026  F017         	movff	___fldiv@bexp,??___fldiv
  3589  001528  6A18               	clrf	(??___fldiv+1)^0,c
  3590  00152A  5E17               	subwf	??___fldiv^0,f,c
  3591  00152C  0E00               	movlw	0
  3592  00152E  5A18               	subwfb	(??___fldiv+1)^0,f,c
  3593  001530  0E7F               	movlw	127
  3594  001532  2417               	addwf	??___fldiv^0,w,c
  3595  001534  6E20               	movwf	___fldiv@new_exp^0,c
  3596  001536  0E00               	movlw	0
  3597  001538  2018               	addwfc	(??___fldiv+1)^0,w,c
  3598  00153A  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  3599  00153C  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  3600  001540  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  3601  001544  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  3602  001548  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  3603  00154C  0E00               	movlw	0
  3604  00154E  6E0F               	movwf	___fldiv@b^0,c
  3605  001550  0E00               	movlw	0
  3606  001552  6E10               	movwf	(___fldiv@b+1)^0,c
  3607  001554  0E00               	movlw	0
  3608  001556  6E11               	movwf	(___fldiv@b+2)^0,c
  3609  001558  0E00               	movlw	0
  3610  00155A  6E12               	movwf	(___fldiv@b+3)^0,c
  3611  00155C  0E00               	movlw	0
  3612  00155E  6E22               	movwf	___fldiv@grs^0,c
  3613  001560  0E00               	movlw	0
  3614  001562  6E23               	movwf	(___fldiv@grs+1)^0,c
  3615  001564  0E00               	movlw	0
  3616  001566  6E24               	movwf	(___fldiv@grs+2)^0,c
  3617  001568  0E00               	movlw	0
  3618  00156A  6E25               	movwf	(___fldiv@grs+3)^0,c
  3619  00156C  0E00               	movlw	0
  3620  00156E  6E27               	movwf	___fldiv@aexp^0,c
  3621  001570  EFF2  F00A         	goto	l925
  3622  001574                     l2708:
  3623  001574  5027               	movf	___fldiv@aexp^0,w,c
  3624  001576  B4D8               	btfsc	status,2,c
  3625  001578  EFC0  F00A         	goto	u2911
  3626  00157C  EFC2  F00A         	goto	u2910
  3627  001580                     u2911:
  3628  001580  EFD9  F00A         	goto	l2716
  3629  001584                     u2910:
  3630  001584  90D8               	bcf	status,0,c
  3631  001586  361B               	rlcf	___fldiv@rem^0,f,c
  3632  001588  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  3633  00158A  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  3634  00158C  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  3635  00158E  90D8               	bcf	status,0,c
  3636  001590  360F               	rlcf	___fldiv@b^0,f,c
  3637  001592  3610               	rlcf	(___fldiv@b+1)^0,f,c
  3638  001594  3611               	rlcf	(___fldiv@b+2)^0,f,c
  3639  001596  3612               	rlcf	(___fldiv@b+3)^0,f,c
  3640  001598  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  3641  00159A  EFD1  F00A         	goto	u2921
  3642  00159E  EFD3  F00A         	goto	u2920
  3643  0015A2                     u2921:
  3644  0015A2  EFD4  F00A         	goto	l928
  3645  0015A6                     u2920:
  3646  0015A6  800F               	bsf	___fldiv@b^0,0,c
  3647  0015A8                     l928:
  3648  0015A8  90D8               	bcf	status,0,c
  3649  0015AA  3622               	rlcf	___fldiv@grs^0,f,c
  3650  0015AC  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  3651  0015AE  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  3652  0015B0  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  3653  0015B2                     l2716:
  3654  0015B2  5013               	movf	___fldiv@a^0,w,c
  3655  0015B4  5C1B               	subwf	___fldiv@rem^0,w,c
  3656  0015B6  5014               	movf	(___fldiv@a+1)^0,w,c
  3657  0015B8  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  3658  0015BA  5015               	movf	(___fldiv@a+2)^0,w,c
  3659  0015BC  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  3660  0015BE  5016               	movf	(___fldiv@a+3)^0,w,c
  3661  0015C0  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  3662  0015C2  A0D8               	btfss	status,0,c
  3663  0015C4  EFE6  F00A         	goto	u2931
  3664  0015C8  EFE8  F00A         	goto	u2930
  3665  0015CC                     u2931:
  3666  0015CC  EFF1  F00A         	goto	l2722
  3667  0015D0                     u2930:
  3668  0015D0  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  3669  0015D2  5013               	movf	___fldiv@a^0,w,c
  3670  0015D4  5E1B               	subwf	___fldiv@rem^0,f,c
  3671  0015D6  5014               	movf	(___fldiv@a+1)^0,w,c
  3672  0015D8  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  3673  0015DA  5015               	movf	(___fldiv@a+2)^0,w,c
  3674  0015DC  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  3675  0015DE  5016               	movf	(___fldiv@a+3)^0,w,c
  3676  0015E0  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  3677  0015E2                     l2722:
  3678  0015E2  2A27               	incf	___fldiv@aexp^0,f,c
  3679  0015E4                     l925:
  3680  0015E4  0E19               	movlw	25
  3681  0015E6  6427               	cpfsgt	___fldiv@aexp^0,c
  3682  0015E8  EFF8  F00A         	goto	u2941
  3683  0015EC  EFFA  F00A         	goto	u2940
  3684  0015F0                     u2941:
  3685  0015F0  EFBA  F00A         	goto	l2708
  3686  0015F4                     u2940:
  3687  0015F4  501B               	movf	___fldiv@rem^0,w,c
  3688  0015F6  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  3689  0015F8  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  3690  0015FA  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  3691  0015FC  B4D8               	btfsc	status,2,c
  3692  0015FE  EF03  F00B         	goto	u2951
  3693  001602  EF05  F00B         	goto	u2950
  3694  001606                     u2951:
  3695  001606  EF1D  F00B         	goto	l2734
  3696  00160A                     u2950:
  3697  00160A  8022               	bsf	___fldiv@grs^0,0,c
  3698  00160C  EF1D  F00B         	goto	l2734
  3699  001610                     l2728:
  3700  001610  90D8               	bcf	status,0,c
  3701  001612  360F               	rlcf	___fldiv@b^0,f,c
  3702  001614  3610               	rlcf	(___fldiv@b+1)^0,f,c
  3703  001616  3611               	rlcf	(___fldiv@b+2)^0,f,c
  3704  001618  3612               	rlcf	(___fldiv@b+3)^0,f,c
  3705  00161A  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  3706  00161C  EF12  F00B         	goto	u2961
  3707  001620  EF14  F00B         	goto	u2960
  3708  001624                     u2961:
  3709  001624  EF15  F00B         	goto	l934
  3710  001628                     u2960:
  3711  001628  800F               	bsf	___fldiv@b^0,0,c
  3712  00162A                     l934:
  3713  00162A  90D8               	bcf	status,0,c
  3714  00162C  3622               	rlcf	___fldiv@grs^0,f,c
  3715  00162E  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  3716  001630  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  3717  001632  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  3718  001634  0620               	decf	___fldiv@new_exp^0,f,c
  3719  001636  A0D8               	btfss	status,0,c
  3720  001638  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  3721  00163A                     l2734:
  3722  00163A  AE11               	btfss	(___fldiv@b+2)^0,7,c
  3723  00163C  EF22  F00B         	goto	u2971
  3724  001640  EF24  F00B         	goto	u2970
  3725  001644                     u2971:
  3726  001644  EF08  F00B         	goto	l2728
  3727  001648                     u2970:
  3728  001648  0E00               	movlw	0
  3729  00164A  6E27               	movwf	___fldiv@aexp^0,c
  3730  00164C  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  3731  00164E  EF2B  F00B         	goto	u2981
  3732  001652  EF2D  F00B         	goto	u2980
  3733  001656                     u2981:
  3734  001656  EF51  F00B         	goto	l936
  3735  00165A                     u2980:
  3736  00165A  0EFF               	movlw	255
  3737  00165C  1422               	andwf	___fldiv@grs^0,w,c
  3738  00165E  6E17               	movwf	??___fldiv^0,c
  3739  001660  0EFF               	movlw	255
  3740  001662  1423               	andwf	(___fldiv@grs+1)^0,w,c
  3741  001664  6E18               	movwf	(??___fldiv+1)^0,c
  3742  001666  0EFF               	movlw	255
  3743  001668  1424               	andwf	(___fldiv@grs+2)^0,w,c
  3744  00166A  6E19               	movwf	(??___fldiv+2)^0,c
  3745  00166C  0E7F               	movlw	127
  3746  00166E  1425               	andwf	(___fldiv@grs+3)^0,w,c
  3747  001670  6E1A               	movwf	(??___fldiv+3)^0,c
  3748  001672  5017               	movf	??___fldiv^0,w,c
  3749  001674  1018               	iorwf	(??___fldiv+1)^0,w,c
  3750  001676  1019               	iorwf	(??___fldiv+2)^0,w,c
  3751  001678  101A               	iorwf	(??___fldiv+3)^0,w,c
  3752  00167A  B4D8               	btfsc	status,2,c
  3753  00167C  EF42  F00B         	goto	u2991
  3754  001680  EF44  F00B         	goto	u2990
  3755  001684                     u2991:
  3756  001684  EF48  F00B         	goto	l937
  3757  001688                     u2990:
  3758  001688                     l2742:
  3759  001688  0E01               	movlw	1
  3760  00168A  6E27               	movwf	___fldiv@aexp^0,c
  3761  00168C  EF51  F00B         	goto	l936
  3762  001690                     l937:
  3763  001690  A00F               	btfss	___fldiv@b^0,0,c
  3764  001692  EF4D  F00B         	goto	u3001
  3765  001696  EF4F  F00B         	goto	u3000
  3766  00169A                     u3001:
  3767  00169A  EF51  F00B         	goto	l936
  3768  00169E                     u3000:
  3769  00169E  EF44  F00B         	goto	l2742
  3770  0016A2                     l936:
  3771  0016A2  5027               	movf	___fldiv@aexp^0,w,c
  3772  0016A4  B4D8               	btfsc	status,2,c
  3773  0016A6  EF57  F00B         	goto	u3011
  3774  0016AA  EF59  F00B         	goto	u3010
  3775  0016AE                     u3011:
  3776  0016AE  EF7D  F00B         	goto	l2754
  3777  0016B2                     u3010:
  3778  0016B2  0E01               	movlw	1
  3779  0016B4  260F               	addwf	___fldiv@b^0,f,c
  3780  0016B6  0E00               	movlw	0
  3781  0016B8  2210               	addwfc	(___fldiv@b+1)^0,f,c
  3782  0016BA  2211               	addwfc	(___fldiv@b+2)^0,f,c
  3783  0016BC  2212               	addwfc	(___fldiv@b+3)^0,f,c
  3784  0016BE  A012               	btfss	(___fldiv@b+3)^0,0,c
  3785  0016C0  EF64  F00B         	goto	u3021
  3786  0016C4  EF66  F00B         	goto	u3020
  3787  0016C8                     u3021:
  3788  0016C8  EF7D  F00B         	goto	l2754
  3789  0016CC                     u3020:
  3790  0016CC  C00F  F017         	movff	___fldiv@b,??___fldiv
  3791  0016D0  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  3792  0016D4  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  3793  0016D8  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  3794  0016DC  341A               	rlcf	(??___fldiv+3)^0,w,c
  3795  0016DE  321A               	rrcf	(??___fldiv+3)^0,f,c
  3796  0016E0  3219               	rrcf	(??___fldiv+2)^0,f,c
  3797  0016E2  3218               	rrcf	(??___fldiv+1)^0,f,c
  3798  0016E4  3217               	rrcf	??___fldiv^0,f,c
  3799  0016E6  C017  F00F         	movff	??___fldiv,___fldiv@b
  3800  0016EA  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  3801  0016EE  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  3802  0016F2  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  3803  0016F6  4A20               	infsnz	___fldiv@new_exp^0,f,c
  3804  0016F8  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  3805  0016FA                     l2754:
  3806  0016FA  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3807  0016FC  EF88  F00B         	goto	u3031
  3808  001700  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  3809  001702  E108               	bnz	u3030
  3810  001704  2820               	incf	___fldiv@new_exp^0,w,c
  3811  001706  A0D8               	btfss	status,0,c
  3812  001708  EF88  F00B         	goto	u3031
  3813  00170C  EF8A  F00B         	goto	u3030
  3814  001710                     u3031:
  3815  001710  EF95  F00B         	goto	l2758
  3816  001714                     u3030:
  3817  001714  0E00               	movlw	0
  3818  001716  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  3819  001718  6820               	setf	___fldiv@new_exp^0,c
  3820  00171A  0E00               	movlw	0
  3821  00171C  6E0F               	movwf	___fldiv@b^0,c
  3822  00171E  0E00               	movlw	0
  3823  001720  6E10               	movwf	(___fldiv@b+1)^0,c
  3824  001722  0E00               	movlw	0
  3825  001724  6E11               	movwf	(___fldiv@b+2)^0,c
  3826  001726  0E00               	movlw	0
  3827  001728  6E12               	movwf	(___fldiv@b+3)^0,c
  3828  00172A                     l2758:
  3829  00172A  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3830  00172C  EFA2  F00B         	goto	u3040
  3831  001730  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  3832  001732  E106               	bnz	u3041
  3833  001734  0420               	decf	___fldiv@new_exp^0,w,c
  3834  001736  B0D8               	btfsc	status,0,c
  3835  001738  EFA0  F00B         	goto	u3041
  3836  00173C  EFA2  F00B         	goto	u3040
  3837  001740                     u3041:
  3838  001740  EFB0  F00B         	goto	l2762
  3839  001744                     u3040:
  3840  001744  0E00               	movlw	0
  3841  001746  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  3842  001748  0E00               	movlw	0
  3843  00174A  6E20               	movwf	___fldiv@new_exp^0,c
  3844  00174C  0E00               	movlw	0
  3845  00174E  6E0F               	movwf	___fldiv@b^0,c
  3846  001750  0E00               	movlw	0
  3847  001752  6E10               	movwf	(___fldiv@b+1)^0,c
  3848  001754  0E00               	movlw	0
  3849  001756  6E11               	movwf	(___fldiv@b+2)^0,c
  3850  001758  0E00               	movlw	0
  3851  00175A  6E12               	movwf	(___fldiv@b+3)^0,c
  3852  00175C  0E00               	movlw	0
  3853  00175E  6E1F               	movwf	___fldiv@sign^0,c
  3854  001760                     l2762:
  3855  001760  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  3856  001764  A026               	btfss	___fldiv@bexp^0,0,c
  3857  001766  EFB7  F00B         	goto	u3051
  3858  00176A  EFB9  F00B         	goto	u3050
  3859  00176E                     u3051:
  3860  00176E  EFBC  F00B         	goto	l2768
  3861  001772                     u3050:
  3862  001772  8E11               	bsf	(___fldiv@b+2)^0,7,c
  3863  001774  EFBD  F00B         	goto	l2770
  3864  001778                     l2768:
  3865  001778  9E11               	bcf	(___fldiv@b+2)^0,7,c
  3866  00177A                     l2770:
  3867  00177A  90D8               	bcf	status,0,c
  3868  00177C  3026               	rrcf	___fldiv@bexp^0,w,c
  3869  00177E  6E12               	movwf	(___fldiv@b+3)^0,c
  3870  001780  EF73  F00A         	goto	l2684
  3871  001784                     l923:
  3872  001784  0012               	return		;funcret
  3873  001786                     __end_of___fldiv:
  3874                           	callstack 0
  3875                           
  3876 ;; *************** function ___fladd *****************
  3877 ;; Defined at:
  3878 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  3879 ;; Parameters:    Size  Location     Type
  3880 ;;  b               4   64[COMRAM] unsigned char 
  3881 ;;  a               4   68[COMRAM] unsigned char 
  3882 ;; Auto vars:     Size  Location     Type
  3883 ;;  grs             1   79[COMRAM] unsigned char 
  3884 ;;  bexp            1   78[COMRAM] unsigned char 
  3885 ;;  aexp            1   77[COMRAM] unsigned char 
  3886 ;;  signs           1   76[COMRAM] unsigned char 
  3887 ;; Return value:  Size  Location     Type
  3888 ;;                  4   64[COMRAM] unsigned char 
  3889 ;; Registers used:
  3890 ;;		wreg, status,2, status,0
  3891 ;; Tracked objects:
  3892 ;;		On entry : 0/0
  3893 ;;		On exit  : 0/0
  3894 ;;		Unchanged: 0/0
  3895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3896 ;;      Params:         8       0       0       0       0       0       0
  3897 ;;      Locals:         4       0       0       0       0       0       0
  3898 ;;      Temps:          4       0       0       0       0       0       0
  3899 ;;      Totals:        16       0       0       0       0       0       0
  3900 ;;Total ram usage:       16 bytes
  3901 ;; Hardware stack levels used: 1
  3902 ;; This function calls:
  3903 ;;		Nothing
  3904 ;; This function is called by:
  3905 ;;		_leADC
  3906 ;; This function uses a non-reentrant model
  3907 ;;
  3908                           
  3909                           	psect	text17
  3910  000674                     __ptext17:
  3911                           	callstack 0
  3912  000674                     ___fladd:
  3913                           	callstack 29
  3914  000674  5044               	movf	(___fladd@b+3)^0,w,c
  3915  000676  0B80               	andlw	128
  3916  000678  6E4D               	movwf	___fladd@signs^0,c
  3917  00067A  5044               	movf	(___fladd@b+3)^0,w,c
  3918  00067C  2444               	addwf	(___fladd@b+3)^0,w,c
  3919  00067E  6E4F               	movwf	___fladd@bexp^0,c
  3920  000680  AE43               	btfss	(___fladd@b+2)^0,7,c
  3921  000682  EF45  F003         	goto	u2441
  3922  000686  EF47  F003         	goto	u2440
  3923  00068A                     u2441:
  3924  00068A  EF48  F003         	goto	l2444
  3925  00068E                     u2440:
  3926  00068E  804F               	bsf	___fladd@bexp^0,0,c
  3927  000690                     l2444:
  3928  000690  504F               	movf	___fladd@bexp^0,w,c
  3929  000692  B4D8               	btfsc	status,2,c
  3930  000694  EF4E  F003         	goto	u2451
  3931  000698  EF50  F003         	goto	u2450
  3932  00069C                     u2451:
  3933  00069C  EF65  F003         	goto	l2454
  3934  0006A0                     u2450:
  3935  0006A0  284F               	incf	___fladd@bexp^0,w,c
  3936  0006A2  A4D8               	btfss	status,2,c
  3937  0006A4  EF56  F003         	goto	u2461
  3938  0006A8  EF58  F003         	goto	u2460
  3939  0006AC                     u2461:
  3940  0006AC  EF60  F003         	goto	l2450
  3941  0006B0                     u2460:
  3942  0006B0  0E00               	movlw	0
  3943  0006B2  6E41               	movwf	___fladd@b^0,c
  3944  0006B4  0E00               	movlw	0
  3945  0006B6  6E42               	movwf	(___fladd@b+1)^0,c
  3946  0006B8  0E00               	movlw	0
  3947  0006BA  6E43               	movwf	(___fladd@b+2)^0,c
  3948  0006BC  0E00               	movlw	0
  3949  0006BE  6E44               	movwf	(___fladd@b+3)^0,c
  3950  0006C0                     l2450:
  3951  0006C0  8E43               	bsf	(___fladd@b+2)^0,7,c
  3952  0006C2  0E00               	movlw	0
  3953  0006C4  6E44               	movwf	(___fladd@b+3)^0,c
  3954  0006C6  EF6D  F003         	goto	l2456
  3955  0006CA                     l2454:
  3956  0006CA  0E00               	movlw	0
  3957  0006CC  6E41               	movwf	___fladd@b^0,c
  3958  0006CE  0E00               	movlw	0
  3959  0006D0  6E42               	movwf	(___fladd@b+1)^0,c
  3960  0006D2  0E00               	movlw	0
  3961  0006D4  6E43               	movwf	(___fladd@b+2)^0,c
  3962  0006D6  0E00               	movlw	0
  3963  0006D8  6E44               	movwf	(___fladd@b+3)^0,c
  3964  0006DA                     l2456:
  3965  0006DA  5048               	movf	(___fladd@a+3)^0,w,c
  3966  0006DC  0B80               	andlw	128
  3967  0006DE  6E4E               	movwf	___fladd@aexp^0,c
  3968  0006E0  504D               	movf	___fladd@signs^0,w,c
  3969  0006E2  184E               	xorwf	___fladd@aexp^0,w,c
  3970  0006E4  B4D8               	btfsc	status,2,c
  3971  0006E6  EF77  F003         	goto	u2471
  3972  0006EA  EF79  F003         	goto	u2470
  3973  0006EE                     u2471:
  3974  0006EE  EF7A  F003         	goto	l2462
  3975  0006F2                     u2470:
  3976  0006F2  8C4D               	bsf	___fladd@signs^0,6,c
  3977  0006F4                     l2462:
  3978  0006F4  5048               	movf	(___fladd@a+3)^0,w,c
  3979  0006F6  2448               	addwf	(___fladd@a+3)^0,w,c
  3980  0006F8  6E4E               	movwf	___fladd@aexp^0,c
  3981  0006FA  AE47               	btfss	(___fladd@a+2)^0,7,c
  3982  0006FC  EF82  F003         	goto	u2481
  3983  000700  EF84  F003         	goto	u2480
  3984  000704                     u2481:
  3985  000704  EF85  F003         	goto	l2468
  3986  000708                     u2480:
  3987  000708  804E               	bsf	___fladd@aexp^0,0,c
  3988  00070A                     l2468:
  3989  00070A  504E               	movf	___fladd@aexp^0,w,c
  3990  00070C  B4D8               	btfsc	status,2,c
  3991  00070E  EF8B  F003         	goto	u2491
  3992  000712  EF8D  F003         	goto	u2490
  3993  000716                     u2491:
  3994  000716  EFA2  F003         	goto	l2478
  3995  00071A                     u2490:
  3996  00071A  284E               	incf	___fladd@aexp^0,w,c
  3997  00071C  A4D8               	btfss	status,2,c
  3998  00071E  EF93  F003         	goto	u2501
  3999  000722  EF95  F003         	goto	u2500
  4000  000726                     u2501:
  4001  000726  EF9D  F003         	goto	l2474
  4002  00072A                     u2500:
  4003  00072A  0E00               	movlw	0
  4004  00072C  6E45               	movwf	___fladd@a^0,c
  4005  00072E  0E00               	movlw	0
  4006  000730  6E46               	movwf	(___fladd@a+1)^0,c
  4007  000732  0E00               	movlw	0
  4008  000734  6E47               	movwf	(___fladd@a+2)^0,c
  4009  000736  0E00               	movlw	0
  4010  000738  6E48               	movwf	(___fladd@a+3)^0,c
  4011  00073A                     l2474:
  4012  00073A  8E47               	bsf	(___fladd@a+2)^0,7,c
  4013  00073C  0E00               	movlw	0
  4014  00073E  6E48               	movwf	(___fladd@a+3)^0,c
  4015  000740  EFAA  F003         	goto	l2480
  4016  000744                     l2478:
  4017  000744  0E00               	movlw	0
  4018  000746  6E45               	movwf	___fladd@a^0,c
  4019  000748  0E00               	movlw	0
  4020  00074A  6E46               	movwf	(___fladd@a+1)^0,c
  4021  00074C  0E00               	movlw	0
  4022  00074E  6E47               	movwf	(___fladd@a+2)^0,c
  4023  000750  0E00               	movlw	0
  4024  000752  6E48               	movwf	(___fladd@a+3)^0,c
  4025  000754                     l2480:
  4026  000754  504F               	movf	___fladd@bexp^0,w,c
  4027  000756  5C4E               	subwf	___fladd@aexp^0,w,c
  4028  000758  B0D8               	btfsc	status,0,c
  4029  00075A  EFB1  F003         	goto	u2511
  4030  00075E  EFB3  F003         	goto	u2510
  4031  000762                     u2511:
  4032  000762  EFDA  F003         	goto	l2516
  4033  000766                     u2510:
  4034  000766  AC4D               	btfss	___fladd@signs^0,6,c
  4035  000768  EFB8  F003         	goto	u2521
  4036  00076C  EFBA  F003         	goto	u2520
  4037  000770                     u2521:
  4038  000770  EFBC  F003         	goto	l2486
  4039  000774                     u2520:
  4040  000774  0E80               	movlw	128
  4041  000776  1A4D               	xorwf	___fladd@signs^0,f,c
  4042  000778                     l2486:
  4043  000778  C04F  F050         	movff	___fladd@bexp,___fladd@grs
  4044  00077C  C04E  F04F         	movff	___fladd@aexp,___fladd@bexp
  4045  000780  C050  F04E         	movff	___fladd@grs,___fladd@aexp
  4046  000784  C041  F050         	movff	___fladd@b,___fladd@grs
  4047  000788  C045  F041         	movff	___fladd@a,___fladd@b
  4048  00078C  C050  F045         	movff	___fladd@grs,___fladd@a
  4049  000790  C042  F050         	movff	___fladd@b+1,___fladd@grs
  4050  000794  C046  F042         	movff	___fladd@a+1,___fladd@b+1
  4051  000798  C050  F046         	movff	___fladd@grs,___fladd@a+1
  4052  00079C  C043  F050         	movff	___fladd@b+2,___fladd@grs
  4053  0007A0  C047  F043         	movff	___fladd@a+2,___fladd@b+2
  4054  0007A4  C050  F047         	movff	___fladd@grs,___fladd@a+2
  4055  0007A8  C044  F050         	movff	___fladd@b+3,___fladd@grs
  4056  0007AC  C048  F044         	movff	___fladd@a+3,___fladd@b+3
  4057  0007B0  C050  F048         	movff	___fladd@grs,___fladd@a+3
  4058  0007B4                     l2516:
  4059  0007B4  0E00               	movlw	0
  4060  0007B6  6E50               	movwf	___fladd@grs^0,c
  4061  0007B8  504F               	movf	___fladd@bexp^0,w,c
  4062  0007BA  C04E  F049         	movff	___fladd@aexp,??___fladd
  4063  0007BE  6A4A               	clrf	(??___fladd+1)^0,c
  4064  0007C0  5E49               	subwf	??___fladd^0,f,c
  4065  0007C2  0E00               	movlw	0
  4066  0007C4  5A4A               	subwfb	(??___fladd+1)^0,f,c
  4067  0007C6  BE4A               	btfsc	(??___fladd+1)^0,7,c
  4068  0007C8  EFEF  F003         	goto	u2531
  4069  0007CC  504A               	movf	(??___fladd+1)^0,w,c
  4070  0007CE  E109               	bnz	u2530
  4071  0007D0  0E1A               	movlw	26
  4072  0007D2  5C49               	subwf	??___fladd^0,w,c
  4073  0007D4  A0D8               	btfss	status,0,c
  4074  0007D6  EFEF  F003         	goto	u2531
  4075  0007DA  EFF1  F003         	goto	u2530
  4076  0007DE                     u2531:
  4077  0007DE  EF28  F004         	goto	l870
  4078  0007E2                     u2530:
  4079  0007E2  5041               	movf	___fladd@b^0,w,c
  4080  0007E4  1042               	iorwf	(___fladd@b+1)^0,w,c
  4081  0007E6  1043               	iorwf	(___fladd@b+2)^0,w,c
  4082  0007E8  1044               	iorwf	(___fladd@b+3)^0,w,c
  4083  0007EA  A4D8               	btfss	status,2,c
  4084  0007EC  EFFA  F003         	goto	u2541
  4085  0007F0  EFFD  F003         	goto	u2540
  4086  0007F4                     u2541:
  4087  0007F4  0E01               	movlw	1
  4088  0007F6  EFFE  F003         	goto	u2550
  4089  0007FA                     u2540:
  4090  0007FA  0E00               	movlw	0
  4091  0007FC                     u2550:
  4092  0007FC  6E50               	movwf	___fladd@grs^0,c
  4093  0007FE  0E00               	movlw	0
  4094  000800  6E41               	movwf	___fladd@b^0,c
  4095  000802  0E00               	movlw	0
  4096  000804  6E42               	movwf	(___fladd@b+1)^0,c
  4097  000806  0E00               	movlw	0
  4098  000808  6E43               	movwf	(___fladd@b+2)^0,c
  4099  00080A  0E00               	movlw	0
  4100  00080C  6E44               	movwf	(___fladd@b+3)^0,c
  4101  00080E  C04E  F04F         	movff	___fladd@aexp,___fladd@bexp
  4102  000812  EF31  F004         	goto	l869
  4103  000816                     l871:
  4104  000816  A050               	btfss	___fladd@grs^0,0,c
  4105  000818  EF10  F004         	goto	u2561
  4106  00081C  EF12  F004         	goto	u2560
  4107  000820                     u2561:
  4108  000820  EF18  F004         	goto	l2528
  4109  000824                     u2560:
  4110  000824  90D8               	bcf	status,0,c
  4111  000826  3050               	rrcf	___fladd@grs^0,w,c
  4112  000828  0901               	iorlw	1
  4113  00082A  6E50               	movwf	___fladd@grs^0,c
  4114  00082C  EF1A  F004         	goto	l2530
  4115  000830                     l2528:
  4116  000830  90D8               	bcf	status,0,c
  4117  000832  3250               	rrcf	___fladd@grs^0,f,c
  4118  000834                     l2530:
  4119  000834  A041               	btfss	___fladd@b^0,0,c
  4120  000836  EF1F  F004         	goto	u2571
  4121  00083A  EF21  F004         	goto	u2570
  4122  00083E                     u2571:
  4123  00083E  EF22  F004         	goto	l2534
  4124  000842                     u2570:
  4125  000842  8E50               	bsf	___fladd@grs^0,7,c
  4126  000844                     l2534:
  4127  000844  3444               	rlcf	(___fladd@b+3)^0,w,c
  4128  000846  3244               	rrcf	(___fladd@b+3)^0,f,c
  4129  000848  3243               	rrcf	(___fladd@b+2)^0,f,c
  4130  00084A  3242               	rrcf	(___fladd@b+1)^0,f,c
  4131  00084C  3241               	rrcf	___fladd@b^0,f,c
  4132  00084E  2A4F               	incf	___fladd@bexp^0,f,c
  4133  000850                     l870:
  4134  000850  504E               	movf	___fladd@aexp^0,w,c
  4135  000852  5C4F               	subwf	___fladd@bexp^0,w,c
  4136  000854  A0D8               	btfss	status,0,c
  4137  000856  EF2F  F004         	goto	u2581
  4138  00085A  EF31  F004         	goto	u2580
  4139  00085E                     u2581:
  4140  00085E  EF0B  F004         	goto	l871
  4141  000862                     u2580:
  4142  000862                     l869:
  4143  000862  BC4D               	btfsc	___fladd@signs^0,6,c
  4144  000864  EF36  F004         	goto	u2591
  4145  000868  EF38  F004         	goto	u2590
  4146  00086C                     u2591:
  4147  00086C  EF78  F004         	goto	l2562
  4148  000870                     u2590:
  4149  000870  504F               	movf	___fladd@bexp^0,w,c
  4150  000872  A4D8               	btfss	status,2,c
  4151  000874  EF3E  F004         	goto	u2601
  4152  000878  EF40  F004         	goto	u2600
  4153  00087C                     u2601:
  4154  00087C  EF4A  F004         	goto	l2544
  4155  000880                     u2600:
  4156  000880  0E00               	movlw	0
  4157  000882  6E41               	movwf	?___fladd^0,c
  4158  000884  0E00               	movlw	0
  4159  000886  6E42               	movwf	(?___fladd+1)^0,c
  4160  000888  0E00               	movlw	0
  4161  00088A  6E43               	movwf	(?___fladd+2)^0,c
  4162  00088C  0E00               	movlw	0
  4163  00088E  6E44               	movwf	(?___fladd+3)^0,c
  4164  000890  EF99  F005         	goto	l878
  4165  000894                     l2544:
  4166  000894  5045               	movf	___fladd@a^0,w,c
  4167  000896  2641               	addwf	___fladd@b^0,f,c
  4168  000898  5046               	movf	(___fladd@a+1)^0,w,c
  4169  00089A  2242               	addwfc	(___fladd@b+1)^0,f,c
  4170  00089C  5047               	movf	(___fladd@a+2)^0,w,c
  4171  00089E  2243               	addwfc	(___fladd@b+2)^0,f,c
  4172  0008A0  5048               	movf	(___fladd@a+3)^0,w,c
  4173  0008A2  2244               	addwfc	(___fladd@b+3)^0,f,c
  4174  0008A4  A044               	btfss	(___fladd@b+3)^0,0,c
  4175  0008A6  EF57  F004         	goto	u2611
  4176  0008AA  EF59  F004         	goto	u2610
  4177  0008AE                     u2611:
  4178  0008AE  EF05  F005         	goto	l2598
  4179  0008B2                     u2610:
  4180  0008B2  A050               	btfss	___fladd@grs^0,0,c
  4181  0008B4  EF5E  F004         	goto	u2621
  4182  0008B8  EF60  F004         	goto	u2620
  4183  0008BC                     u2621:
  4184  0008BC  EF66  F004         	goto	l2552
  4185  0008C0                     u2620:
  4186  0008C0  90D8               	bcf	status,0,c
  4187  0008C2  3050               	rrcf	___fladd@grs^0,w,c
  4188  0008C4  0901               	iorlw	1
  4189  0008C6  6E50               	movwf	___fladd@grs^0,c
  4190  0008C8  EF68  F004         	goto	l2554
  4191  0008CC                     l2552:
  4192  0008CC  90D8               	bcf	status,0,c
  4193  0008CE  3250               	rrcf	___fladd@grs^0,f,c
  4194  0008D0                     l2554:
  4195  0008D0  A041               	btfss	___fladd@b^0,0,c
  4196  0008D2  EF6D  F004         	goto	u2631
  4197  0008D6  EF6F  F004         	goto	u2630
  4198  0008DA                     u2631:
  4199  0008DA  EF70  F004         	goto	l2558
  4200  0008DE                     u2630:
  4201  0008DE  8E50               	bsf	___fladd@grs^0,7,c
  4202  0008E0                     l2558:
  4203  0008E0  3444               	rlcf	(___fladd@b+3)^0,w,c
  4204  0008E2  3244               	rrcf	(___fladd@b+3)^0,f,c
  4205  0008E4  3243               	rrcf	(___fladd@b+2)^0,f,c
  4206  0008E6  3242               	rrcf	(___fladd@b+1)^0,f,c
  4207  0008E8  3241               	rrcf	___fladd@b^0,f,c
  4208  0008EA  2A4F               	incf	___fladd@bexp^0,f,c
  4209  0008EC  EF05  F005         	goto	l2598
  4210  0008F0                     l2562:
  4211  0008F0  5045               	movf	___fladd@a^0,w,c
  4212  0008F2  5C41               	subwf	___fladd@b^0,w,c
  4213  0008F4  5046               	movf	(___fladd@a+1)^0,w,c
  4214  0008F6  5842               	subwfb	(___fladd@b+1)^0,w,c
  4215  0008F8  5047               	movf	(___fladd@a+2)^0,w,c
  4216  0008FA  5843               	subwfb	(___fladd@b+2)^0,w,c
  4217  0008FC  5044               	movf	(___fladd@b+3)^0,w,c
  4218  0008FE  0A80               	xorlw	128
  4219  000900  6E49               	movwf	??___fladd^0,c
  4220  000902  5048               	movf	(___fladd@a+3)^0,w,c
  4221  000904  0A80               	xorlw	128
  4222  000906  5849               	subwfb	??___fladd^0,w,c
  4223  000908  B0D8               	btfsc	status,0,c
  4224  00090A  EF89  F004         	goto	u2641
  4225  00090E  EF8B  F004         	goto	u2640
  4226  000912                     u2641:
  4227  000912  EFB6  F004         	goto	l2572
  4228  000916                     u2640:
  4229  000916  5041               	movf	___fladd@b^0,w,c
  4230  000918  5C45               	subwf	___fladd@a^0,w,c
  4231  00091A  6E49               	movwf	??___fladd^0,c
  4232  00091C  5042               	movf	(___fladd@b+1)^0,w,c
  4233  00091E  5846               	subwfb	(___fladd@a+1)^0,w,c
  4234  000920  6E4A               	movwf	(??___fladd+1)^0,c
  4235  000922  5043               	movf	(___fladd@b+2)^0,w,c
  4236  000924  5847               	subwfb	(___fladd@a+2)^0,w,c
  4237  000926  6E4B               	movwf	(??___fladd+2)^0,c
  4238  000928  5044               	movf	(___fladd@b+3)^0,w,c
  4239  00092A  5848               	subwfb	(___fladd@a+3)^0,w,c
  4240  00092C  6E4C               	movwf	(??___fladd+3)^0,c
  4241  00092E  0EFF               	movlw	255
  4242  000930  2449               	addwf	??___fladd^0,w,c
  4243  000932  6E41               	movwf	___fladd@b^0,c
  4244  000934  0EFF               	movlw	255
  4245  000936  204A               	addwfc	(??___fladd+1)^0,w,c
  4246  000938  6E42               	movwf	(___fladd@b+1)^0,c
  4247  00093A  0EFF               	movlw	255
  4248  00093C  204B               	addwfc	(??___fladd+2)^0,w,c
  4249  00093E  6E43               	movwf	(___fladd@b+2)^0,c
  4250  000940  0EFF               	movlw	255
  4251  000942  204C               	addwfc	(??___fladd+3)^0,w,c
  4252  000944  6E44               	movwf	(___fladd@b+3)^0,c
  4253  000946  0E80               	movlw	128
  4254  000948  1A4D               	xorwf	___fladd@signs^0,f,c
  4255  00094A  6C50               	negf	___fladd@grs^0,c
  4256  00094C  5050               	movf	___fladd@grs^0,w,c
  4257  00094E  A4D8               	btfss	status,2,c
  4258  000950  EFAC  F004         	goto	u2651
  4259  000954  EFAE  F004         	goto	u2650
  4260  000958                     u2651:
  4261  000958  EFBE  F004         	goto	l886
  4262  00095C                     u2650:
  4263  00095C  0E01               	movlw	1
  4264  00095E  2641               	addwf	___fladd@b^0,f,c
  4265  000960  0E00               	movlw	0
  4266  000962  2242               	addwfc	(___fladd@b+1)^0,f,c
  4267  000964  2243               	addwfc	(___fladd@b+2)^0,f,c
  4268  000966  2244               	addwfc	(___fladd@b+3)^0,f,c
  4269  000968  EFBE  F004         	goto	l886
  4270  00096C                     l2572:
  4271  00096C  5045               	movf	___fladd@a^0,w,c
  4272  00096E  5E41               	subwf	___fladd@b^0,f,c
  4273  000970  5046               	movf	(___fladd@a+1)^0,w,c
  4274  000972  5A42               	subwfb	(___fladd@b+1)^0,f,c
  4275  000974  5047               	movf	(___fladd@a+2)^0,w,c
  4276  000976  5A43               	subwfb	(___fladd@b+2)^0,f,c
  4277  000978  5048               	movf	(___fladd@a+3)^0,w,c
  4278  00097A  5A44               	subwfb	(___fladd@b+3)^0,f,c
  4279  00097C                     l886:
  4280  00097C  5041               	movf	___fladd@b^0,w,c
  4281  00097E  1042               	iorwf	(___fladd@b+1)^0,w,c
  4282  000980  1043               	iorwf	(___fladd@b+2)^0,w,c
  4283  000982  1044               	iorwf	(___fladd@b+3)^0,w,c
  4284  000984  A4D8               	btfss	status,2,c
  4285  000986  EFC7  F004         	goto	u2661
  4286  00098A  EFC9  F004         	goto	u2660
  4287  00098E                     u2661:
  4288  00098E  EFFE  F004         	goto	l2596
  4289  000992                     u2660:
  4290  000992  5050               	movf	___fladd@grs^0,w,c
  4291  000994  A4D8               	btfss	status,2,c
  4292  000996  EFCF  F004         	goto	u2671
  4293  00099A  EFD1  F004         	goto	u2670
  4294  00099E                     u2671:
  4295  00099E  EFFE  F004         	goto	l2596
  4296  0009A2                     u2670:
  4297  0009A2  0E00               	movlw	0
  4298  0009A4  6E41               	movwf	?___fladd^0,c
  4299  0009A6  0E00               	movlw	0
  4300  0009A8  6E42               	movwf	(?___fladd+1)^0,c
  4301  0009AA  0E00               	movlw	0
  4302  0009AC  6E43               	movwf	(?___fladd+2)^0,c
  4303  0009AE  0E00               	movlw	0
  4304  0009B0  6E44               	movwf	(?___fladd+3)^0,c
  4305  0009B2  EF99  F005         	goto	l878
  4306  0009B6                     l2580:
  4307  0009B6  90D8               	bcf	status,0,c
  4308  0009B8  3641               	rlcf	___fladd@b^0,f,c
  4309  0009BA  3642               	rlcf	(___fladd@b+1)^0,f,c
  4310  0009BC  3643               	rlcf	(___fladd@b+2)^0,f,c
  4311  0009BE  3644               	rlcf	(___fladd@b+3)^0,f,c
  4312  0009C0  AE50               	btfss	___fladd@grs^0,7,c
  4313  0009C2  EFE5  F004         	goto	u2681
  4314  0009C6  EFE7  F004         	goto	u2680
  4315  0009CA                     u2681:
  4316  0009CA  EFE8  F004         	goto	l2586
  4317  0009CE                     u2680:
  4318  0009CE  8041               	bsf	___fladd@b^0,0,c
  4319  0009D0                     l2586:
  4320  0009D0  A050               	btfss	___fladd@grs^0,0,c
  4321  0009D2  EFED  F004         	goto	u2691
  4322  0009D6  EFEF  F004         	goto	u2690
  4323  0009DA                     u2691:
  4324  0009DA  EFF3  F004         	goto	l2590
  4325  0009DE                     u2690:
  4326  0009DE  80D8               	bsf	status,0,c
  4327  0009E0  3650               	rlcf	___fladd@grs^0,f,c
  4328  0009E2  EFF5  F004         	goto	l2592
  4329  0009E6                     l2590:
  4330  0009E6  90D8               	bcf	status,0,c
  4331  0009E8  3650               	rlcf	___fladd@grs^0,f,c
  4332  0009EA                     l2592:
  4333  0009EA  504F               	movf	___fladd@bexp^0,w,c
  4334  0009EC  B4D8               	btfsc	status,2,c
  4335  0009EE  EFFB  F004         	goto	u2701
  4336  0009F2  EFFD  F004         	goto	u2700
  4337  0009F6                     u2701:
  4338  0009F6  EFFE  F004         	goto	l2596
  4339  0009FA                     u2700:
  4340  0009FA  064F               	decf	___fladd@bexp^0,f,c
  4341  0009FC                     l2596:
  4342  0009FC  AE43               	btfss	(___fladd@b+2)^0,7,c
  4343  0009FE  EF03  F005         	goto	u2711
  4344  000A02  EF05  F005         	goto	u2710
  4345  000A06                     u2711:
  4346  000A06  EFDB  F004         	goto	l2580
  4347  000A0A                     u2710:
  4348  000A0A                     l2598:
  4349  000A0A  0E00               	movlw	0
  4350  000A0C  6E4E               	movwf	___fladd@aexp^0,c
  4351  000A0E  AE50               	btfss	___fladd@grs^0,7,c
  4352  000A10  EF0C  F005         	goto	u2721
  4353  000A14  EF0E  F005         	goto	u2720
  4354  000A18                     u2721:
  4355  000A18  EF26  F005         	goto	l895
  4356  000A1C                     u2720:
  4357  000A1C  C050  F049         	movff	___fladd@grs,??___fladd
  4358  000A20  0E7F               	movlw	127
  4359  000A22  1649               	andwf	??___fladd^0,f,c
  4360  000A24  B4D8               	btfsc	status,2,c
  4361  000A26  EF17  F005         	goto	u2731
  4362  000A2A  EF19  F005         	goto	u2730
  4363  000A2E                     u2731:
  4364  000A2E  EF1D  F005         	goto	l896
  4365  000A32                     u2730:
  4366  000A32                     l2604:
  4367  000A32  0E01               	movlw	1
  4368  000A34  6E4E               	movwf	___fladd@aexp^0,c
  4369  000A36  EF26  F005         	goto	l895
  4370  000A3A                     l896:
  4371  000A3A  A041               	btfss	___fladd@b^0,0,c
  4372  000A3C  EF22  F005         	goto	u2741
  4373  000A40  EF24  F005         	goto	u2740
  4374  000A44                     u2741:
  4375  000A44  EF26  F005         	goto	l895
  4376  000A48                     u2740:
  4377  000A48  EF19  F005         	goto	l2604
  4378  000A4C                     l895:
  4379  000A4C  504E               	movf	___fladd@aexp^0,w,c
  4380  000A4E  B4D8               	btfsc	status,2,c
  4381  000A50  EF2C  F005         	goto	u2751
  4382  000A54  EF2E  F005         	goto	u2750
  4383  000A58                     u2751:
  4384  000A58  EF59  F005         	goto	l2616
  4385  000A5C                     u2750:
  4386  000A5C  0E01               	movlw	1
  4387  000A5E  2641               	addwf	___fladd@b^0,f,c
  4388  000A60  0E00               	movlw	0
  4389  000A62  2242               	addwfc	(___fladd@b+1)^0,f,c
  4390  000A64  2243               	addwfc	(___fladd@b+2)^0,f,c
  4391  000A66  2244               	addwfc	(___fladd@b+3)^0,f,c
  4392  000A68  A044               	btfss	(___fladd@b+3)^0,0,c
  4393  000A6A  EF39  F005         	goto	u2761
  4394  000A6E  EF3B  F005         	goto	u2760
  4395  000A72                     u2761:
  4396  000A72  EF59  F005         	goto	l2616
  4397  000A76                     u2760:
  4398  000A76  C041  F049         	movff	___fladd@b,??___fladd
  4399  000A7A  C042  F04A         	movff	___fladd@b+1,??___fladd+1
  4400  000A7E  C043  F04B         	movff	___fladd@b+2,??___fladd+2
  4401  000A82  C044  F04C         	movff	___fladd@b+3,??___fladd+3
  4402  000A86  344C               	rlcf	(??___fladd+3)^0,w,c
  4403  000A88  324C               	rrcf	(??___fladd+3)^0,f,c
  4404  000A8A  324B               	rrcf	(??___fladd+2)^0,f,c
  4405  000A8C  324A               	rrcf	(??___fladd+1)^0,f,c
  4406  000A8E  3249               	rrcf	??___fladd^0,f,c
  4407  000A90  C049  F041         	movff	??___fladd,___fladd@b
  4408  000A94  C04A  F042         	movff	??___fladd+1,___fladd@b+1
  4409  000A98  C04B  F043         	movff	??___fladd+2,___fladd@b+2
  4410  000A9C  C04C  F044         	movff	??___fladd+3,___fladd@b+3
  4411  000AA0  284F               	incf	___fladd@bexp^0,w,c
  4412  000AA2  B4D8               	btfsc	status,2,c
  4413  000AA4  EF56  F005         	goto	u2771
  4414  000AA8  EF58  F005         	goto	u2770
  4415  000AAC                     u2771:
  4416  000AAC  EF59  F005         	goto	l2616
  4417  000AB0                     u2770:
  4418  000AB0  2A4F               	incf	___fladd@bexp^0,f,c
  4419  000AB2                     l2616:
  4420  000AB2  284F               	incf	___fladd@bexp^0,w,c
  4421  000AB4  B4D8               	btfsc	status,2,c
  4422  000AB6  EF5F  F005         	goto	u2781
  4423  000ABA  EF61  F005         	goto	u2780
  4424  000ABE                     u2781:
  4425  000ABE  EF69  F005         	goto	l2620
  4426  000AC2                     u2780:
  4427  000AC2  504F               	movf	___fladd@bexp^0,w,c
  4428  000AC4  A4D8               	btfss	status,2,c
  4429  000AC6  EF67  F005         	goto	u2791
  4430  000ACA  EF69  F005         	goto	u2790
  4431  000ACE                     u2791:
  4432  000ACE  EF7B  F005         	goto	l2624
  4433  000AD2                     u2790:
  4434  000AD2                     l2620:
  4435  000AD2  0E00               	movlw	0
  4436  000AD4  6E41               	movwf	___fladd@b^0,c
  4437  000AD6  0E00               	movlw	0
  4438  000AD8  6E42               	movwf	(___fladd@b+1)^0,c
  4439  000ADA  0E00               	movlw	0
  4440  000ADC  6E43               	movwf	(___fladd@b+2)^0,c
  4441  000ADE  0E00               	movlw	0
  4442  000AE0  6E44               	movwf	(___fladd@b+3)^0,c
  4443  000AE2  504F               	movf	___fladd@bexp^0,w,c
  4444  000AE4  A4D8               	btfss	status,2,c
  4445  000AE6  EF77  F005         	goto	u2801
  4446  000AEA  EF79  F005         	goto	u2800
  4447  000AEE                     u2801:
  4448  000AEE  EF7B  F005         	goto	l2624
  4449  000AF2                     u2800:
  4450  000AF2  0E00               	movlw	0
  4451  000AF4  6E4D               	movwf	___fladd@signs^0,c
  4452  000AF6                     l2624:
  4453  000AF6  A04F               	btfss	___fladd@bexp^0,0,c
  4454  000AF8  EF80  F005         	goto	u2811
  4455  000AFC  EF82  F005         	goto	u2810
  4456  000B00                     u2811:
  4457  000B00  EF85  F005         	goto	l2628
  4458  000B04                     u2810:
  4459  000B04  8E43               	bsf	(___fladd@b+2)^0,7,c
  4460  000B06  EF86  F005         	goto	l2630
  4461  000B0A                     l2628:
  4462  000B0A  9E43               	bcf	(___fladd@b+2)^0,7,c
  4463  000B0C                     l2630:
  4464  000B0C  90D8               	bcf	status,0,c
  4465  000B0E  304F               	rrcf	___fladd@bexp^0,w,c
  4466  000B10  6E44               	movwf	(___fladd@b+3)^0,c
  4467  000B12  AE4D               	btfss	___fladd@signs^0,7,c
  4468  000B14  EF8E  F005         	goto	u2821
  4469  000B18  EF90  F005         	goto	u2820
  4470  000B1C                     u2821:
  4471  000B1C  EF91  F005         	goto	l2636
  4472  000B20                     u2820:
  4473  000B20  8E44               	bsf	(___fladd@b+3)^0,7,c
  4474  000B22                     l2636:
  4475  000B22  C041  F041         	movff	___fladd@b,?___fladd
  4476  000B26  C042  F042         	movff	___fladd@b+1,?___fladd+1
  4477  000B2A  C043  F043         	movff	___fladd@b+2,?___fladd+2
  4478  000B2E  C044  F044         	movff	___fladd@b+3,?___fladd+3
  4479  000B32                     l878:
  4480  000B32  0012               	return		;funcret
  4481  000B34                     __end_of___fladd:
  4482                           	callstack 0
  4483                           
  4484 ;; *************** function _lcdNumber *****************
  4485 ;; Defined at:
  4486 ;;		line 64 in file "lcd.c"
  4487 ;; Parameters:    Size  Location     Type
  4488 ;;  value           2   14[COMRAM] int 
  4489 ;; Auto vars:     Size  Location     Type
  4490 ;;  i               2   16[COMRAM] int 
  4491 ;; Return value:  Size  Location     Type
  4492 ;;                  1    wreg      void 
  4493 ;; Registers used:
  4494 ;;		wreg, status,2, status,0, cstack
  4495 ;; Tracked objects:
  4496 ;;		On entry : 0/0
  4497 ;;		On exit  : 0/0
  4498 ;;		Unchanged: 0/0
  4499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4500 ;;      Params:         2       0       0       0       0       0       0
  4501 ;;      Locals:         2       0       0       0       0       0       0
  4502 ;;      Temps:          0       0       0       0       0       0       0
  4503 ;;      Totals:         4       0       0       0       0       0       0
  4504 ;;Total ram usage:        4 bytes
  4505 ;; Hardware stack levels used: 1
  4506 ;; Hardware stack levels required when called: 5
  4507 ;; This function calls:
  4508 ;;		___awdiv
  4509 ;;		___awmod
  4510 ;;		_lcdChar
  4511 ;; This function is called by:
  4512 ;;		_main
  4513 ;; This function uses a non-reentrant model
  4514 ;;
  4515                           
  4516                           	psect	text18
  4517  00267A                     __ptext18:
  4518                           	callstack 0
  4519  00267A                     _lcdNumber:
  4520                           	callstack 25
  4521  00267A                     
  4522                           ;lcd.c: 65:  int i = 10000;
  4523  00267A  0E27               	movlw	39
  4524  00267C  6E12               	movwf	(lcdNumber@i+1)^0,c
  4525  00267E  0E10               	movlw	16
  4526  002680  6E11               	movwf	lcdNumber@i^0,c
  4527                           
  4528                           ;lcd.c: 66:  while (i > 0) {
  4529  002682  EF69  F013         	goto	l3118
  4530  002686                     l3116:
  4531                           
  4532                           ;lcd.c: 67:   lcdChar((value / i) % 10 + 48);
  4533  002686  C011  F003         	movff	lcdNumber@i,___awdiv@divisor
  4534  00268A  C012  F004         	movff	lcdNumber@i+1,___awdiv@divisor+1
  4535  00268E  C00F  F001         	movff	lcdNumber@value,___awdiv@dividend
  4536  002692  C010  F002         	movff	lcdNumber@value+1,___awdiv@dividend+1
  4537  002696  EC94  F011         	call	___awdiv	;wreg free
  4538  00269A  C001  F009         	movff	?___awdiv,___awmod@dividend
  4539  00269E  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  4540  0026A2  0E00               	movlw	0
  4541  0026A4  6E0C               	movwf	(___awmod@divisor+1)^0,c
  4542  0026A6  0E0A               	movlw	10
  4543  0026A8  6E0B               	movwf	___awmod@divisor^0,c
  4544  0026AA  ECA9  F012         	call	___awmod	;wreg free
  4545  0026AE  5009               	movf	?___awmod^0,w,c
  4546  0026B0  0F30               	addlw	48
  4547  0026B2  EC6F  F015         	call	_lcdChar
  4548                           
  4549                           ;lcd.c: 68:   i /= 10;
  4550  0026B6  C011  F001         	movff	lcdNumber@i,___awdiv@dividend
  4551  0026BA  C012  F002         	movff	lcdNumber@i+1,___awdiv@dividend+1
  4552  0026BE  0E00               	movlw	0
  4553  0026C0  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4554  0026C2  0E0A               	movlw	10
  4555  0026C4  6E03               	movwf	___awdiv@divisor^0,c
  4556  0026C6  EC94  F011         	call	___awdiv	;wreg free
  4557  0026CA  C001  F011         	movff	?___awdiv,lcdNumber@i
  4558  0026CE  C002  F012         	movff	?___awdiv+1,lcdNumber@i+1
  4559  0026D2                     l3118:
  4560                           
  4561                           ;lcd.c: 66:  while (i > 0) {
  4562  0026D2  BE12               	btfsc	(lcdNumber@i+1)^0,7,c
  4563  0026D4  EF76  F013         	goto	u3550
  4564  0026D8  5012               	movf	(lcdNumber@i+1)^0,w,c
  4565  0026DA  E106               	bnz	u3551
  4566  0026DC  0411               	decf	lcdNumber@i^0,w,c
  4567  0026DE  B0D8               	btfsc	status,0,c
  4568  0026E0  EF74  F013         	goto	u3551
  4569  0026E4  EF76  F013         	goto	u3550
  4570  0026E8                     u3551:
  4571  0026E8  EF43  F013         	goto	l3116
  4572  0026EC                     u3550:
  4573  0026EC  0012               	return		;funcret
  4574  0026EE                     __end_of_lcdNumber:
  4575                           	callstack 0
  4576                           
  4577 ;; *************** function _lcdChar *****************
  4578 ;; Defined at:
  4579 ;;		line 52 in file "lcd.c"
  4580 ;; Parameters:    Size  Location     Type
  4581 ;;  value           1    wreg     unsigned char 
  4582 ;; Auto vars:     Size  Location     Type
  4583 ;;  value           1   13[COMRAM] unsigned char 
  4584 ;; Return value:  Size  Location     Type
  4585 ;;                  1    wreg      void 
  4586 ;; Registers used:
  4587 ;;		wreg, status,2, status,0, cstack
  4588 ;; Tracked objects:
  4589 ;;		On entry : 0/0
  4590 ;;		On exit  : 0/0
  4591 ;;		Unchanged: 0/0
  4592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4593 ;;      Params:         0       0       0       0       0       0       0
  4594 ;;      Locals:         1       0       0       0       0       0       0
  4595 ;;      Temps:          0       0       0       0       0       0       0
  4596 ;;      Totals:         1       0       0       0       0       0       0
  4597 ;;Total ram usage:        1 bytes
  4598 ;; Hardware stack levels used: 1
  4599 ;; Hardware stack levels required when called: 4
  4600 ;; This function calls:
  4601 ;;		_delayMicro
  4602 ;;		_pushByte
  4603 ;; This function is called by:
  4604 ;;		_leADC
  4605 ;;		_lcdString
  4606 ;;		_lcdNumber
  4607 ;; This function uses a non-reentrant model
  4608 ;;
  4609                           
  4610                           	psect	text19
  4611  002ADE                     __ptext19:
  4612                           	callstack 0
  4613  002ADE                     _lcdChar:
  4614                           	callstack 24
  4615                           
  4616                           ;incstack = 0
  4617                           ;lcdChar@value stored from wreg
  4618  002ADE  6E0E               	movwf	lcdChar@value^0,c
  4619  002AE0                     
  4620                           ;lcd.c: 53:  pushByte(value, 1);
  4621  002AE0  0E00               	movlw	0
  4622  002AE2  6E0B               	movwf	(pushByte@rs+1)^0,c
  4623  002AE4  0E01               	movlw	1
  4624  002AE6  6E0A               	movwf	pushByte@rs^0,c
  4625  002AE8  500E               	movf	lcdChar@value^0,w,c
  4626  002AEA  ECA9  F013         	call	_pushByte
  4627  002AEE                     
  4628                           ;lcd.c: 54:  delayMicro(80);
  4629  002AEE  0E00               	movlw	0
  4630  002AF0  6E02               	movwf	(delayMicro@a+1)^0,c
  4631  002AF2  0E50               	movlw	80
  4632  002AF4  6E01               	movwf	delayMicro@a^0,c
  4633  002AF6  ECC2  F015         	call	_delayMicro	;wreg free
  4634  002AFA  0012               	return		;funcret
  4635  002AFC                     __end_of_lcdChar:
  4636                           	callstack 0
  4637                           
  4638 ;; *************** function ___awmod *****************
  4639 ;; Defined at:
  4640 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  4641 ;; Parameters:    Size  Location     Type
  4642 ;;  dividend        2    8[COMRAM] int 
  4643 ;;  divisor         2   10[COMRAM] int 
  4644 ;; Auto vars:     Size  Location     Type
  4645 ;;  sign            1   13[COMRAM] unsigned char 
  4646 ;;  counter         1   12[COMRAM] unsigned char 
  4647 ;; Return value:  Size  Location     Type
  4648 ;;                  2    8[COMRAM] int 
  4649 ;; Registers used:
  4650 ;;		wreg, status,2, status,0
  4651 ;; Tracked objects:
  4652 ;;		On entry : 0/0
  4653 ;;		On exit  : 0/0
  4654 ;;		Unchanged: 0/0
  4655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4656 ;;      Params:         4       0       0       0       0       0       0
  4657 ;;      Locals:         2       0       0       0       0       0       0
  4658 ;;      Temps:          0       0       0       0       0       0       0
  4659 ;;      Totals:         6       0       0       0       0       0       0
  4660 ;;Total ram usage:        6 bytes
  4661 ;; Hardware stack levels used: 1
  4662 ;; This function calls:
  4663 ;;		Nothing
  4664 ;; This function is called by:
  4665 ;;		_main
  4666 ;;		_leADC
  4667 ;;		_lcdNumber
  4668 ;; This function uses a non-reentrant model
  4669 ;;
  4670                           
  4671                           	psect	text20
  4672  002552                     __ptext20:
  4673                           	callstack 0
  4674  002552                     ___awmod:
  4675                           	callstack 29
  4676  002552  0E00               	movlw	0
  4677  002554  6E0E               	movwf	___awmod@sign^0,c
  4678  002556  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
  4679  002558  EFB2  F012         	goto	u3310
  4680  00255C  EFB0  F012         	goto	u3311
  4681  002560                     u3311:
  4682  002560  EFB8  F012         	goto	l2960
  4683  002564                     u3310:
  4684  002564  6C09               	negf	___awmod@dividend^0,c
  4685  002566  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  4686  002568  B0D8               	btfsc	status,0,c
  4687  00256A  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  4688  00256C  0E01               	movlw	1
  4689  00256E  6E0E               	movwf	___awmod@sign^0,c
  4690  002570                     l2960:
  4691  002570  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
  4692  002572  EFBF  F012         	goto	u3320
  4693  002576  EFBD  F012         	goto	u3321
  4694  00257A                     u3321:
  4695  00257A  EFC3  F012         	goto	l2964
  4696  00257E                     u3320:
  4697  00257E  6C0B               	negf	___awmod@divisor^0,c
  4698  002580  1E0C               	comf	(___awmod@divisor+1)^0,f,c
  4699  002582  B0D8               	btfsc	status,0,c
  4700  002584  2A0C               	incf	(___awmod@divisor+1)^0,f,c
  4701  002586                     l2964:
  4702  002586  500B               	movf	___awmod@divisor^0,w,c
  4703  002588  100C               	iorwf	(___awmod@divisor+1)^0,w,c
  4704  00258A  B4D8               	btfsc	status,2,c
  4705  00258C  EFCA  F012         	goto	u3331
  4706  002590  EFCC  F012         	goto	u3330
  4707  002594                     u3331:
  4708  002594  EFF0  F012         	goto	l2980
  4709  002598                     u3330:
  4710  002598  0E01               	movlw	1
  4711  00259A  6E0D               	movwf	___awmod@counter^0,c
  4712  00259C  EFD4  F012         	goto	l2970
  4713  0025A0                     l2968:
  4714  0025A0  90D8               	bcf	status,0,c
  4715  0025A2  360B               	rlcf	___awmod@divisor^0,f,c
  4716  0025A4  360C               	rlcf	(___awmod@divisor+1)^0,f,c
  4717  0025A6  2A0D               	incf	___awmod@counter^0,f,c
  4718  0025A8                     l2970:
  4719  0025A8  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
  4720  0025AA  EFD9  F012         	goto	u3341
  4721  0025AE  EFDB  F012         	goto	u3340
  4722  0025B2                     u3341:
  4723  0025B2  EFD0  F012         	goto	l2968
  4724  0025B6                     u3340:
  4725  0025B6                     l2972:
  4726  0025B6  500B               	movf	___awmod@divisor^0,w,c
  4727  0025B8  5C09               	subwf	___awmod@dividend^0,w,c
  4728  0025BA  500C               	movf	(___awmod@divisor+1)^0,w,c
  4729  0025BC  580A               	subwfb	(___awmod@dividend+1)^0,w,c
  4730  0025BE  A0D8               	btfss	status,0,c
  4731  0025C0  EFE4  F012         	goto	u3351
  4732  0025C4  EFE6  F012         	goto	u3350
  4733  0025C8                     u3351:
  4734  0025C8  EFEA  F012         	goto	l2976
  4735  0025CC                     u3350:
  4736  0025CC  500B               	movf	___awmod@divisor^0,w,c
  4737  0025CE  5E09               	subwf	___awmod@dividend^0,f,c
  4738  0025D0  500C               	movf	(___awmod@divisor+1)^0,w,c
  4739  0025D2  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
  4740  0025D4                     l2976:
  4741  0025D4  90D8               	bcf	status,0,c
  4742  0025D6  320C               	rrcf	(___awmod@divisor+1)^0,f,c
  4743  0025D8  320B               	rrcf	___awmod@divisor^0,f,c
  4744  0025DA  2E0D               	decfsz	___awmod@counter^0,f,c
  4745  0025DC  EFDB  F012         	goto	l2972
  4746  0025E0                     l2980:
  4747  0025E0  500E               	movf	___awmod@sign^0,w,c
  4748  0025E2  B4D8               	btfsc	status,2,c
  4749  0025E4  EFF6  F012         	goto	u3361
  4750  0025E8  EFF8  F012         	goto	u3360
  4751  0025EC                     u3361:
  4752  0025EC  EFFC  F012         	goto	l2984
  4753  0025F0                     u3360:
  4754  0025F0  6C09               	negf	___awmod@dividend^0,c
  4755  0025F2  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  4756  0025F4  B0D8               	btfsc	status,0,c
  4757  0025F6  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  4758  0025F8                     l2984:
  4759  0025F8  C009  F009         	movff	___awmod@dividend,?___awmod
  4760  0025FC  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  4761  002600  0012               	return		;funcret
  4762  002602                     __end_of___awmod:
  4763                           	callstack 0
  4764                           
  4765 ;; *************** function ___awdiv *****************
  4766 ;; Defined at:
  4767 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  4768 ;; Parameters:    Size  Location     Type
  4769 ;;  dividend        2    0[COMRAM] int 
  4770 ;;  divisor         2    2[COMRAM] int 
  4771 ;; Auto vars:     Size  Location     Type
  4772 ;;  quotient        2    6[COMRAM] int 
  4773 ;;  sign            1    5[COMRAM] unsigned char 
  4774 ;;  counter         1    4[COMRAM] unsigned char 
  4775 ;; Return value:  Size  Location     Type
  4776 ;;                  2    0[COMRAM] int 
  4777 ;; Registers used:
  4778 ;;		wreg, status,2, status,0
  4779 ;; Tracked objects:
  4780 ;;		On entry : 0/0
  4781 ;;		On exit  : 0/0
  4782 ;;		Unchanged: 0/0
  4783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4784 ;;      Params:         4       0       0       0       0       0       0
  4785 ;;      Locals:         4       0       0       0       0       0       0
  4786 ;;      Temps:          0       0       0       0       0       0       0
  4787 ;;      Totals:         8       0       0       0       0       0       0
  4788 ;;Total ram usage:        8 bytes
  4789 ;; Hardware stack levels used: 1
  4790 ;; This function calls:
  4791 ;;		Nothing
  4792 ;; This function is called by:
  4793 ;;		_main
  4794 ;;		_leADC
  4795 ;;		_lcdNumber
  4796 ;; This function uses a non-reentrant model
  4797 ;;
  4798                           
  4799                           	psect	text21
  4800  002328                     __ptext21:
  4801                           	callstack 0
  4802  002328                     ___awdiv:
  4803                           	callstack 29
  4804  002328  0E00               	movlw	0
  4805  00232A  6E06               	movwf	___awdiv@sign^0,c
  4806  00232C  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  4807  00232E  EF9D  F011         	goto	u3250
  4808  002332  EF9B  F011         	goto	u3251
  4809  002336                     u3251:
  4810  002336  EFA3  F011         	goto	l2916
  4811  00233A                     u3250:
  4812  00233A  6C03               	negf	___awdiv@divisor^0,c
  4813  00233C  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  4814  00233E  B0D8               	btfsc	status,0,c
  4815  002340  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  4816  002342  0E01               	movlw	1
  4817  002344  6E06               	movwf	___awdiv@sign^0,c
  4818  002346                     l2916:
  4819  002346  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  4820  002348  EFAA  F011         	goto	u3260
  4821  00234C  EFA8  F011         	goto	u3261
  4822  002350                     u3261:
  4823  002350  EFB0  F011         	goto	l2922
  4824  002354                     u3260:
  4825  002354  6C01               	negf	___awdiv@dividend^0,c
  4826  002356  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  4827  002358  B0D8               	btfsc	status,0,c
  4828  00235A  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  4829  00235C  0E01               	movlw	1
  4830  00235E  1A06               	xorwf	___awdiv@sign^0,f,c
  4831  002360                     l2922:
  4832  002360  0E00               	movlw	0
  4833  002362  6E08               	movwf	(___awdiv@quotient+1)^0,c
  4834  002364  0E00               	movlw	0
  4835  002366  6E07               	movwf	___awdiv@quotient^0,c
  4836  002368  5003               	movf	___awdiv@divisor^0,w,c
  4837  00236A  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  4838  00236C  B4D8               	btfsc	status,2,c
  4839  00236E  EFBB  F011         	goto	u3271
  4840  002372  EFBD  F011         	goto	u3270
  4841  002376                     u3271:
  4842  002376  EFE5  F011         	goto	l2944
  4843  00237A                     u3270:
  4844  00237A  0E01               	movlw	1
  4845  00237C  6E05               	movwf	___awdiv@counter^0,c
  4846  00237E  EFC5  F011         	goto	l2930
  4847  002382                     l2928:
  4848  002382  90D8               	bcf	status,0,c
  4849  002384  3603               	rlcf	___awdiv@divisor^0,f,c
  4850  002386  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  4851  002388  2A05               	incf	___awdiv@counter^0,f,c
  4852  00238A                     l2930:
  4853  00238A  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  4854  00238C  EFCA  F011         	goto	u3281
  4855  002390  EFCC  F011         	goto	u3280
  4856  002394                     u3281:
  4857  002394  EFC1  F011         	goto	l2928
  4858  002398                     u3280:
  4859  002398                     l2932:
  4860  002398  90D8               	bcf	status,0,c
  4861  00239A  3607               	rlcf	___awdiv@quotient^0,f,c
  4862  00239C  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  4863  00239E  5003               	movf	___awdiv@divisor^0,w,c
  4864  0023A0  5C01               	subwf	___awdiv@dividend^0,w,c
  4865  0023A2  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4866  0023A4  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  4867  0023A6  A0D8               	btfss	status,0,c
  4868  0023A8  EFD8  F011         	goto	u3291
  4869  0023AC  EFDA  F011         	goto	u3290
  4870  0023B0                     u3291:
  4871  0023B0  EFDF  F011         	goto	l2940
  4872  0023B4                     u3290:
  4873  0023B4  5003               	movf	___awdiv@divisor^0,w,c
  4874  0023B6  5E01               	subwf	___awdiv@dividend^0,f,c
  4875  0023B8  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4876  0023BA  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  4877  0023BC  8007               	bsf	___awdiv@quotient^0,0,c
  4878  0023BE                     l2940:
  4879  0023BE  90D8               	bcf	status,0,c
  4880  0023C0  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  4881  0023C2  3203               	rrcf	___awdiv@divisor^0,f,c
  4882  0023C4  2E05               	decfsz	___awdiv@counter^0,f,c
  4883  0023C6  EFCC  F011         	goto	l2932
  4884  0023CA                     l2944:
  4885  0023CA  5006               	movf	___awdiv@sign^0,w,c
  4886  0023CC  B4D8               	btfsc	status,2,c
  4887  0023CE  EFEB  F011         	goto	u3301
  4888  0023D2  EFED  F011         	goto	u3300
  4889  0023D6                     u3301:
  4890  0023D6  EFF1  F011         	goto	l2948
  4891  0023DA                     u3300:
  4892  0023DA  6C07               	negf	___awdiv@quotient^0,c
  4893  0023DC  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  4894  0023DE  B0D8               	btfsc	status,0,c
  4895  0023E0  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  4896  0023E2                     l2948:
  4897  0023E2  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4898  0023E6  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4899  0023EA  0012               	return		;funcret
  4900  0023EC                     __end_of___awdiv:
  4901                           	callstack 0
  4902                           
  4903 ;; *************** function _lcdInit *****************
  4904 ;; Defined at:
  4905 ;;		line 72 in file "lcd.c"
  4906 ;; Parameters:    Size  Location     Type
  4907 ;;		None
  4908 ;; Auto vars:     Size  Location     Type
  4909 ;;		None
  4910 ;; Return value:  Size  Location     Type
  4911 ;;                  1    wreg      void 
  4912 ;; Registers used:
  4913 ;;		wreg, status,2, status,0, cstack
  4914 ;; Tracked objects:
  4915 ;;		On entry : 0/0
  4916 ;;		On exit  : 0/0
  4917 ;;		Unchanged: 0/0
  4918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4919 ;;      Params:         0       0       0       0       0       0       0
  4920 ;;      Locals:         0       0       0       0       0       0       0
  4921 ;;      Temps:          0       0       0       0       0       0       0
  4922 ;;      Totals:         0       0       0       0       0       0       0
  4923 ;;Total ram usage:        0 bytes
  4924 ;; Hardware stack levels used: 1
  4925 ;; Hardware stack levels required when called: 5
  4926 ;; This function calls:
  4927 ;;		_delayMicro
  4928 ;;		_delayMili
  4929 ;;		_lcdCommand
  4930 ;;		_pinMode
  4931 ;;		_pushNibble
  4932 ;;		_soInit
  4933 ;; This function is called by:
  4934 ;;		_main
  4935 ;; This function uses a non-reentrant model
  4936 ;;
  4937                           
  4938                           	psect	text22
  4939  0023EC                     __ptext22:
  4940                           	callstack 0
  4941  0023EC                     _lcdInit:
  4942                           	callstack 25
  4943  0023EC                     
  4944                           ;lcd.c: 73:  pinMode(PIN_D4, 0);
  4945  0023EC  0E00               	movlw	0
  4946  0023EE  6E02               	movwf	(pinMode@pin+1)^0,c
  4947  0023F0  0E1C               	movlw	28
  4948  0023F2  6E01               	movwf	pinMode@pin^0,c
  4949  0023F4  0E00               	movlw	0
  4950  0023F6  6E04               	movwf	(pinMode@type+1)^0,c
  4951  0023F8  0E00               	movlw	0
  4952  0023FA  6E03               	movwf	pinMode@type^0,c
  4953  0023FC  ECEA  F00C         	call	_pinMode	;wreg free
  4954                           
  4955                           ;lcd.c: 74:  pinMode(PIN_D5, 0);
  4956  002400  0E00               	movlw	0
  4957  002402  6E02               	movwf	(pinMode@pin+1)^0,c
  4958  002404  0E1D               	movlw	29
  4959  002406  6E01               	movwf	pinMode@pin^0,c
  4960  002408  0E00               	movlw	0
  4961  00240A  6E04               	movwf	(pinMode@type+1)^0,c
  4962  00240C  0E00               	movlw	0
  4963  00240E  6E03               	movwf	pinMode@type^0,c
  4964  002410  ECEA  F00C         	call	_pinMode	;wreg free
  4965                           
  4966                           ;lcd.c: 75:  soInit();
  4967  002414  ECBD  F014         	call	_soInit	;wreg free
  4968                           
  4969                           ;lcd.c: 76:  delayMili(15);
  4970  002418  0E00               	movlw	0
  4971  00241A  6E02               	movwf	(delayMili@a+1)^0,c
  4972  00241C  0E0F               	movlw	15
  4973  00241E  6E01               	movwf	delayMili@a^0,c
  4974  002420  ECF5  F014         	call	_delayMili	;wreg free
  4975                           
  4976                           ;lcd.c: 78:  pushNibble(0x03, 0);
  4977  002424  0E00               	movlw	0
  4978  002426  6E0B               	movwf	(pushNibble@rs+1)^0,c
  4979  002428  0E00               	movlw	0
  4980  00242A  6E0A               	movwf	pushNibble@rs^0,c
  4981  00242C  0E03               	movlw	3
  4982  00242E  EC4D  F015         	call	_pushNibble
  4983                           
  4984                           ;lcd.c: 79:  delayMili(5);
  4985  002432  0E00               	movlw	0
  4986  002434  6E02               	movwf	(delayMili@a+1)^0,c
  4987  002436  0E05               	movlw	5
  4988  002438  6E01               	movwf	delayMili@a^0,c
  4989  00243A  ECF5  F014         	call	_delayMili	;wreg free
  4990                           
  4991                           ;lcd.c: 80:  pushNibble(0x03, 0);
  4992  00243E  0E00               	movlw	0
  4993  002440  6E0B               	movwf	(pushNibble@rs+1)^0,c
  4994  002442  0E00               	movlw	0
  4995  002444  6E0A               	movwf	pushNibble@rs^0,c
  4996  002446  0E03               	movlw	3
  4997  002448  EC4D  F015         	call	_pushNibble
  4998  00244C                     
  4999                           ;lcd.c: 81:  delayMicro(160);
  5000  00244C  0E00               	movlw	0
  5001  00244E  6E02               	movwf	(delayMicro@a+1)^0,c
  5002  002450  0EA0               	movlw	160
  5003  002452  6E01               	movwf	delayMicro@a^0,c
  5004  002454  ECC2  F015         	call	_delayMicro	;wreg free
  5005  002458                     
  5006                           ;lcd.c: 82:  pushNibble(0x03, 0);
  5007  002458  0E00               	movlw	0
  5008  00245A  6E0B               	movwf	(pushNibble@rs+1)^0,c
  5009  00245C  0E00               	movlw	0
  5010  00245E  6E0A               	movwf	pushNibble@rs^0,c
  5011  002460  0E03               	movlw	3
  5012  002462  EC4D  F015         	call	_pushNibble
  5013                           
  5014                           ;lcd.c: 83:  delayMicro(160);
  5015  002466  0E00               	movlw	0
  5016  002468  6E02               	movwf	(delayMicro@a+1)^0,c
  5017  00246A  0EA0               	movlw	160
  5018  00246C  6E01               	movwf	delayMicro@a^0,c
  5019  00246E  ECC2  F015         	call	_delayMicro	;wreg free
  5020  002472                     
  5021                           ;lcd.c: 85:  pushNibble(0x02, 0);
  5022  002472  0E00               	movlw	0
  5023  002474  6E0B               	movwf	(pushNibble@rs+1)^0,c
  5024  002476  0E00               	movlw	0
  5025  002478  6E0A               	movwf	pushNibble@rs^0,c
  5026  00247A  0E02               	movlw	2
  5027  00247C  EC4D  F015         	call	_pushNibble
  5028  002480                     
  5029                           ;lcd.c: 86:  delayMili(10);
  5030  002480  0E00               	movlw	0
  5031  002482  6E02               	movwf	(delayMili@a+1)^0,c
  5032  002484  0E0A               	movlw	10
  5033  002486  6E01               	movwf	delayMili@a^0,c
  5034  002488  ECF5  F014         	call	_delayMili	;wreg free
  5035  00248C                     
  5036                           ;lcd.c: 88:  lcdCommand(0x28);
  5037  00248C  0E28               	movlw	40
  5038  00248E  EC7E  F015         	call	_lcdCommand
  5039  002492                     
  5040                           ;lcd.c: 89:  lcdCommand(0x08 + 0x04);
  5041  002492  0E0C               	movlw	12
  5042  002494  EC7E  F015         	call	_lcdCommand
  5043  002498                     
  5044                           ;lcd.c: 90:  lcdCommand(0x01);
  5045  002498  0E01               	movlw	1
  5046  00249A  EC7E  F015         	call	_lcdCommand
  5047  00249E  0012               	return		;funcret
  5048  0024A0                     __end_of_lcdInit:
  5049                           	callstack 0
  5050                           
  5051 ;; *************** function _pushNibble *****************
  5052 ;; Defined at:
  5053 ;;		line 25 in file "lcd.c"
  5054 ;; Parameters:    Size  Location     Type
  5055 ;;  value           1    wreg     unsigned char 
  5056 ;;  rs              2    9[COMRAM] int 
  5057 ;; Auto vars:     Size  Location     Type
  5058 ;;  value           1   11[COMRAM] unsigned char 
  5059 ;; Return value:  Size  Location     Type
  5060 ;;                  1    wreg      void 
  5061 ;; Registers used:
  5062 ;;		wreg, status,2, status,0, cstack
  5063 ;; Tracked objects:
  5064 ;;		On entry : 0/0
  5065 ;;		On exit  : 0/0
  5066 ;;		Unchanged: 0/0
  5067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5068 ;;      Params:         2       0       0       0       0       0       0
  5069 ;;      Locals:         1       0       0       0       0       0       0
  5070 ;;      Temps:          0       0       0       0       0       0       0
  5071 ;;      Totals:         3       0       0       0       0       0       0
  5072 ;;Total ram usage:        3 bytes
  5073 ;; Hardware stack levels used: 1
  5074 ;; Hardware stack levels required when called: 3
  5075 ;; This function calls:
  5076 ;;		_digitalWrite
  5077 ;;		_pulseEnablePin
  5078 ;;		_soWrite
  5079 ;; This function is called by:
  5080 ;;		_lcdInit
  5081 ;; This function uses a non-reentrant model
  5082 ;;
  5083                           
  5084                           	psect	text23
  5085  002A9A                     __ptext23:
  5086                           	callstack 0
  5087  002A9A                     _pushNibble:
  5088                           	callstack 26
  5089                           
  5090                           ;incstack = 0
  5091                           ;pushNibble@value stored from wreg
  5092  002A9A  6E0C               	movwf	pushNibble@value^0,c
  5093  002A9C                     
  5094                           ;lcd.c: 26:  soWrite(value);
  5095  002A9C  C00C  F007         	movff	pushNibble@value,soWrite@value
  5096  002AA0  6A08               	clrf	(soWrite@value+1)^0,c
  5097  002AA2  EC51  F014         	call	_soWrite	;wreg free
  5098                           
  5099                           ;lcd.c: 27:  digitalWrite(PIN_D5, rs);
  5100  002AA6  0E00               	movlw	0
  5101  002AA8  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5102  002AAA  0E1D               	movlw	29
  5103  002AAC  6E01               	movwf	digitalWrite@pin^0,c
  5104  002AAE  C00A  F003         	movff	pushNibble@rs,digitalWrite@value
  5105  002AB2  C00B  F004         	movff	pushNibble@rs+1,digitalWrite@value+1
  5106  002AB6  ECC3  F00B         	call	_digitalWrite	;wreg free
  5107                           
  5108                           ;lcd.c: 28:  pulseEnablePin();
  5109  002ABA  EC9C  F014         	call	_pulseEnablePin	;wreg free
  5110  002ABE  0012               	return		;funcret
  5111  002AC0                     __end_of_pushNibble:
  5112                           	callstack 0
  5113                           
  5114 ;; *************** function _lcdCommand *****************
  5115 ;; Defined at:
  5116 ;;		line 40 in file "lcd.c"
  5117 ;; Parameters:    Size  Location     Type
  5118 ;;  value           1    wreg     unsigned char 
  5119 ;; Auto vars:     Size  Location     Type
  5120 ;;  value           1   13[COMRAM] unsigned char 
  5121 ;; Return value:  Size  Location     Type
  5122 ;;                  1    wreg      void 
  5123 ;; Registers used:
  5124 ;;		wreg, status,2, status,0, cstack
  5125 ;; Tracked objects:
  5126 ;;		On entry : 0/0
  5127 ;;		On exit  : 0/0
  5128 ;;		Unchanged: 0/0
  5129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5130 ;;      Params:         0       0       0       0       0       0       0
  5131 ;;      Locals:         1       0       0       0       0       0       0
  5132 ;;      Temps:          0       0       0       0       0       0       0
  5133 ;;      Totals:         1       0       0       0       0       0       0
  5134 ;;Total ram usage:        1 bytes
  5135 ;; Hardware stack levels used: 1
  5136 ;; Hardware stack levels required when called: 4
  5137 ;; This function calls:
  5138 ;;		_delayMili
  5139 ;;		_pushByte
  5140 ;; This function is called by:
  5141 ;;		_main
  5142 ;;		_leTeclado
  5143 ;;		_leADC
  5144 ;;		_lcdInit
  5145 ;;		_lcdPosition
  5146 ;; This function uses a non-reentrant model
  5147 ;;
  5148                           
  5149                           	psect	text24
  5150  002AFC                     __ptext24:
  5151                           	callstack 0
  5152  002AFC                     _lcdCommand:
  5153                           	callstack 25
  5154                           
  5155                           ;incstack = 0
  5156                           ;lcdCommand@value stored from wreg
  5157  002AFC  6E0E               	movwf	lcdCommand@value^0,c
  5158  002AFE                     
  5159                           ;lcd.c: 41:  pushByte(value, 0);
  5160  002AFE  0E00               	movlw	0
  5161  002B00  6E0B               	movwf	(pushByte@rs+1)^0,c
  5162  002B02  0E00               	movlw	0
  5163  002B04  6E0A               	movwf	pushByte@rs^0,c
  5164  002B06  500E               	movf	lcdCommand@value^0,w,c
  5165  002B08  ECA9  F013         	call	_pushByte
  5166                           
  5167                           ;lcd.c: 42:  delayMili(2);
  5168  002B0C  0E00               	movlw	0
  5169  002B0E  6E02               	movwf	(delayMili@a+1)^0,c
  5170  002B10  0E02               	movlw	2
  5171  002B12  6E01               	movwf	delayMili@a^0,c
  5172  002B14  ECF5  F014         	call	_delayMili	;wreg free
  5173  002B18  0012               	return		;funcret
  5174  002B1A                     __end_of_lcdCommand:
  5175                           	callstack 0
  5176                           
  5177 ;; *************** function _pushByte *****************
  5178 ;; Defined at:
  5179 ;;		line 31 in file "lcd.c"
  5180 ;; Parameters:    Size  Location     Type
  5181 ;;  value           1    wreg     unsigned char 
  5182 ;;  rs              2    9[COMRAM] int 
  5183 ;; Auto vars:     Size  Location     Type
  5184 ;;  value           1   12[COMRAM] unsigned char 
  5185 ;; Return value:  Size  Location     Type
  5186 ;;                  1    wreg      void 
  5187 ;; Registers used:
  5188 ;;		wreg, status,2, status,0, cstack
  5189 ;; Tracked objects:
  5190 ;;		On entry : 0/0
  5191 ;;		On exit  : 0/0
  5192 ;;		Unchanged: 0/0
  5193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5194 ;;      Params:         2       0       0       0       0       0       0
  5195 ;;      Locals:         1       0       0       0       0       0       0
  5196 ;;      Temps:          1       0       0       0       0       0       0
  5197 ;;      Totals:         4       0       0       0       0       0       0
  5198 ;;Total ram usage:        4 bytes
  5199 ;; Hardware stack levels used: 1
  5200 ;; Hardware stack levels required when called: 3
  5201 ;; This function calls:
  5202 ;;		_digitalWrite
  5203 ;;		_pulseEnablePin
  5204 ;;		_soWrite
  5205 ;; This function is called by:
  5206 ;;		_lcdCommand
  5207 ;;		_lcdChar
  5208 ;; This function uses a non-reentrant model
  5209 ;;
  5210                           
  5211                           	psect	text25
  5212  002752                     __ptext25:
  5213                           	callstack 0
  5214  002752                     _pushByte:
  5215                           	callstack 24
  5216                           
  5217                           ;incstack = 0
  5218                           ;pushByte@value stored from wreg
  5219  002752  6E0D               	movwf	pushByte@value^0,c
  5220  002754                     
  5221                           ;lcd.c: 32:  soWrite(value >> 4);
  5222  002754  C00D  F00C         	movff	pushByte@value,??_pushByte
  5223  002758  3A0C               	swapf	??_pushByte^0,f,c
  5224  00275A  0E0F               	movlw	15
  5225  00275C  160C               	andwf	??_pushByte^0,f,c
  5226  00275E  500C               	movf	??_pushByte^0,w,c
  5227  002760  6E07               	movwf	soWrite@value^0,c
  5228  002762  6A08               	clrf	(soWrite@value+1)^0,c
  5229  002764  EC51  F014         	call	_soWrite	;wreg free
  5230                           
  5231                           ;lcd.c: 33:  digitalWrite(PIN_D5, rs);
  5232  002768  0E00               	movlw	0
  5233  00276A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5234  00276C  0E1D               	movlw	29
  5235  00276E  6E01               	movwf	digitalWrite@pin^0,c
  5236  002770  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  5237  002774  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  5238  002778  ECC3  F00B         	call	_digitalWrite	;wreg free
  5239                           
  5240                           ;lcd.c: 34:  pulseEnablePin();
  5241  00277C  EC9C  F014         	call	_pulseEnablePin	;wreg free
  5242                           
  5243                           ;lcd.c: 36:  soWrite(value & 0x0F);
  5244  002780  C00D  F00C         	movff	pushByte@value,??_pushByte
  5245  002784  0E0F               	movlw	15
  5246  002786  160C               	andwf	??_pushByte^0,f,c
  5247  002788  500C               	movf	??_pushByte^0,w,c
  5248  00278A  6E07               	movwf	soWrite@value^0,c
  5249  00278C  6A08               	clrf	(soWrite@value+1)^0,c
  5250  00278E  EC51  F014         	call	_soWrite	;wreg free
  5251                           
  5252                           ;lcd.c: 37:  digitalWrite(PIN_D5, rs);
  5253  002792  0E00               	movlw	0
  5254  002794  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5255  002796  0E1D               	movlw	29
  5256  002798  6E01               	movwf	digitalWrite@pin^0,c
  5257  00279A  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  5258  00279E  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  5259  0027A2  ECC3  F00B         	call	_digitalWrite	;wreg free
  5260                           
  5261                           ;lcd.c: 38:  pulseEnablePin();
  5262  0027A6  EC9C  F014         	call	_pulseEnablePin	;wreg free
  5263  0027AA  0012               	return		;funcret
  5264  0027AC                     __end_of_pushByte:
  5265                           	callstack 0
  5266                           
  5267 ;; *************** function _pulseEnablePin *****************
  5268 ;; Defined at:
  5269 ;;		line 18 in file "lcd.c"
  5270 ;; Parameters:    Size  Location     Type
  5271 ;;		None
  5272 ;; Auto vars:     Size  Location     Type
  5273 ;;		None
  5274 ;; Return value:  Size  Location     Type
  5275 ;;                  1    wreg      void 
  5276 ;; Registers used:
  5277 ;;		wreg, status,2, status,0, cstack
  5278 ;; Tracked objects:
  5279 ;;		On entry : 0/0
  5280 ;;		On exit  : 0/0
  5281 ;;		Unchanged: 0/0
  5282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5283 ;;      Params:         0       0       0       0       0       0       0
  5284 ;;      Locals:         0       0       0       0       0       0       0
  5285 ;;      Temps:          0       0       0       0       0       0       0
  5286 ;;      Totals:         0       0       0       0       0       0       0
  5287 ;;Total ram usage:        0 bytes
  5288 ;; Hardware stack levels used: 1
  5289 ;; Hardware stack levels required when called: 1
  5290 ;; This function calls:
  5291 ;;		_delayMicro
  5292 ;;		_digitalWrite
  5293 ;; This function is called by:
  5294 ;;		_pushNibble
  5295 ;;		_pushByte
  5296 ;; This function uses a non-reentrant model
  5297 ;;
  5298                           
  5299                           	psect	text26
  5300  002938                     __ptext26:
  5301                           	callstack 0
  5302  002938                     _pulseEnablePin:
  5303                           	callstack 25
  5304  002938                     
  5305                           ;lcd.c: 19:  digitalWrite(PIN_D4, 1);
  5306  002938  0E00               	movlw	0
  5307  00293A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5308  00293C  0E1C               	movlw	28
  5309  00293E  6E01               	movwf	digitalWrite@pin^0,c
  5310  002940  0E00               	movlw	0
  5311  002942  6E04               	movwf	(digitalWrite@value+1)^0,c
  5312  002944  0E01               	movlw	1
  5313  002946  6E03               	movwf	digitalWrite@value^0,c
  5314  002948  ECC3  F00B         	call	_digitalWrite	;wreg free
  5315  00294C                     
  5316                           ;lcd.c: 20:  delayMicro(5);
  5317  00294C  0E00               	movlw	0
  5318  00294E  6E02               	movwf	(delayMicro@a+1)^0,c
  5319  002950  0E05               	movlw	5
  5320  002952  6E01               	movwf	delayMicro@a^0,c
  5321  002954  ECC2  F015         	call	_delayMicro	;wreg free
  5322  002958                     
  5323                           ;lcd.c: 21:  digitalWrite(PIN_D4, 0);
  5324  002958  0E00               	movlw	0
  5325  00295A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5326  00295C  0E1C               	movlw	28
  5327  00295E  6E01               	movwf	digitalWrite@pin^0,c
  5328  002960  0E00               	movlw	0
  5329  002962  6E04               	movwf	(digitalWrite@value+1)^0,c
  5330  002964  0E00               	movlw	0
  5331  002966  6E03               	movwf	digitalWrite@value^0,c
  5332  002968  ECC3  F00B         	call	_digitalWrite	;wreg free
  5333                           
  5334                           ;lcd.c: 22:  delayMicro(5);
  5335  00296C  0E00               	movlw	0
  5336  00296E  6E02               	movwf	(delayMicro@a+1)^0,c
  5337  002970  0E05               	movlw	5
  5338  002972  6E01               	movwf	delayMicro@a^0,c
  5339  002974  ECC2  F015         	call	_delayMicro	;wreg free
  5340  002978  0012               	return		;funcret
  5341  00297A                     __end_of_pulseEnablePin:
  5342                           	callstack 0
  5343                           
  5344 ;; *************** function _delayMicro *****************
  5345 ;; Defined at:
  5346 ;;		line 5 in file "lcd.c"
  5347 ;; Parameters:    Size  Location     Type
  5348 ;;  a               2    0[COMRAM] int 
  5349 ;; Auto vars:     Size  Location     Type
  5350 ;;  i               2    0        volatile int 
  5351 ;; Return value:  Size  Location     Type
  5352 ;;                  1    wreg      void 
  5353 ;; Registers used:
  5354 ;;		None
  5355 ;; Tracked objects:
  5356 ;;		On entry : 0/0
  5357 ;;		On exit  : 0/0
  5358 ;;		Unchanged: 0/0
  5359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5360 ;;      Params:         2       0       0       0       0       0       0
  5361 ;;      Locals:         0       0       0       0       0       0       0
  5362 ;;      Temps:          0       0       0       0       0       0       0
  5363 ;;      Totals:         2       0       0       0       0       0       0
  5364 ;;Total ram usage:        2 bytes
  5365 ;; Hardware stack levels used: 1
  5366 ;; This function calls:
  5367 ;;		Nothing
  5368 ;; This function is called by:
  5369 ;;		_pulseEnablePin
  5370 ;;		_lcdChar
  5371 ;;		_lcdInit
  5372 ;; This function uses a non-reentrant model
  5373 ;;
  5374                           
  5375                           	psect	text27
  5376  002B84                     __ptext27:
  5377                           	callstack 0
  5378  002B84                     _delayMicro:
  5379                           	callstack 25
  5380  002B84  0012               	return		;funcret
  5381  002B86                     __end_of_delayMicro:
  5382                           	callstack 0
  5383                           
  5384 ;; *************** function _delayMili *****************
  5385 ;; Defined at:
  5386 ;;		line 10 in file "lcd.c"
  5387 ;; Parameters:    Size  Location     Type
  5388 ;;  a               2    0[COMRAM] int 
  5389 ;; Auto vars:     Size  Location     Type
  5390 ;;  i               2    3[COMRAM] volatile int 
  5391 ;; Return value:  Size  Location     Type
  5392 ;;                  1    wreg      void 
  5393 ;; Registers used:
  5394 ;;		wreg, status,2, status,0
  5395 ;; Tracked objects:
  5396 ;;		On entry : 0/0
  5397 ;;		On exit  : 0/0
  5398 ;;		Unchanged: 0/0
  5399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5400 ;;      Params:         2       0       0       0       0       0       0
  5401 ;;      Locals:         2       0       0       0       0       0       0
  5402 ;;      Temps:          1       0       0       0       0       0       0
  5403 ;;      Totals:         5       0       0       0       0       0       0
  5404 ;;Total ram usage:        5 bytes
  5405 ;; Hardware stack levels used: 1
  5406 ;; This function calls:
  5407 ;;		Nothing
  5408 ;; This function is called by:
  5409 ;;		_lcdCommand
  5410 ;;		_lcdInit
  5411 ;; This function uses a non-reentrant model
  5412 ;;
  5413                           
  5414                           	psect	text28
  5415  0029EA                     __ptext28:
  5416                           	callstack 0
  5417  0029EA                     _delayMili:
  5418                           	callstack 28
  5419  0029EA                     
  5420                           ;lcd.c: 11:  volatile int i;;lcd.c: 12:  for (i = 0; i < a; i++) {
  5421  0029EA  0E00               	movlw	0
  5422  0029EC  6E05               	movwf	(delayMili@i+1)^0,c	;volatile
  5423  0029EE  0E00               	movlw	0
  5424  0029F0  6E04               	movwf	delayMili@i^0,c	;volatile
  5425  0029F2  EFFD  F014         	goto	l2368
  5426  0029F6                     l2366:
  5427                           
  5428                           ;lcd.c: 15:  }
  5429  0029F6  4A04               	infsnz	delayMili@i^0,f,c	;volatile
  5430  0029F8  2A05               	incf	(delayMili@i+1)^0,f,c	;volatile
  5431  0029FA                     l2368:
  5432  0029FA  5001               	movf	delayMili@a^0,w,c
  5433  0029FC  5C04               	subwf	delayMili@i^0,w,c	;volatile
  5434  0029FE  5005               	movf	(delayMili@i+1)^0,w,c	;volatile
  5435  002A00  0A80               	xorlw	128
  5436  002A02  6E03               	movwf	??_delayMili^0,c
  5437  002A04  5002               	movf	(delayMili@a+1)^0,w,c
  5438  002A06  0A80               	xorlw	128
  5439  002A08  5803               	subwfb	??_delayMili^0,w,c
  5440  002A0A  A0D8               	btfss	status,0,c
  5441  002A0C  EF0A  F015         	goto	u2301
  5442  002A10  EF0C  F015         	goto	u2300
  5443  002A14                     u2301:
  5444  002A14  EFFB  F014         	goto	l2366
  5445  002A18                     u2300:
  5446  002A18  0012               	return		;funcret
  5447  002A1A                     __end_of_delayMili:
  5448                           	callstack 0
  5449                           
  5450 ;; *************** function _kpInit *****************
  5451 ;; Defined at:
  5452 ;;		line 54 in file "keypad.c"
  5453 ;; Parameters:    Size  Location     Type
  5454 ;;		None
  5455 ;; Auto vars:     Size  Location     Type
  5456 ;;		None
  5457 ;; Return value:  Size  Location     Type
  5458 ;;                  1    wreg      void 
  5459 ;; Registers used:
  5460 ;;		wreg, status,2, status,0, cstack
  5461 ;; Tracked objects:
  5462 ;;		On entry : 0/0
  5463 ;;		On exit  : 0/0
  5464 ;;		Unchanged: 0/0
  5465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5466 ;;      Params:         0       0       0       0       0       0       0
  5467 ;;      Locals:         0       0       0       0       0       0       0
  5468 ;;      Temps:          0       0       0       0       0       0       0
  5469 ;;      Totals:         0       0       0       0       0       0       0
  5470 ;;Total ram usage:        0 bytes
  5471 ;; Hardware stack levels used: 1
  5472 ;; Hardware stack levels required when called: 2
  5473 ;; This function calls:
  5474 ;;		_pinMode
  5475 ;;		_soInit
  5476 ;; This function is called by:
  5477 ;;		_main
  5478 ;; This function uses a non-reentrant model
  5479 ;;
  5480                           
  5481                           	psect	text29
  5482  0029B8                     __ptext29:
  5483                           	callstack 0
  5484  0029B8                     _kpInit:
  5485                           	callstack 28
  5486  0029B8                     
  5487                           ;keypad.c: 55:   soInit();
  5488  0029B8  ECBD  F014         	call	_soInit	;wreg free
  5489                           
  5490                           ;keypad.c: 56:   pinMode(PIN_B2, 1);
  5491  0029BC  0E00               	movlw	0
  5492  0029BE  6E02               	movwf	(pinMode@pin+1)^0,c
  5493  0029C0  0E0A               	movlw	10
  5494  0029C2  6E01               	movwf	pinMode@pin^0,c
  5495  0029C4  0E00               	movlw	0
  5496  0029C6  6E04               	movwf	(pinMode@type+1)^0,c
  5497  0029C8  0E01               	movlw	1
  5498  0029CA  6E03               	movwf	pinMode@type^0,c
  5499  0029CC  ECEA  F00C         	call	_pinMode	;wreg free
  5500                           
  5501                           ;keypad.c: 57:   pinMode(PIN_B1, 1);
  5502  0029D0  0E00               	movlw	0
  5503  0029D2  6E02               	movwf	(pinMode@pin+1)^0,c
  5504  0029D4  0E09               	movlw	9
  5505  0029D6  6E01               	movwf	pinMode@pin^0,c
  5506  0029D8  0E00               	movlw	0
  5507  0029DA  6E04               	movwf	(pinMode@type+1)^0,c
  5508  0029DC  0E01               	movlw	1
  5509  0029DE  6E03               	movwf	pinMode@type^0,c
  5510  0029E0  ECEA  F00C         	call	_pinMode	;wreg free
  5511  0029E4                     
  5512                           ;keypad.c: 58:   ADCON1 = 0b00001100;
  5513  0029E4  0E0C               	movlw	12
  5514  0029E6  6EC1               	movwf	193,c	;volatile
  5515  0029E8  0012               	return		;funcret
  5516  0029EA                     __end_of_kpInit:
  5517                           	callstack 0
  5518                           
  5519 ;; *************** function _soInit *****************
  5520 ;; Defined at:
  5521 ;;		line 3 in file "so.c"
  5522 ;; Parameters:    Size  Location     Type
  5523 ;;		None
  5524 ;; Auto vars:     Size  Location     Type
  5525 ;;		None
  5526 ;; Return value:  Size  Location     Type
  5527 ;;                  1    wreg      void 
  5528 ;; Registers used:
  5529 ;;		wreg, status,2, status,0, cstack
  5530 ;; Tracked objects:
  5531 ;;		On entry : 0/0
  5532 ;;		On exit  : 0/0
  5533 ;;		Unchanged: 0/0
  5534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5535 ;;      Params:         0       0       0       0       0       0       0
  5536 ;;      Locals:         0       0       0       0       0       0       0
  5537 ;;      Temps:          0       0       0       0       0       0       0
  5538 ;;      Totals:         0       0       0       0       0       0       0
  5539 ;;Total ram usage:        0 bytes
  5540 ;; Hardware stack levels used: 1
  5541 ;; Hardware stack levels required when called: 1
  5542 ;; This function calls:
  5543 ;;		_pinMode
  5544 ;; This function is called by:
  5545 ;;		_kpInit
  5546 ;;		_lcdInit
  5547 ;; This function uses a non-reentrant model
  5548 ;;
  5549                           
  5550                           	psect	text30
  5551  00297A                     __ptext30:
  5552                           	callstack 0
  5553  00297A                     _soInit:
  5554                           	callstack 28
  5555  00297A                     
  5556                           ;so.c: 4:  pinMode(PIN_D7, 0);
  5557  00297A  0E00               	movlw	0
  5558  00297C  6E02               	movwf	(pinMode@pin+1)^0,c
  5559  00297E  0E1F               	movlw	31
  5560  002980  6E01               	movwf	pinMode@pin^0,c
  5561  002982  0E00               	movlw	0
  5562  002984  6E04               	movwf	(pinMode@type+1)^0,c
  5563  002986  0E00               	movlw	0
  5564  002988  6E03               	movwf	pinMode@type^0,c
  5565  00298A  ECEA  F00C         	call	_pinMode	;wreg free
  5566                           
  5567                           ;so.c: 5:  pinMode(PIN_B0, 0);
  5568  00298E  0E00               	movlw	0
  5569  002990  6E02               	movwf	(pinMode@pin+1)^0,c
  5570  002992  0E08               	movlw	8
  5571  002994  6E01               	movwf	pinMode@pin^0,c
  5572  002996  0E00               	movlw	0
  5573  002998  6E04               	movwf	(pinMode@type+1)^0,c
  5574  00299A  0E00               	movlw	0
  5575  00299C  6E03               	movwf	pinMode@type^0,c
  5576  00299E  ECEA  F00C         	call	_pinMode	;wreg free
  5577                           
  5578                           ;so.c: 6:  pinMode(PIN_D6, 0);
  5579  0029A2  0E00               	movlw	0
  5580  0029A4  6E02               	movwf	(pinMode@pin+1)^0,c
  5581  0029A6  0E1E               	movlw	30
  5582  0029A8  6E01               	movwf	pinMode@pin^0,c
  5583  0029AA  0E00               	movlw	0
  5584  0029AC  6E04               	movwf	(pinMode@type+1)^0,c
  5585  0029AE  0E00               	movlw	0
  5586  0029B0  6E03               	movwf	pinMode@type^0,c
  5587  0029B2  ECEA  F00C         	call	_pinMode	;wreg free
  5588  0029B6  0012               	return		;funcret
  5589  0029B8                     __end_of_soInit:
  5590                           	callstack 0
  5591                           
  5592 ;; *************** function _kpDebounce *****************
  5593 ;; Defined at:
  5594 ;;		line 27 in file "keypad.c"
  5595 ;; Parameters:    Size  Location     Type
  5596 ;;		None
  5597 ;; Auto vars:     Size  Location     Type
  5598 ;;  i               2   12[COMRAM] int 
  5599 ;; Return value:  Size  Location     Type
  5600 ;;                  1    wreg      void 
  5601 ;; Registers used:
  5602 ;;		wreg, status,2, status,0, cstack
  5603 ;; Tracked objects:
  5604 ;;		On entry : 0/0
  5605 ;;		On exit  : 0/0
  5606 ;;		Unchanged: 0/0
  5607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5608 ;;      Params:         0       0       0       0       0       0       0
  5609 ;;      Locals:         2       0       0       0       0       0       0
  5610 ;;      Temps:          3       0       0       0       0       0       0
  5611 ;;      Totals:         5       0       0       0       0       0       0
  5612 ;;Total ram usage:        5 bytes
  5613 ;; Hardware stack levels used: 1
  5614 ;; Hardware stack levels required when called: 3
  5615 ;; This function calls:
  5616 ;;		_digitalRead
  5617 ;;		_soWrite
  5618 ;; This function is called by:
  5619 ;;		_main
  5620 ;; This function uses a non-reentrant model
  5621 ;;
  5622                           
  5623                           	psect	text31
  5624  0020EC                     __ptext31:
  5625                           	callstack 0
  5626  0020EC                     _kpDebounce:
  5627                           	callstack 27
  5628  0020EC                     
  5629                           ;keypad.c: 28:     int i;;keypad.c: 29:     static unsigned char tempo;;keypad.c: 30:   
      +                            static unsigned int newRead;;keypad.c: 31:     static unsigned int oldRead;;keypad.c: 
      +                          32:     newRead = 0;
  5630  0020EC  0E00               	movlw	0
  5631  0020EE  6E70               	movwf	(kpDebounce@newRead+1)^0,c
  5632  0020F0  0E00               	movlw	0
  5633  0020F2  6E6F               	movwf	kpDebounce@newRead^0,c
  5634                           
  5635                           ;keypad.c: 33:     for(i = 0; i<5; i++){
  5636  0020F4  0E00               	movlw	0
  5637  0020F6  6E0E               	movwf	(kpDebounce@i+1)^0,c
  5638  0020F8  0E00               	movlw	0
  5639  0020FA  6E0D               	movwf	kpDebounce@i^0,c
  5640  0020FC                     l3148:
  5641  0020FC  BE0E               	btfsc	(kpDebounce@i+1)^0,7,c
  5642  0020FE  EF8A  F010         	goto	u3591
  5643  002102  500E               	movf	(kpDebounce@i+1)^0,w,c
  5644  002104  E109               	bnz	u3590
  5645  002106  0E05               	movlw	5
  5646  002108  5C0D               	subwf	kpDebounce@i^0,w,c
  5647  00210A  A0D8               	btfss	status,0,c
  5648  00210C  EF8A  F010         	goto	u3591
  5649  002110  EF8C  F010         	goto	u3590
  5650  002114                     u3591:
  5651  002114  EF8E  F010         	goto	l3152
  5652  002118                     u3590:
  5653  002118  EFEF  F010         	goto	l3164
  5654  00211C                     l3152:
  5655                           
  5656                           ;keypad.c: 35:       soWrite(1<<(i+3));
  5657  00211C  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  5658  002120  0E03               	movlw	3
  5659  002122  260A               	addwf	??_kpDebounce^0,f,c
  5660  002124  0E01               	movlw	1
  5661  002126  6E0B               	movwf	(??_kpDebounce+1)^0,c
  5662  002128  0E00               	movlw	0
  5663  00212A  6E0C               	movwf	(??_kpDebounce+2)^0,c
  5664  00212C  2A0A               	incf	??_kpDebounce^0,f,c
  5665  00212E  EF9C  F010         	goto	u3604
  5666  002132                     u3605:
  5667  002132  90D8               	bcf	status,0,c
  5668  002134  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  5669  002136  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  5670  002138                     u3604:
  5671  002138  2E0A               	decfsz	??_kpDebounce^0,f,c
  5672  00213A  EF99  F010         	goto	u3605
  5673  00213E  C00B  F007         	movff	??_kpDebounce+1,soWrite@value
  5674  002142  C00C  F008         	movff	??_kpDebounce+2,soWrite@value+1
  5675  002146  EC51  F014         	call	_soWrite	;wreg free
  5676                           
  5677                           ;keypad.c: 36:       if(digitalRead(PIN_B2)){
  5678  00214A  0E00               	movlw	0
  5679  00214C  6E02               	movwf	(digitalRead@pin+1)^0,c
  5680  00214E  0E0A               	movlw	10
  5681  002150  6E01               	movwf	digitalRead@pin^0,c
  5682  002152  ECC1  F00F         	call	_digitalRead	;wreg free
  5683  002156  5001               	movf	?_digitalRead^0,w,c
  5684  002158  1002               	iorwf	(?_digitalRead+1)^0,w,c
  5685  00215A  B4D8               	btfsc	status,2,c
  5686  00215C  EFB2  F010         	goto	u3611
  5687  002160  EFB4  F010         	goto	u3610
  5688  002164                     u3611:
  5689  002164  EFC7  F010         	goto	l3156
  5690  002168                     u3610:
  5691  002168                     
  5692                           ;keypad.c: 37:         ((newRead) |= (1<<(i)));
  5693  002168  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  5694  00216C  0E01               	movlw	1
  5695  00216E  6E0B               	movwf	(??_kpDebounce+1)^0,c
  5696  002170  0E00               	movlw	0
  5697  002172  6E0C               	movwf	(??_kpDebounce+2)^0,c
  5698  002174  2A0A               	incf	??_kpDebounce^0,f,c
  5699  002176  EFC0  F010         	goto	u3624
  5700  00217A                     u3625:
  5701  00217A  90D8               	bcf	status,0,c
  5702  00217C  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  5703  00217E  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  5704  002180                     u3624:
  5705  002180  2E0A               	decfsz	??_kpDebounce^0,f,c
  5706  002182  EFBD  F010         	goto	u3625
  5707  002186  500B               	movf	(??_kpDebounce+1)^0,w,c
  5708  002188  126F               	iorwf	kpDebounce@newRead^0,f,c
  5709  00218A  500C               	movf	(??_kpDebounce+2)^0,w,c
  5710  00218C  1270               	iorwf	(kpDebounce@newRead+1)^0,f,c
  5711  00218E                     l3156:
  5712                           
  5713                           ;keypad.c: 39:       if(digitalRead(PIN_B1)){
  5714  00218E  0E00               	movlw	0
  5715  002190  6E02               	movwf	(digitalRead@pin+1)^0,c
  5716  002192  0E09               	movlw	9
  5717  002194  6E01               	movwf	digitalRead@pin^0,c
  5718  002196  ECC1  F00F         	call	_digitalRead	;wreg free
  5719  00219A  5001               	movf	?_digitalRead^0,w,c
  5720  00219C  1002               	iorwf	(?_digitalRead+1)^0,w,c
  5721  00219E  B4D8               	btfsc	status,2,c
  5722  0021A0  EFD4  F010         	goto	u3631
  5723  0021A4  EFD6  F010         	goto	u3630
  5724  0021A8                     u3631:
  5725  0021A8  EFEB  F010         	goto	l3160
  5726  0021AC                     u3630:
  5727  0021AC                     
  5728                           ;keypad.c: 40:         ((newRead) |= (1<<((i+5))));
  5729  0021AC  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  5730  0021B0  0E05               	movlw	5
  5731  0021B2  260A               	addwf	??_kpDebounce^0,f,c
  5732  0021B4  0E01               	movlw	1
  5733  0021B6  6E0B               	movwf	(??_kpDebounce+1)^0,c
  5734  0021B8  0E00               	movlw	0
  5735  0021BA  6E0C               	movwf	(??_kpDebounce+2)^0,c
  5736  0021BC  2A0A               	incf	??_kpDebounce^0,f,c
  5737  0021BE  EFE4  F010         	goto	u3644
  5738  0021C2                     u3645:
  5739  0021C2  90D8               	bcf	status,0,c
  5740  0021C4  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  5741  0021C6  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  5742  0021C8                     u3644:
  5743  0021C8  2E0A               	decfsz	??_kpDebounce^0,f,c
  5744  0021CA  EFE1  F010         	goto	u3645
  5745  0021CE  500B               	movf	(??_kpDebounce+1)^0,w,c
  5746  0021D0  126F               	iorwf	kpDebounce@newRead^0,f,c
  5747  0021D2  500C               	movf	(??_kpDebounce+2)^0,w,c
  5748  0021D4  1270               	iorwf	(kpDebounce@newRead+1)^0,f,c
  5749  0021D6                     l3160:
  5750                           
  5751                           ;keypad.c: 42:     }
  5752  0021D6  4A0D               	infsnz	kpDebounce@i^0,f,c
  5753  0021D8  2A0E               	incf	(kpDebounce@i+1)^0,f,c
  5754  0021DA  EF7E  F010         	goto	l3148
  5755  0021DE                     l3164:
  5756                           
  5757                           ;keypad.c: 43:     if (oldRead == newRead) {
  5758  0021DE  506F               	movf	kpDebounce@newRead^0,w,c
  5759  0021E0  186D               	xorwf	kpDebounce@oldRead^0,w,c
  5760  0021E2  E107               	bnz	u3651
  5761  0021E4  5070               	movf	(kpDebounce@newRead+1)^0,w,c
  5762  0021E6  186E               	xorwf	(kpDebounce@oldRead+1)^0,w,c
  5763  0021E8  A4D8               	btfss	status,2,c
  5764  0021EA  EFF9  F010         	goto	u3651
  5765  0021EE  EFFB  F010         	goto	u3650
  5766  0021F2                     u3651:
  5767  0021F2  EFFE  F010         	goto	l3168
  5768  0021F6                     u3650:
  5769  0021F6                     
  5770                           ;keypad.c: 44:         tempo--;
  5771  0021F6  0675               	decf	kpDebounce@tempo^0,f,c
  5772                           
  5773                           ;keypad.c: 45:     } else {
  5774  0021F8  EF04  F011         	goto	l145
  5775  0021FC                     l3168:
  5776                           
  5777                           ;keypad.c: 46:         tempo = 1;
  5778  0021FC  0E01               	movlw	1
  5779  0021FE  6E75               	movwf	kpDebounce@tempo^0,c
  5780  002200                     
  5781                           ;keypad.c: 47:         oldRead = newRead;
  5782  002200  C06F  F06D         	movff	kpDebounce@newRead,kpDebounce@oldRead
  5783  002204  C070  F06E         	movff	kpDebounce@newRead+1,kpDebounce@oldRead+1
  5784  002208                     l145:
  5785                           
  5786                           ;keypad.c: 49:     if (tempo == 0) {
  5787  002208  5075               	movf	kpDebounce@tempo^0,w,c
  5788  00220A  A4D8               	btfss	status,2,c
  5789  00220C  EF0A  F011         	goto	u3661
  5790  002210  EF0C  F011         	goto	u3660
  5791  002214                     u3661:
  5792  002214  EF10  F011         	goto	l147
  5793  002218                     u3660:
  5794  002218                     
  5795                           ;keypad.c: 50:         keys = oldRead;
  5796  002218  C06D  F071         	movff	kpDebounce@oldRead,_keys
  5797  00221C  C06E  F072         	movff	kpDebounce@oldRead+1,_keys+1
  5798  002220                     l147:
  5799  002220  0012               	return		;funcret
  5800  002222                     __end_of_kpDebounce:
  5801                           	callstack 0
  5802                           
  5803 ;; *************** function _soWrite *****************
  5804 ;; Defined at:
  5805 ;;		line 18 in file "so.c"
  5806 ;; Parameters:    Size  Location     Type
  5807 ;;  value           2    6[COMRAM] int 
  5808 ;; Auto vars:     Size  Location     Type
  5809 ;;  i               1    8[COMRAM] unsigned char 
  5810 ;; Return value:  Size  Location     Type
  5811 ;;                  1    wreg      void 
  5812 ;; Registers used:
  5813 ;;		wreg, status,2, status,0, cstack
  5814 ;; Tracked objects:
  5815 ;;		On entry : 0/0
  5816 ;;		On exit  : 0/0
  5817 ;;		Unchanged: 0/0
  5818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5819 ;;      Params:         2       0       0       0       0       0       0
  5820 ;;      Locals:         1       0       0       0       0       0       0
  5821 ;;      Temps:          0       0       0       0       0       0       0
  5822 ;;      Totals:         3       0       0       0       0       0       0
  5823 ;;Total ram usage:        3 bytes
  5824 ;; Hardware stack levels used: 1
  5825 ;; Hardware stack levels required when called: 2
  5826 ;; This function calls:
  5827 ;;		_PulseClockData
  5828 ;;		_PulseEnClock
  5829 ;;		_digitalWrite
  5830 ;; This function is called by:
  5831 ;;		_kpDebounce
  5832 ;;		_pushNibble
  5833 ;;		_pushByte
  5834 ;; This function uses a non-reentrant model
  5835 ;;
  5836                           
  5837                           	psect	text32
  5838  0028A2                     __ptext32:
  5839                           	callstack 0
  5840  0028A2                     _soWrite:
  5841                           	callstack 24
  5842  0028A2                     
  5843                           ;so.c: 19:  char i;;so.c: 20:  digitalWrite(PIN_B0, 0);
  5844  0028A2  0E00               	movlw	0
  5845  0028A4  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5846  0028A6  0E08               	movlw	8
  5847  0028A8  6E01               	movwf	digitalWrite@pin^0,c
  5848  0028AA  0E00               	movlw	0
  5849  0028AC  6E04               	movwf	(digitalWrite@value+1)^0,c
  5850  0028AE  0E00               	movlw	0
  5851  0028B0  6E03               	movwf	digitalWrite@value^0,c
  5852  0028B2  ECC3  F00B         	call	_digitalWrite	;wreg free
  5853  0028B6                     
  5854                           ;so.c: 21:  for (i = 0; i < 8; i++) {
  5855  0028B6  0E00               	movlw	0
  5856  0028B8  6E09               	movwf	soWrite@i^0,c
  5857  0028BA                     l2302:
  5858                           
  5859                           ;so.c: 22:   digitalWrite(PIN_D6, value & 0x80);
  5860  0028BA  0E00               	movlw	0
  5861  0028BC  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5862  0028BE  0E1E               	movlw	30
  5863  0028C0  6E01               	movwf	digitalWrite@pin^0,c
  5864  0028C2  0E80               	movlw	128
  5865  0028C4  1407               	andwf	soWrite@value^0,w,c
  5866  0028C6  6E03               	movwf	digitalWrite@value^0,c
  5867  0028C8  6A04               	clrf	(digitalWrite@value+1)^0,c
  5868  0028CA  ECC3  F00B         	call	_digitalWrite	;wreg free
  5869                           
  5870                           ;so.c: 23:   PulseClockData();
  5871  0028CE  EC38  F015         	call	_PulseClockData	;wreg free
  5872  0028D2                     
  5873                           ;so.c: 24:   value <<= 1;
  5874  0028D2  90D8               	bcf	status,0,c
  5875  0028D4  3607               	rlcf	soWrite@value^0,f,c
  5876  0028D6  3608               	rlcf	(soWrite@value+1)^0,f,c
  5877  0028D8                     
  5878                           ;so.c: 25:  }
  5879  0028D8  2A09               	incf	soWrite@i^0,f,c
  5880  0028DA  0E07               	movlw	7
  5881  0028DC  6409               	cpfsgt	soWrite@i^0,c
  5882  0028DE  EF73  F014         	goto	u2091
  5883  0028E2  EF75  F014         	goto	u2090
  5884  0028E6                     u2091:
  5885  0028E6  EF5D  F014         	goto	l2302
  5886  0028EA                     u2090:
  5887  0028EA                     
  5888                           ;so.c: 26:  PulseEnClock();
  5889  0028EA  EC23  F015         	call	_PulseEnClock	;wreg free
  5890  0028EE  0012               	return		;funcret
  5891  0028F0                     __end_of_soWrite:
  5892                           	callstack 0
  5893                           
  5894 ;; *************** function _PulseEnClock *****************
  5895 ;; Defined at:
  5896 ;;		line 9 in file "so.c"
  5897 ;; Parameters:    Size  Location     Type
  5898 ;;		None
  5899 ;; Auto vars:     Size  Location     Type
  5900 ;;		None
  5901 ;; Return value:  Size  Location     Type
  5902 ;;                  1    wreg      void 
  5903 ;; Registers used:
  5904 ;;		wreg, status,2, status,0, cstack
  5905 ;; Tracked objects:
  5906 ;;		On entry : 0/0
  5907 ;;		On exit  : 0/0
  5908 ;;		Unchanged: 0/0
  5909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5910 ;;      Params:         0       0       0       0       0       0       0
  5911 ;;      Locals:         0       0       0       0       0       0       0
  5912 ;;      Temps:          0       0       0       0       0       0       0
  5913 ;;      Totals:         0       0       0       0       0       0       0
  5914 ;;Total ram usage:        0 bytes
  5915 ;; Hardware stack levels used: 1
  5916 ;; Hardware stack levels required when called: 1
  5917 ;; This function calls:
  5918 ;;		_digitalWrite
  5919 ;; This function is called by:
  5920 ;;		_soWrite
  5921 ;; This function uses a non-reentrant model
  5922 ;;
  5923                           
  5924                           	psect	text33
  5925  002A46                     __ptext33:
  5926                           	callstack 0
  5927  002A46                     _PulseEnClock:
  5928                           	callstack 24
  5929  002A46                     
  5930                           ;so.c: 10:  digitalWrite(PIN_D7, 1);
  5931  002A46  0E00               	movlw	0
  5932  002A48  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5933  002A4A  0E1F               	movlw	31
  5934  002A4C  6E01               	movwf	digitalWrite@pin^0,c
  5935  002A4E  0E00               	movlw	0
  5936  002A50  6E04               	movwf	(digitalWrite@value+1)^0,c
  5937  002A52  0E01               	movlw	1
  5938  002A54  6E03               	movwf	digitalWrite@value^0,c
  5939  002A56  ECC3  F00B         	call	_digitalWrite	;wreg free
  5940                           
  5941                           ;so.c: 11:  digitalWrite(PIN_D7, 0);
  5942  002A5A  0E00               	movlw	0
  5943  002A5C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5944  002A5E  0E1F               	movlw	31
  5945  002A60  6E01               	movwf	digitalWrite@pin^0,c
  5946  002A62  0E00               	movlw	0
  5947  002A64  6E04               	movwf	(digitalWrite@value+1)^0,c
  5948  002A66  0E00               	movlw	0
  5949  002A68  6E03               	movwf	digitalWrite@value^0,c
  5950  002A6A  ECC3  F00B         	call	_digitalWrite	;wreg free
  5951  002A6E  0012               	return		;funcret
  5952  002A70                     __end_of_PulseEnClock:
  5953                           	callstack 0
  5954                           
  5955 ;; *************** function _PulseClockData *****************
  5956 ;; Defined at:
  5957 ;;		line 14 in file "so.c"
  5958 ;; Parameters:    Size  Location     Type
  5959 ;;		None
  5960 ;; Auto vars:     Size  Location     Type
  5961 ;;		None
  5962 ;; Return value:  Size  Location     Type
  5963 ;;                  1    wreg      void 
  5964 ;; Registers used:
  5965 ;;		wreg, status,2, status,0, cstack
  5966 ;; Tracked objects:
  5967 ;;		On entry : 0/0
  5968 ;;		On exit  : 0/0
  5969 ;;		Unchanged: 0/0
  5970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5971 ;;      Params:         0       0       0       0       0       0       0
  5972 ;;      Locals:         0       0       0       0       0       0       0
  5973 ;;      Temps:          0       0       0       0       0       0       0
  5974 ;;      Totals:         0       0       0       0       0       0       0
  5975 ;;Total ram usage:        0 bytes
  5976 ;; Hardware stack levels used: 1
  5977 ;; Hardware stack levels required when called: 1
  5978 ;; This function calls:
  5979 ;;		_digitalWrite
  5980 ;; This function is called by:
  5981 ;;		_soWrite
  5982 ;; This function uses a non-reentrant model
  5983 ;;
  5984                           
  5985                           	psect	text34
  5986  002A70                     __ptext34:
  5987                           	callstack 0
  5988  002A70                     _PulseClockData:
  5989                           	callstack 24
  5990  002A70                     
  5991                           ;so.c: 15:  digitalWrite(PIN_B0, 1);
  5992  002A70  0E00               	movlw	0
  5993  002A72  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5994  002A74  0E08               	movlw	8
  5995  002A76  6E01               	movwf	digitalWrite@pin^0,c
  5996  002A78  0E00               	movlw	0
  5997  002A7A  6E04               	movwf	(digitalWrite@value+1)^0,c
  5998  002A7C  0E01               	movlw	1
  5999  002A7E  6E03               	movwf	digitalWrite@value^0,c
  6000  002A80  ECC3  F00B         	call	_digitalWrite	;wreg free
  6001                           
  6002                           ;so.c: 16:  digitalWrite(PIN_B0, 0);
  6003  002A84  0E00               	movlw	0
  6004  002A86  6E02               	movwf	(digitalWrite@pin+1)^0,c
  6005  002A88  0E08               	movlw	8
  6006  002A8A  6E01               	movwf	digitalWrite@pin^0,c
  6007  002A8C  0E00               	movlw	0
  6008  002A8E  6E04               	movwf	(digitalWrite@value+1)^0,c
  6009  002A90  0E00               	movlw	0
  6010  002A92  6E03               	movwf	digitalWrite@value^0,c
  6011  002A94  ECC3  F00B         	call	_digitalWrite	;wreg free
  6012  002A98  0012               	return		;funcret
  6013  002A9A                     __end_of_PulseClockData:
  6014                           	callstack 0
  6015                           
  6016 ;; *************** function _digitalWrite *****************
  6017 ;; Defined at:
  6018 ;;		line 14 in file "io.c"
  6019 ;; Parameters:    Size  Location     Type
  6020 ;;  pin             2    0[COMRAM] int 
  6021 ;;  value           2    2[COMRAM] int 
  6022 ;; Auto vars:     Size  Location     Type
  6023 ;;		None
  6024 ;; Return value:  Size  Location     Type
  6025 ;;                  1    wreg      void 
  6026 ;; Registers used:
  6027 ;;		wreg, status,2, status,0
  6028 ;; Tracked objects:
  6029 ;;		On entry : 0/0
  6030 ;;		On exit  : 0/0
  6031 ;;		Unchanged: 0/0
  6032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6033 ;;      Params:         4       0       0       0       0       0       0
  6034 ;;      Locals:         0       0       0       0       0       0       0
  6035 ;;      Temps:          2       0       0       0       0       0       0
  6036 ;;      Totals:         6       0       0       0       0       0       0
  6037 ;;Total ram usage:        6 bytes
  6038 ;; Hardware stack levels used: 1
  6039 ;; This function calls:
  6040 ;;		Nothing
  6041 ;; This function is called by:
  6042 ;;		_pulseEnablePin
  6043 ;;		_pushNibble
  6044 ;;		_pushByte
  6045 ;;		_PulseEnClock
  6046 ;;		_PulseClockData
  6047 ;;		_soWrite
  6048 ;; This function uses a non-reentrant model
  6049 ;;
  6050                           
  6051                           	psect	text35
  6052  001786                     __ptext35:
  6053                           	callstack 0
  6054  001786                     _digitalWrite:
  6055                           	callstack 25
  6056  001786                     
  6057                           ;io.c: 16:     if(pin <8){
  6058  001786  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  6059  001788  EFD1  F00B         	goto	u1890
  6060  00178C  5002               	movf	(digitalWrite@pin+1)^0,w,c
  6061  00178E  E107               	bnz	u1891
  6062  001790  0E08               	movlw	8
  6063  001792  5C01               	subwf	digitalWrite@pin^0,w,c
  6064  001794  B0D8               	btfsc	status,0,c
  6065  001796  EFCF  F00B         	goto	u1891
  6066  00179A  EFD1  F00B         	goto	u1890
  6067  00179E                     u1891:
  6068  00179E  EFFB  F00B         	goto	l2258
  6069  0017A2                     u1890:
  6070  0017A2                     
  6071                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  6072  0017A2  5003               	movf	digitalWrite@value^0,w,c
  6073  0017A4  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  6074  0017A6  B4D8               	btfsc	status,2,c
  6075  0017A8  EFD8  F00B         	goto	u1901
  6076  0017AC  EFDA  F00B         	goto	u1900
  6077  0017B0                     u1901:
  6078  0017B0  EFEA  F00B         	goto	l2256
  6079  0017B4                     u1900:
  6080  0017B4  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6081  0017B8  0E01               	movlw	1
  6082  0017BA  6E06               	movwf	(??_digitalWrite+1)^0,c
  6083  0017BC  2A05               	incf	??_digitalWrite^0,f,c
  6084  0017BE  EFE3  F00B         	goto	u1914
  6085  0017C2                     u1915:
  6086  0017C2  90D8               	bcf	status,0,c
  6087  0017C4  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6088  0017C6                     u1914:
  6089  0017C6  2E05               	decfsz	??_digitalWrite^0,f,c
  6090  0017C8  EFE1  F00B         	goto	u1915
  6091  0017CC  5006               	movf	(??_digitalWrite+1)^0,w,c
  6092  0017CE  1280               	iorwf	128,f,c	;volatile
  6093  0017D0  EFE9  F00C         	goto	l276
  6094  0017D4                     l2256:
  6095  0017D4  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6096  0017D8  0E01               	movlw	1
  6097  0017DA  6E06               	movwf	(??_digitalWrite+1)^0,c
  6098  0017DC  2A05               	incf	??_digitalWrite^0,f,c
  6099  0017DE  EFF3  F00B         	goto	u1924
  6100  0017E2                     u1925:
  6101  0017E2  90D8               	bcf	status,0,c
  6102  0017E4  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6103  0017E6                     u1924:
  6104  0017E6  2E05               	decfsz	??_digitalWrite^0,f,c
  6105  0017E8  EFF1  F00B         	goto	u1925
  6106  0017EC  5006               	movf	(??_digitalWrite+1)^0,w,c
  6107  0017EE  0AFF               	xorlw	255
  6108  0017F0  1680               	andwf	128,f,c	;volatile
  6109  0017F2  EFE9  F00C         	goto	l276
  6110  0017F6                     l2258:
  6111  0017F6  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  6112  0017F8  EF09  F00C         	goto	u1930
  6113  0017FC  5002               	movf	(digitalWrite@pin+1)^0,w,c
  6114  0017FE  E107               	bnz	u1931
  6115  001800  0E10               	movlw	16
  6116  001802  5C01               	subwf	digitalWrite@pin^0,w,c
  6117  001804  B0D8               	btfsc	status,0,c
  6118  001806  EF07  F00C         	goto	u1931
  6119  00180A  EF09  F00C         	goto	u1930
  6120  00180E                     u1931:
  6121  00180E  EF37  F00C         	goto	l2266
  6122  001812                     u1930:
  6123  001812                     
  6124                           ;io.c: 20:         pin -=8;
  6125  001812  0EF8               	movlw	248
  6126  001814  2601               	addwf	digitalWrite@pin^0,f,c
  6127  001816  0EFF               	movlw	255
  6128  001818  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  6129                           
  6130                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  6131  00181A  5003               	movf	digitalWrite@value^0,w,c
  6132  00181C  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  6133  00181E  B4D8               	btfsc	status,2,c
  6134  001820  EF14  F00C         	goto	u1941
  6135  001824  EF16  F00C         	goto	u1940
  6136  001828                     u1941:
  6137  001828  EF26  F00C         	goto	l2264
  6138  00182C                     u1940:
  6139  00182C  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6140  001830  0E01               	movlw	1
  6141  001832  6E06               	movwf	(??_digitalWrite+1)^0,c
  6142  001834  2A05               	incf	??_digitalWrite^0,f,c
  6143  001836  EF1F  F00C         	goto	u1954
  6144  00183A                     u1955:
  6145  00183A  90D8               	bcf	status,0,c
  6146  00183C  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6147  00183E                     u1954:
  6148  00183E  2E05               	decfsz	??_digitalWrite^0,f,c
  6149  001840  EF1D  F00C         	goto	u1955
  6150  001844  5006               	movf	(??_digitalWrite+1)^0,w,c
  6151  001846  1281               	iorwf	129,f,c	;volatile
  6152  001848  EFE9  F00C         	goto	l276
  6153  00184C                     l2264:
  6154  00184C  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6155  001850  0E01               	movlw	1
  6156  001852  6E06               	movwf	(??_digitalWrite+1)^0,c
  6157  001854  2A05               	incf	??_digitalWrite^0,f,c
  6158  001856  EF2F  F00C         	goto	u1964
  6159  00185A                     u1965:
  6160  00185A  90D8               	bcf	status,0,c
  6161  00185C  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6162  00185E                     u1964:
  6163  00185E  2E05               	decfsz	??_digitalWrite^0,f,c
  6164  001860  EF2D  F00C         	goto	u1965
  6165  001864  5006               	movf	(??_digitalWrite+1)^0,w,c
  6166  001866  0AFF               	xorlw	255
  6167  001868  1681               	andwf	129,f,c	;volatile
  6168  00186A  EFE9  F00C         	goto	l276
  6169  00186E                     l2266:
  6170  00186E  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  6171  001870  EF45  F00C         	goto	u1970
  6172  001874  5002               	movf	(digitalWrite@pin+1)^0,w,c
  6173  001876  E107               	bnz	u1971
  6174  001878  0E18               	movlw	24
  6175  00187A  5C01               	subwf	digitalWrite@pin^0,w,c
  6176  00187C  B0D8               	btfsc	status,0,c
  6177  00187E  EF43  F00C         	goto	u1971
  6178  001882  EF45  F00C         	goto	u1970
  6179  001886                     u1971:
  6180  001886  EF73  F00C         	goto	l2274
  6181  00188A                     u1970:
  6182  00188A                     
  6183                           ;io.c: 24:         pin -=16;
  6184  00188A  0EF0               	movlw	240
  6185  00188C  2601               	addwf	digitalWrite@pin^0,f,c
  6186  00188E  0EFF               	movlw	255
  6187  001890  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  6188                           
  6189                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  6190  001892  5003               	movf	digitalWrite@value^0,w,c
  6191  001894  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  6192  001896  B4D8               	btfsc	status,2,c
  6193  001898  EF50  F00C         	goto	u1981
  6194  00189C  EF52  F00C         	goto	u1980
  6195  0018A0                     u1981:
  6196  0018A0  EF62  F00C         	goto	l2272
  6197  0018A4                     u1980:
  6198  0018A4  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6199  0018A8  0E01               	movlw	1
  6200  0018AA  6E06               	movwf	(??_digitalWrite+1)^0,c
  6201  0018AC  2A05               	incf	??_digitalWrite^0,f,c
  6202  0018AE  EF5B  F00C         	goto	u1994
  6203  0018B2                     u1995:
  6204  0018B2  90D8               	bcf	status,0,c
  6205  0018B4  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6206  0018B6                     u1994:
  6207  0018B6  2E05               	decfsz	??_digitalWrite^0,f,c
  6208  0018B8  EF59  F00C         	goto	u1995
  6209  0018BC  5006               	movf	(??_digitalWrite+1)^0,w,c
  6210  0018BE  1282               	iorwf	130,f,c	;volatile
  6211  0018C0  EFE9  F00C         	goto	l276
  6212  0018C4                     l2272:
  6213  0018C4  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6214  0018C8  0E01               	movlw	1
  6215  0018CA  6E06               	movwf	(??_digitalWrite+1)^0,c
  6216  0018CC  2A05               	incf	??_digitalWrite^0,f,c
  6217  0018CE  EF6B  F00C         	goto	u2004
  6218  0018D2                     u2005:
  6219  0018D2  90D8               	bcf	status,0,c
  6220  0018D4  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6221  0018D6                     u2004:
  6222  0018D6  2E05               	decfsz	??_digitalWrite^0,f,c
  6223  0018D8  EF69  F00C         	goto	u2005
  6224  0018DC  5006               	movf	(??_digitalWrite+1)^0,w,c
  6225  0018DE  0AFF               	xorlw	255
  6226  0018E0  1682               	andwf	130,f,c	;volatile
  6227  0018E2  EFE9  F00C         	goto	l276
  6228  0018E6                     l2274:
  6229  0018E6  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  6230  0018E8  EF81  F00C         	goto	u2010
  6231  0018EC  5002               	movf	(digitalWrite@pin+1)^0,w,c
  6232  0018EE  E107               	bnz	u2011
  6233  0018F0  0E20               	movlw	32
  6234  0018F2  5C01               	subwf	digitalWrite@pin^0,w,c
  6235  0018F4  B0D8               	btfsc	status,0,c
  6236  0018F6  EF7F  F00C         	goto	u2011
  6237  0018FA  EF81  F00C         	goto	u2010
  6238  0018FE                     u2011:
  6239  0018FE  EFAF  F00C         	goto	l2282
  6240  001902                     u2010:
  6241  001902                     
  6242                           ;io.c: 28:         pin -=24;
  6243  001902  0EE8               	movlw	232
  6244  001904  2601               	addwf	digitalWrite@pin^0,f,c
  6245  001906  0EFF               	movlw	255
  6246  001908  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  6247                           
  6248                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  6249  00190A  5003               	movf	digitalWrite@value^0,w,c
  6250  00190C  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  6251  00190E  B4D8               	btfsc	status,2,c
  6252  001910  EF8C  F00C         	goto	u2021
  6253  001914  EF8E  F00C         	goto	u2020
  6254  001918                     u2021:
  6255  001918  EF9E  F00C         	goto	l2280
  6256  00191C                     u2020:
  6257  00191C  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6258  001920  0E01               	movlw	1
  6259  001922  6E06               	movwf	(??_digitalWrite+1)^0,c
  6260  001924  2A05               	incf	??_digitalWrite^0,f,c
  6261  001926  EF97  F00C         	goto	u2034
  6262  00192A                     u2035:
  6263  00192A  90D8               	bcf	status,0,c
  6264  00192C  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6265  00192E                     u2034:
  6266  00192E  2E05               	decfsz	??_digitalWrite^0,f,c
  6267  001930  EF95  F00C         	goto	u2035
  6268  001934  5006               	movf	(??_digitalWrite+1)^0,w,c
  6269  001936  1283               	iorwf	131,f,c	;volatile
  6270  001938  EFE9  F00C         	goto	l276
  6271  00193C                     l2280:
  6272  00193C  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6273  001940  0E01               	movlw	1
  6274  001942  6E06               	movwf	(??_digitalWrite+1)^0,c
  6275  001944  2A05               	incf	??_digitalWrite^0,f,c
  6276  001946  EFA7  F00C         	goto	u2044
  6277  00194A                     u2045:
  6278  00194A  90D8               	bcf	status,0,c
  6279  00194C  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6280  00194E                     u2044:
  6281  00194E  2E05               	decfsz	??_digitalWrite^0,f,c
  6282  001950  EFA5  F00C         	goto	u2045
  6283  001954  5006               	movf	(??_digitalWrite+1)^0,w,c
  6284  001956  0AFF               	xorlw	255
  6285  001958  1683               	andwf	131,f,c	;volatile
  6286  00195A  EFE9  F00C         	goto	l276
  6287  00195E                     l2282:
  6288  00195E  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  6289  001960  EFBD  F00C         	goto	u2050
  6290  001964  5002               	movf	(digitalWrite@pin+1)^0,w,c
  6291  001966  E107               	bnz	u2051
  6292  001968  0E28               	movlw	40
  6293  00196A  5C01               	subwf	digitalWrite@pin^0,w,c
  6294  00196C  B0D8               	btfsc	status,0,c
  6295  00196E  EFBB  F00C         	goto	u2051
  6296  001972  EFBD  F00C         	goto	u2050
  6297  001976                     u2051:
  6298  001976  EFE9  F00C         	goto	l276
  6299  00197A                     u2050:
  6300  00197A                     
  6301                           ;io.c: 32:         pin -=32;
  6302  00197A  0EE0               	movlw	224
  6303  00197C  2601               	addwf	digitalWrite@pin^0,f,c
  6304  00197E  0EFF               	movlw	255
  6305  001980  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  6306                           
  6307                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  6308  001982  5003               	movf	digitalWrite@value^0,w,c
  6309  001984  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  6310  001986  B4D8               	btfsc	status,2,c
  6311  001988  EFC8  F00C         	goto	u2061
  6312  00198C  EFCA  F00C         	goto	u2060
  6313  001990                     u2061:
  6314  001990  EFDA  F00C         	goto	l2288
  6315  001994                     u2060:
  6316  001994  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6317  001998  0E01               	movlw	1
  6318  00199A  6E06               	movwf	(??_digitalWrite+1)^0,c
  6319  00199C  2A05               	incf	??_digitalWrite^0,f,c
  6320  00199E  EFD3  F00C         	goto	u2074
  6321  0019A2                     u2075:
  6322  0019A2  90D8               	bcf	status,0,c
  6323  0019A4  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6324  0019A6                     u2074:
  6325  0019A6  2E05               	decfsz	??_digitalWrite^0,f,c
  6326  0019A8  EFD1  F00C         	goto	u2075
  6327  0019AC  5006               	movf	(??_digitalWrite+1)^0,w,c
  6328  0019AE  1284               	iorwf	132,f,c	;volatile
  6329  0019B0  EFE9  F00C         	goto	l276
  6330  0019B4                     l2288:
  6331  0019B4  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6332  0019B8  0E01               	movlw	1
  6333  0019BA  6E06               	movwf	(??_digitalWrite+1)^0,c
  6334  0019BC  2A05               	incf	??_digitalWrite^0,f,c
  6335  0019BE  EFE3  F00C         	goto	u2084
  6336  0019C2                     u2085:
  6337  0019C2  90D8               	bcf	status,0,c
  6338  0019C4  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6339  0019C6                     u2084:
  6340  0019C6  2E05               	decfsz	??_digitalWrite^0,f,c
  6341  0019C8  EFE1  F00C         	goto	u2085
  6342  0019CC  5006               	movf	(??_digitalWrite+1)^0,w,c
  6343  0019CE  0AFF               	xorlw	255
  6344  0019D0  1684               	andwf	132,f,c	;volatile
  6345  0019D2                     l276:
  6346  0019D2  0012               	return		;funcret
  6347  0019D4                     __end_of_digitalWrite:
  6348                           	callstack 0
  6349                           
  6350 ;; *************** function _digitalRead *****************
  6351 ;; Defined at:
  6352 ;;		line 39 in file "io.c"
  6353 ;; Parameters:    Size  Location     Type
  6354 ;;  pin             2    0[COMRAM] int 
  6355 ;; Auto vars:     Size  Location     Type
  6356 ;;		None
  6357 ;; Return value:  Size  Location     Type
  6358 ;;                  2    0[COMRAM] int 
  6359 ;; Registers used:
  6360 ;;		wreg, status,2, status,0
  6361 ;; Tracked objects:
  6362 ;;		On entry : 0/0
  6363 ;;		On exit  : 0/0
  6364 ;;		Unchanged: 0/0
  6365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6366 ;;      Params:         2       0       0       0       0       0       0
  6367 ;;      Locals:         0       0       0       0       0       0       0
  6368 ;;      Temps:          3       0       0       0       0       0       0
  6369 ;;      Totals:         5       0       0       0       0       0       0
  6370 ;;Total ram usage:        5 bytes
  6371 ;; Hardware stack levels used: 1
  6372 ;; This function calls:
  6373 ;;		Nothing
  6374 ;; This function is called by:
  6375 ;;		_kpDebounce
  6376 ;; This function uses a non-reentrant model
  6377 ;;
  6378                           
  6379                           	psect	text36
  6380  001F82                     __ptext36:
  6381                           	callstack 0
  6382  001F82                     _digitalRead:
  6383                           	callstack 29
  6384  001F82                     
  6385                           ;io.c: 40:     if(pin <8){
  6386  001F82  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  6387  001F84  EFCF  F00F         	goto	u2340
  6388  001F88  5002               	movf	(digitalRead@pin+1)^0,w,c
  6389  001F8A  E107               	bnz	u2341
  6390  001F8C  0E08               	movlw	8
  6391  001F8E  5C01               	subwf	digitalRead@pin^0,w,c
  6392  001F90  B0D8               	btfsc	status,0,c
  6393  001F92  EFCD  F00F         	goto	u2341
  6394  001F96  EFCF  F00F         	goto	u2340
  6395  001F9A                     u2341:
  6396  001F9A  EFE3  F00F         	goto	l2404
  6397  001F9E                     u2340:
  6398  001F9E                     
  6399                           ;io.c: 41:         return ((PORTA) & (1<<(pin)));
  6400  001F9E  C001  F003         	movff	digitalRead@pin,??_digitalRead
  6401  001FA2  0E01               	movlw	1
  6402  001FA4  6E04               	movwf	(??_digitalRead+1)^0,c
  6403  001FA6  2A03               	incf	??_digitalRead^0,f,c
  6404  001FA8  EFD8  F00F         	goto	u2354
  6405  001FAC                     u2355:
  6406  001FAC  90D8               	bcf	status,0,c
  6407  001FAE  3604               	rlcf	(??_digitalRead+1)^0,f,c
  6408  001FB0                     u2354:
  6409  001FB0  2E03               	decfsz	??_digitalRead^0,f,c
  6410  001FB2  EFD6  F00F         	goto	u2355
  6411  001FB6  5004               	movf	(??_digitalRead+1)^0,w,c
  6412  001FB8  1480               	andwf	128,w,c	;volatile
  6413  001FBA  6E05               	movwf	(??_digitalRead+2)^0,c
  6414  001FBC  5005               	movf	(??_digitalRead+2)^0,w,c
  6415  001FBE  6E01               	movwf	?_digitalRead^0,c
  6416  001FC0  6A02               	clrf	(?_digitalRead+1)^0,c
  6417  001FC2  EF75  F010         	goto	l280
  6418  001FC6                     l2404:
  6419  001FC6  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  6420  001FC8  EFF1  F00F         	goto	u2360
  6421  001FCC  5002               	movf	(digitalRead@pin+1)^0,w,c
  6422  001FCE  E107               	bnz	u2361
  6423  001FD0  0E10               	movlw	16
  6424  001FD2  5C01               	subwf	digitalRead@pin^0,w,c
  6425  001FD4  B0D8               	btfsc	status,0,c
  6426  001FD6  EFEF  F00F         	goto	u2361
  6427  001FDA  EFF1  F00F         	goto	u2360
  6428  001FDE                     u2361:
  6429  001FDE  EF07  F010         	goto	l2412
  6430  001FE2                     u2360:
  6431  001FE2                     
  6432                           ;io.c: 43:         return ((PORTB) & (1<<(pin-8)));
  6433  001FE2  C001  F003         	movff	digitalRead@pin,??_digitalRead
  6434  001FE6  0EF8               	movlw	-8
  6435  001FE8  2603               	addwf	??_digitalRead^0,f,c
  6436  001FEA  0E01               	movlw	1
  6437  001FEC  6E04               	movwf	(??_digitalRead+1)^0,c
  6438  001FEE  2A03               	incf	??_digitalRead^0,f,c
  6439  001FF0  EFFC  F00F         	goto	u2374
  6440  001FF4                     u2375:
  6441  001FF4  90D8               	bcf	status,0,c
  6442  001FF6  3604               	rlcf	(??_digitalRead+1)^0,f,c
  6443  001FF8                     u2374:
  6444  001FF8  2E03               	decfsz	??_digitalRead^0,f,c
  6445  001FFA  EFFA  F00F         	goto	u2375
  6446  001FFE  5004               	movf	(??_digitalRead+1)^0,w,c
  6447  002000  1481               	andwf	129,w,c	;volatile
  6448  002002  6E05               	movwf	(??_digitalRead+2)^0,c
  6449  002004  5005               	movf	(??_digitalRead+2)^0,w,c
  6450  002006  6E01               	movwf	?_digitalRead^0,c
  6451  002008  6A02               	clrf	(?_digitalRead+1)^0,c
  6452  00200A  EF75  F010         	goto	l280
  6453  00200E                     l2412:
  6454  00200E  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  6455  002010  EF15  F010         	goto	u2380
  6456  002014  5002               	movf	(digitalRead@pin+1)^0,w,c
  6457  002016  E107               	bnz	u2381
  6458  002018  0E18               	movlw	24
  6459  00201A  5C01               	subwf	digitalRead@pin^0,w,c
  6460  00201C  B0D8               	btfsc	status,0,c
  6461  00201E  EF13  F010         	goto	u2381
  6462  002022  EF15  F010         	goto	u2380
  6463  002026                     u2381:
  6464  002026  EF2B  F010         	goto	l2420
  6465  00202A                     u2380:
  6466  00202A                     
  6467                           ;io.c: 45:         return ((PORTC) & (1<<(pin-16)));
  6468  00202A  C001  F003         	movff	digitalRead@pin,??_digitalRead
  6469  00202E  0EF0               	movlw	-16
  6470  002030  2603               	addwf	??_digitalRead^0,f,c
  6471  002032  0E01               	movlw	1
  6472  002034  6E04               	movwf	(??_digitalRead+1)^0,c
  6473  002036  2A03               	incf	??_digitalRead^0,f,c
  6474  002038  EF20  F010         	goto	u2394
  6475  00203C                     u2395:
  6476  00203C  90D8               	bcf	status,0,c
  6477  00203E  3604               	rlcf	(??_digitalRead+1)^0,f,c
  6478  002040                     u2394:
  6479  002040  2E03               	decfsz	??_digitalRead^0,f,c
  6480  002042  EF1E  F010         	goto	u2395
  6481  002046  5004               	movf	(??_digitalRead+1)^0,w,c
  6482  002048  1482               	andwf	130,w,c	;volatile
  6483  00204A  6E05               	movwf	(??_digitalRead+2)^0,c
  6484  00204C  5005               	movf	(??_digitalRead+2)^0,w,c
  6485  00204E  6E01               	movwf	?_digitalRead^0,c
  6486  002050  6A02               	clrf	(?_digitalRead+1)^0,c
  6487  002052  EF75  F010         	goto	l280
  6488  002056                     l2420:
  6489  002056  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  6490  002058  EF39  F010         	goto	u2400
  6491  00205C  5002               	movf	(digitalRead@pin+1)^0,w,c
  6492  00205E  E107               	bnz	u2401
  6493  002060  0E20               	movlw	32
  6494  002062  5C01               	subwf	digitalRead@pin^0,w,c
  6495  002064  B0D8               	btfsc	status,0,c
  6496  002066  EF37  F010         	goto	u2401
  6497  00206A  EF39  F010         	goto	u2400
  6498  00206E                     u2401:
  6499  00206E  EF4F  F010         	goto	l2428
  6500  002072                     u2400:
  6501  002072                     
  6502                           ;io.c: 47:         return ((PORTD) & (1<<(pin-24)));
  6503  002072  C001  F003         	movff	digitalRead@pin,??_digitalRead
  6504  002076  0EE8               	movlw	-24
  6505  002078  2603               	addwf	??_digitalRead^0,f,c
  6506  00207A  0E01               	movlw	1
  6507  00207C  6E04               	movwf	(??_digitalRead+1)^0,c
  6508  00207E  2A03               	incf	??_digitalRead^0,f,c
  6509  002080  EF44  F010         	goto	u2414
  6510  002084                     u2415:
  6511  002084  90D8               	bcf	status,0,c
  6512  002086  3604               	rlcf	(??_digitalRead+1)^0,f,c
  6513  002088                     u2414:
  6514  002088  2E03               	decfsz	??_digitalRead^0,f,c
  6515  00208A  EF42  F010         	goto	u2415
  6516  00208E  5004               	movf	(??_digitalRead+1)^0,w,c
  6517  002090  1483               	andwf	131,w,c	;volatile
  6518  002092  6E05               	movwf	(??_digitalRead+2)^0,c
  6519  002094  5005               	movf	(??_digitalRead+2)^0,w,c
  6520  002096  6E01               	movwf	?_digitalRead^0,c
  6521  002098  6A02               	clrf	(?_digitalRead+1)^0,c
  6522  00209A  EF75  F010         	goto	l280
  6523  00209E                     l2428:
  6524  00209E  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  6525  0020A0  EF5D  F010         	goto	u2420
  6526  0020A4  5002               	movf	(digitalRead@pin+1)^0,w,c
  6527  0020A6  E107               	bnz	u2421
  6528  0020A8  0E28               	movlw	40
  6529  0020AA  5C01               	subwf	digitalRead@pin^0,w,c
  6530  0020AC  B0D8               	btfsc	status,0,c
  6531  0020AE  EF5B  F010         	goto	u2421
  6532  0020B2  EF5D  F010         	goto	u2420
  6533  0020B6                     u2421:
  6534  0020B6  EF73  F010         	goto	l285
  6535  0020BA                     u2420:
  6536  0020BA                     
  6537                           ;io.c: 49:         return ((PORTE) & (1<<(pin-32)));
  6538  0020BA  C001  F003         	movff	digitalRead@pin,??_digitalRead
  6539  0020BE  0EE0               	movlw	-32
  6540  0020C0  2603               	addwf	??_digitalRead^0,f,c
  6541  0020C2  0E01               	movlw	1
  6542  0020C4  6E04               	movwf	(??_digitalRead+1)^0,c
  6543  0020C6  2A03               	incf	??_digitalRead^0,f,c
  6544  0020C8  EF68  F010         	goto	u2434
  6545  0020CC                     u2435:
  6546  0020CC  90D8               	bcf	status,0,c
  6547  0020CE  3604               	rlcf	(??_digitalRead+1)^0,f,c
  6548  0020D0                     u2434:
  6549  0020D0  2E03               	decfsz	??_digitalRead^0,f,c
  6550  0020D2  EF66  F010         	goto	u2435
  6551  0020D6  5004               	movf	(??_digitalRead+1)^0,w,c
  6552  0020D8  1484               	andwf	132,w,c	;volatile
  6553  0020DA  6E05               	movwf	(??_digitalRead+2)^0,c
  6554  0020DC  5005               	movf	(??_digitalRead+2)^0,w,c
  6555  0020DE  6E01               	movwf	?_digitalRead^0,c
  6556  0020E0  6A02               	clrf	(?_digitalRead+1)^0,c
  6557  0020E2  EF75  F010         	goto	l280
  6558  0020E6                     l285:
  6559  0020E6                     
  6560                           ;io.c: 51:     return -1;
  6561  0020E6  6801               	setf	?_digitalRead^0,c
  6562  0020E8  6802               	setf	(?_digitalRead+1)^0,c
  6563  0020EA                     l280:
  6564  0020EA  0012               	return		;funcret
  6565  0020EC                     __end_of_digitalRead:
  6566                           	callstack 0
  6567                           
  6568 ;; *************** function _atraso_ms *****************
  6569 ;; Defined at:
  6570 ;;		line 2 in file "atraso.c"
  6571 ;; Parameters:    Size  Location     Type
  6572 ;;  num             2    0[COMRAM] unsigned int 
  6573 ;; Auto vars:     Size  Location     Type
  6574 ;;  i               2    2[COMRAM] int 
  6575 ;;  k               1    5[COMRAM] volatile unsigned char 
  6576 ;;  j               1    4[COMRAM] volatile unsigned char 
  6577 ;; Return value:  Size  Location     Type
  6578 ;;                  1    wreg      void 
  6579 ;; Registers used:
  6580 ;;		wreg, status,2, status,0
  6581 ;; Tracked objects:
  6582 ;;		On entry : 0/0
  6583 ;;		On exit  : 0/0
  6584 ;;		Unchanged: 0/0
  6585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6586 ;;      Params:         2       0       0       0       0       0       0
  6587 ;;      Locals:         4       0       0       0       0       0       0
  6588 ;;      Temps:          0       0       0       0       0       0       0
  6589 ;;      Totals:         6       0       0       0       0       0       0
  6590 ;;Total ram usage:        6 bytes
  6591 ;; Hardware stack levels used: 1
  6592 ;; This function calls:
  6593 ;;		Nothing
  6594 ;; This function is called by:
  6595 ;;		_main
  6596 ;; This function uses a non-reentrant model
  6597 ;;
  6598                           
  6599                           	psect	text37
  6600  0026EE                     __ptext37:
  6601                           	callstack 0
  6602  0026EE                     _atraso_ms:
  6603                           	callstack 30
  6604  0026EE                     
  6605                           ;atraso.c: 3:     volatile unsigned char j, k;;atraso.c: 4:     for (int i = 0; i < num;
      +                           i++) {
  6606  0026EE  0E00               	movlw	0
  6607  0026F0  6E04               	movwf	(atraso_ms@i+1)^0,c
  6608  0026F2  0E00               	movlw	0
  6609  0026F4  6E03               	movwf	atraso_ms@i^0,c
  6610  0026F6  EF9D  F013         	goto	l3144
  6611  0026FA                     l3122:
  6612                           
  6613                           ;atraso.c: 5:         for (j = 0; j < 41; j++) {
  6614  0026FA  0E00               	movlw	0
  6615  0026FC  6E05               	movwf	atraso_ms@j^0,c	;volatile
  6616  0026FE                     l3124:
  6617  0026FE  0E28               	movlw	40
  6618  002700  6405               	cpfsgt	atraso_ms@j^0,c	;volatile
  6619  002702  EF85  F013         	goto	u3561
  6620  002706  EF87  F013         	goto	u3560
  6621  00270A                     u3561:
  6622  00270A  EF89  F013         	goto	l3128
  6623  00270E                     u3560:
  6624  00270E  EF9B  F013         	goto	l3142
  6625  002712                     l3128:
  6626                           
  6627                           ;atraso.c: 6:             for (k = 0; k < 3; k++);
  6628  002712  0E00               	movlw	0
  6629  002714  6E06               	movwf	atraso_ms@k^0,c	;volatile
  6630  002716                     l3130:
  6631  002716  0E02               	movlw	2
  6632  002718  6406               	cpfsgt	atraso_ms@k^0,c	;volatile
  6633  00271A  EF91  F013         	goto	u3571
  6634  00271E  EF93  F013         	goto	u3570
  6635  002722                     u3571:
  6636  002722  EF95  F013         	goto	l3134
  6637  002726                     u3570:
  6638  002726  EF98  F013         	goto	l3138
  6639  00272A                     l3134:
  6640  00272A  2A06               	incf	atraso_ms@k^0,f,c	;volatile
  6641  00272C  EF8B  F013         	goto	l3130
  6642  002730                     l3138:
  6643                           
  6644                           ;atraso.c: 7:         }
  6645  002730  2A05               	incf	atraso_ms@j^0,f,c	;volatile
  6646  002732  EF7F  F013         	goto	l3124
  6647  002736                     l3142:
  6648                           
  6649                           ;atraso.c: 9:     }
  6650  002736  4A03               	infsnz	atraso_ms@i^0,f,c
  6651  002738  2A04               	incf	(atraso_ms@i+1)^0,f,c
  6652  00273A                     l3144:
  6653  00273A  5001               	movf	atraso_ms@num^0,w,c
  6654  00273C  5C03               	subwf	atraso_ms@i^0,w,c
  6655  00273E  5002               	movf	(atraso_ms@num+1)^0,w,c
  6656  002740  5804               	subwfb	(atraso_ms@i+1)^0,w,c
  6657  002742  A0D8               	btfss	status,0,c
  6658  002744  EFA6  F013         	goto	u3581
  6659  002748  EFA8  F013         	goto	u3580
  6660  00274C                     u3581:
  6661  00274C  EF7D  F013         	goto	l3122
  6662  002750                     u3580:
  6663  002750  0012               	return		;funcret
  6664  002752                     __end_of_atraso_ms:
  6665                           	callstack 0
  6666                           
  6667 ;; *************** function _adcInit *****************
  6668 ;; Defined at:
  6669 ;;		line 25 in file "adc.c"
  6670 ;; Parameters:    Size  Location     Type
  6671 ;;		None
  6672 ;; Auto vars:     Size  Location     Type
  6673 ;;		None
  6674 ;; Return value:  Size  Location     Type
  6675 ;;                  1    wreg      void 
  6676 ;; Registers used:
  6677 ;;		wreg, status,2, status,0, cstack
  6678 ;; Tracked objects:
  6679 ;;		On entry : 0/0
  6680 ;;		On exit  : 0/0
  6681 ;;		Unchanged: 0/0
  6682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6683 ;;      Params:         0       0       0       0       0       0       0
  6684 ;;      Locals:         0       0       0       0       0       0       0
  6685 ;;      Temps:          0       0       0       0       0       0       0
  6686 ;;      Totals:         0       0       0       0       0       0       0
  6687 ;;Total ram usage:        0 bytes
  6688 ;; Hardware stack levels used: 1
  6689 ;; Hardware stack levels required when called: 1
  6690 ;; This function calls:
  6691 ;;		_pinMode
  6692 ;; This function is called by:
  6693 ;;		_main
  6694 ;; This function uses a non-reentrant model
  6695 ;;
  6696                           
  6697                           	psect	text38
  6698  0028F0                     __ptext38:
  6699                           	callstack 0
  6700  0028F0                     _adcInit:
  6701                           	callstack 29
  6702  0028F0                     
  6703                           ;adc.c: 27:     pinMode(PIN_A0, 1);
  6704  0028F0  0E00               	movlw	0
  6705  0028F2  6E02               	movwf	(pinMode@pin+1)^0,c
  6706  0028F4  0E00               	movlw	0
  6707  0028F6  6E01               	movwf	pinMode@pin^0,c
  6708  0028F8  0E00               	movlw	0
  6709  0028FA  6E04               	movwf	(pinMode@type+1)^0,c
  6710  0028FC  0E01               	movlw	1
  6711  0028FE  6E03               	movwf	pinMode@type^0,c
  6712  002900  ECEA  F00C         	call	_pinMode	;wreg free
  6713                           
  6714                           ;adc.c: 28:     pinMode(PIN_A1, 1);
  6715  002904  0E00               	movlw	0
  6716  002906  6E02               	movwf	(pinMode@pin+1)^0,c
  6717  002908  0E01               	movlw	1
  6718  00290A  6E01               	movwf	pinMode@pin^0,c
  6719  00290C  0E00               	movlw	0
  6720  00290E  6E04               	movwf	(pinMode@type+1)^0,c
  6721  002910  0E01               	movlw	1
  6722  002912  6E03               	movwf	pinMode@type^0,c
  6723  002914  ECEA  F00C         	call	_pinMode	;wreg free
  6724                           
  6725                           ;adc.c: 29:     pinMode(PIN_A2, 1);
  6726  002918  0E00               	movlw	0
  6727  00291A  6E02               	movwf	(pinMode@pin+1)^0,c
  6728  00291C  0E02               	movlw	2
  6729  00291E  6E01               	movwf	pinMode@pin^0,c
  6730  002920  0E00               	movlw	0
  6731  002922  6E04               	movwf	(pinMode@type+1)^0,c
  6732  002924  0E01               	movlw	1
  6733  002926  6E03               	movwf	pinMode@type^0,c
  6734  002928  ECEA  F00C         	call	_pinMode	;wreg free
  6735  00292C                     
  6736                           ;adc.c: 31:     ((ADCON0) |= (1<<(0)));
  6737  00292C  80C2               	bsf	194,0,c	;volatile
  6738  00292E                     
  6739                           ;adc.c: 33:     ADCON1 = 0b00001100;
  6740  00292E  0E0C               	movlw	12
  6741  002930  6EC1               	movwf	193,c	;volatile
  6742  002932                     
  6743                           ;adc.c: 34:     ADCON2 = 0b10101010;
  6744  002932  0EAA               	movlw	170
  6745  002934  6EC0               	movwf	192,c	;volatile
  6746  002936  0012               	return		;funcret
  6747  002938                     __end_of_adcInit:
  6748                           	callstack 0
  6749                           
  6750 ;; *************** function _pinMode *****************
  6751 ;; Defined at:
  6752 ;;		line 54 in file "io.c"
  6753 ;; Parameters:    Size  Location     Type
  6754 ;;  pin             2    0[COMRAM] int 
  6755 ;;  type            2    2[COMRAM] int 
  6756 ;; Auto vars:     Size  Location     Type
  6757 ;;		None
  6758 ;; Return value:  Size  Location     Type
  6759 ;;                  1    wreg      void 
  6760 ;; Registers used:
  6761 ;;		wreg, status,2, status,0
  6762 ;; Tracked objects:
  6763 ;;		On entry : 0/0
  6764 ;;		On exit  : 0/0
  6765 ;;		Unchanged: 0/0
  6766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6767 ;;      Params:         4       0       0       0       0       0       0
  6768 ;;      Locals:         0       0       0       0       0       0       0
  6769 ;;      Temps:          2       0       0       0       0       0       0
  6770 ;;      Totals:         6       0       0       0       0       0       0
  6771 ;;Total ram usage:        6 bytes
  6772 ;; Hardware stack levels used: 1
  6773 ;; This function calls:
  6774 ;;		Nothing
  6775 ;; This function is called by:
  6776 ;;		_adcInit
  6777 ;;		_kpInit
  6778 ;;		_lcdInit
  6779 ;;		_soInit
  6780 ;; This function uses a non-reentrant model
  6781 ;;
  6782                           
  6783                           	psect	text39
  6784  0019D4                     __ptext39:
  6785                           	callstack 0
  6786  0019D4                     _pinMode:
  6787                           	callstack 28
  6788  0019D4                     
  6789                           ;io.c: 56:     if(pin <8){
  6790  0019D4  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  6791  0019D6  EFF8  F00C         	goto	u2100
  6792  0019DA  5002               	movf	(pinMode@pin+1)^0,w,c
  6793  0019DC  E107               	bnz	u2101
  6794  0019DE  0E08               	movlw	8
  6795  0019E0  5C01               	subwf	pinMode@pin^0,w,c
  6796  0019E2  B0D8               	btfsc	status,0,c
  6797  0019E4  EFF6  F00C         	goto	u2101
  6798  0019E8  EFF8  F00C         	goto	u2100
  6799  0019EC                     u2101:
  6800  0019EC  EF22  F00D         	goto	l2332
  6801  0019F0                     u2100:
  6802  0019F0                     
  6803                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  6804  0019F0  5003               	movf	pinMode@type^0,w,c
  6805  0019F2  1004               	iorwf	(pinMode@type+1)^0,w,c
  6806  0019F4  B4D8               	btfsc	status,2,c
  6807  0019F6  EFFF  F00C         	goto	u2111
  6808  0019FA  EF01  F00D         	goto	u2110
  6809  0019FE                     u2111:
  6810  0019FE  EF11  F00D         	goto	l2330
  6811  001A02                     u2110:
  6812  001A02  C001  F005         	movff	pinMode@pin,??_pinMode
  6813  001A06  0E01               	movlw	1
  6814  001A08  6E06               	movwf	(??_pinMode+1)^0,c
  6815  001A0A  2A05               	incf	??_pinMode^0,f,c
  6816  001A0C  EF0A  F00D         	goto	u2124
  6817  001A10                     u2125:
  6818  001A10  90D8               	bcf	status,0,c
  6819  001A12  3606               	rlcf	(??_pinMode+1)^0,f,c
  6820  001A14                     u2124:
  6821  001A14  2E05               	decfsz	??_pinMode^0,f,c
  6822  001A16  EF08  F00D         	goto	u2125
  6823  001A1A  5006               	movf	(??_pinMode+1)^0,w,c
  6824  001A1C  1292               	iorwf	146,f,c	;volatile
  6825  001A1E  EF10  F00E         	goto	l310
  6826  001A22                     l2330:
  6827  001A22  C001  F005         	movff	pinMode@pin,??_pinMode
  6828  001A26  0E01               	movlw	1
  6829  001A28  6E06               	movwf	(??_pinMode+1)^0,c
  6830  001A2A  2A05               	incf	??_pinMode^0,f,c
  6831  001A2C  EF1A  F00D         	goto	u2134
  6832  001A30                     u2135:
  6833  001A30  90D8               	bcf	status,0,c
  6834  001A32  3606               	rlcf	(??_pinMode+1)^0,f,c
  6835  001A34                     u2134:
  6836  001A34  2E05               	decfsz	??_pinMode^0,f,c
  6837  001A36  EF18  F00D         	goto	u2135
  6838  001A3A  5006               	movf	(??_pinMode+1)^0,w,c
  6839  001A3C  0AFF               	xorlw	255
  6840  001A3E  1692               	andwf	146,f,c	;volatile
  6841  001A40  EF10  F00E         	goto	l310
  6842  001A44                     l2332:
  6843  001A44  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  6844  001A46  EF30  F00D         	goto	u2140
  6845  001A4A  5002               	movf	(pinMode@pin+1)^0,w,c
  6846  001A4C  E107               	bnz	u2141
  6847  001A4E  0E10               	movlw	16
  6848  001A50  5C01               	subwf	pinMode@pin^0,w,c
  6849  001A52  B0D8               	btfsc	status,0,c
  6850  001A54  EF2E  F00D         	goto	u2141
  6851  001A58  EF30  F00D         	goto	u2140
  6852  001A5C                     u2141:
  6853  001A5C  EF5E  F00D         	goto	l2340
  6854  001A60                     u2140:
  6855  001A60                     
  6856                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  6857  001A60  5003               	movf	pinMode@type^0,w,c
  6858  001A62  1004               	iorwf	(pinMode@type+1)^0,w,c
  6859  001A64  B4D8               	btfsc	status,2,c
  6860  001A66  EF37  F00D         	goto	u2151
  6861  001A6A  EF39  F00D         	goto	u2150
  6862  001A6E                     u2151:
  6863  001A6E  EF4B  F00D         	goto	l2338
  6864  001A72                     u2150:
  6865  001A72  C001  F005         	movff	pinMode@pin,??_pinMode
  6866  001A76  0EF8               	movlw	-8
  6867  001A78  2605               	addwf	??_pinMode^0,f,c
  6868  001A7A  0E01               	movlw	1
  6869  001A7C  6E06               	movwf	(??_pinMode+1)^0,c
  6870  001A7E  2A05               	incf	??_pinMode^0,f,c
  6871  001A80  EF44  F00D         	goto	u2164
  6872  001A84                     u2165:
  6873  001A84  90D8               	bcf	status,0,c
  6874  001A86  3606               	rlcf	(??_pinMode+1)^0,f,c
  6875  001A88                     u2164:
  6876  001A88  2E05               	decfsz	??_pinMode^0,f,c
  6877  001A8A  EF42  F00D         	goto	u2165
  6878  001A8E  5006               	movf	(??_pinMode+1)^0,w,c
  6879  001A90  1293               	iorwf	147,f,c	;volatile
  6880  001A92  EF10  F00E         	goto	l310
  6881  001A96                     l2338:
  6882  001A96  C001  F005         	movff	pinMode@pin,??_pinMode
  6883  001A9A  0EF8               	movlw	-8
  6884  001A9C  2605               	addwf	??_pinMode^0,f,c
  6885  001A9E  0E01               	movlw	1
  6886  001AA0  6E06               	movwf	(??_pinMode+1)^0,c
  6887  001AA2  2A05               	incf	??_pinMode^0,f,c
  6888  001AA4  EF56  F00D         	goto	u2174
  6889  001AA8                     u2175:
  6890  001AA8  90D8               	bcf	status,0,c
  6891  001AAA  3606               	rlcf	(??_pinMode+1)^0,f,c
  6892  001AAC                     u2174:
  6893  001AAC  2E05               	decfsz	??_pinMode^0,f,c
  6894  001AAE  EF54  F00D         	goto	u2175
  6895  001AB2  5006               	movf	(??_pinMode+1)^0,w,c
  6896  001AB4  0AFF               	xorlw	255
  6897  001AB6  1693               	andwf	147,f,c	;volatile
  6898  001AB8  EF10  F00E         	goto	l310
  6899  001ABC                     l2340:
  6900  001ABC  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  6901  001ABE  EF6C  F00D         	goto	u2180
  6902  001AC2  5002               	movf	(pinMode@pin+1)^0,w,c
  6903  001AC4  E107               	bnz	u2181
  6904  001AC6  0E18               	movlw	24
  6905  001AC8  5C01               	subwf	pinMode@pin^0,w,c
  6906  001ACA  B0D8               	btfsc	status,0,c
  6907  001ACC  EF6A  F00D         	goto	u2181
  6908  001AD0  EF6C  F00D         	goto	u2180
  6909  001AD4                     u2181:
  6910  001AD4  EF9A  F00D         	goto	l2348
  6911  001AD8                     u2180:
  6912  001AD8                     
  6913                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  6914  001AD8  5003               	movf	pinMode@type^0,w,c
  6915  001ADA  1004               	iorwf	(pinMode@type+1)^0,w,c
  6916  001ADC  B4D8               	btfsc	status,2,c
  6917  001ADE  EF73  F00D         	goto	u2191
  6918  001AE2  EF75  F00D         	goto	u2190
  6919  001AE6                     u2191:
  6920  001AE6  EF87  F00D         	goto	l2346
  6921  001AEA                     u2190:
  6922  001AEA  C001  F005         	movff	pinMode@pin,??_pinMode
  6923  001AEE  0EF0               	movlw	-16
  6924  001AF0  2605               	addwf	??_pinMode^0,f,c
  6925  001AF2  0E01               	movlw	1
  6926  001AF4  6E06               	movwf	(??_pinMode+1)^0,c
  6927  001AF6  2A05               	incf	??_pinMode^0,f,c
  6928  001AF8  EF80  F00D         	goto	u2204
  6929  001AFC                     u2205:
  6930  001AFC  90D8               	bcf	status,0,c
  6931  001AFE  3606               	rlcf	(??_pinMode+1)^0,f,c
  6932  001B00                     u2204:
  6933  001B00  2E05               	decfsz	??_pinMode^0,f,c
  6934  001B02  EF7E  F00D         	goto	u2205
  6935  001B06  5006               	movf	(??_pinMode+1)^0,w,c
  6936  001B08  1294               	iorwf	148,f,c	;volatile
  6937  001B0A  EF10  F00E         	goto	l310
  6938  001B0E                     l2346:
  6939  001B0E  C001  F005         	movff	pinMode@pin,??_pinMode
  6940  001B12  0EF0               	movlw	-16
  6941  001B14  2605               	addwf	??_pinMode^0,f,c
  6942  001B16  0E01               	movlw	1
  6943  001B18  6E06               	movwf	(??_pinMode+1)^0,c
  6944  001B1A  2A05               	incf	??_pinMode^0,f,c
  6945  001B1C  EF92  F00D         	goto	u2214
  6946  001B20                     u2215:
  6947  001B20  90D8               	bcf	status,0,c
  6948  001B22  3606               	rlcf	(??_pinMode+1)^0,f,c
  6949  001B24                     u2214:
  6950  001B24  2E05               	decfsz	??_pinMode^0,f,c
  6951  001B26  EF90  F00D         	goto	u2215
  6952  001B2A  5006               	movf	(??_pinMode+1)^0,w,c
  6953  001B2C  0AFF               	xorlw	255
  6954  001B2E  1694               	andwf	148,f,c	;volatile
  6955  001B30  EF10  F00E         	goto	l310
  6956  001B34                     l2348:
  6957  001B34  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  6958  001B36  EFA8  F00D         	goto	u2220
  6959  001B3A  5002               	movf	(pinMode@pin+1)^0,w,c
  6960  001B3C  E107               	bnz	u2221
  6961  001B3E  0E20               	movlw	32
  6962  001B40  5C01               	subwf	pinMode@pin^0,w,c
  6963  001B42  B0D8               	btfsc	status,0,c
  6964  001B44  EFA6  F00D         	goto	u2221
  6965  001B48  EFA8  F00D         	goto	u2220
  6966  001B4C                     u2221:
  6967  001B4C  EFD6  F00D         	goto	l2356
  6968  001B50                     u2220:
  6969  001B50                     
  6970                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  6971  001B50  5003               	movf	pinMode@type^0,w,c
  6972  001B52  1004               	iorwf	(pinMode@type+1)^0,w,c
  6973  001B54  B4D8               	btfsc	status,2,c
  6974  001B56  EFAF  F00D         	goto	u2231
  6975  001B5A  EFB1  F00D         	goto	u2230
  6976  001B5E                     u2231:
  6977  001B5E  EFC3  F00D         	goto	l2354
  6978  001B62                     u2230:
  6979  001B62  C001  F005         	movff	pinMode@pin,??_pinMode
  6980  001B66  0EE8               	movlw	-24
  6981  001B68  2605               	addwf	??_pinMode^0,f,c
  6982  001B6A  0E01               	movlw	1
  6983  001B6C  6E06               	movwf	(??_pinMode+1)^0,c
  6984  001B6E  2A05               	incf	??_pinMode^0,f,c
  6985  001B70  EFBC  F00D         	goto	u2244
  6986  001B74                     u2245:
  6987  001B74  90D8               	bcf	status,0,c
  6988  001B76  3606               	rlcf	(??_pinMode+1)^0,f,c
  6989  001B78                     u2244:
  6990  001B78  2E05               	decfsz	??_pinMode^0,f,c
  6991  001B7A  EFBA  F00D         	goto	u2245
  6992  001B7E  5006               	movf	(??_pinMode+1)^0,w,c
  6993  001B80  1295               	iorwf	149,f,c	;volatile
  6994  001B82  EF10  F00E         	goto	l310
  6995  001B86                     l2354:
  6996  001B86  C001  F005         	movff	pinMode@pin,??_pinMode
  6997  001B8A  0EE8               	movlw	-24
  6998  001B8C  2605               	addwf	??_pinMode^0,f,c
  6999  001B8E  0E01               	movlw	1
  7000  001B90  6E06               	movwf	(??_pinMode+1)^0,c
  7001  001B92  2A05               	incf	??_pinMode^0,f,c
  7002  001B94  EFCE  F00D         	goto	u2254
  7003  001B98                     u2255:
  7004  001B98  90D8               	bcf	status,0,c
  7005  001B9A  3606               	rlcf	(??_pinMode+1)^0,f,c
  7006  001B9C                     u2254:
  7007  001B9C  2E05               	decfsz	??_pinMode^0,f,c
  7008  001B9E  EFCC  F00D         	goto	u2255
  7009  001BA2  5006               	movf	(??_pinMode+1)^0,w,c
  7010  001BA4  0AFF               	xorlw	255
  7011  001BA6  1695               	andwf	149,f,c	;volatile
  7012  001BA8  EF10  F00E         	goto	l310
  7013  001BAC                     l2356:
  7014  001BAC  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  7015  001BAE  EFE4  F00D         	goto	u2260
  7016  001BB2  5002               	movf	(pinMode@pin+1)^0,w,c
  7017  001BB4  E107               	bnz	u2261
  7018  001BB6  0E28               	movlw	40
  7019  001BB8  5C01               	subwf	pinMode@pin^0,w,c
  7020  001BBA  B0D8               	btfsc	status,0,c
  7021  001BBC  EFE2  F00D         	goto	u2261
  7022  001BC0  EFE4  F00D         	goto	u2260
  7023  001BC4                     u2261:
  7024  001BC4  EF10  F00E         	goto	l310
  7025  001BC8                     u2260:
  7026  001BC8                     
  7027                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  7028  001BC8  5003               	movf	pinMode@type^0,w,c
  7029  001BCA  1004               	iorwf	(pinMode@type+1)^0,w,c
  7030  001BCC  B4D8               	btfsc	status,2,c
  7031  001BCE  EFEB  F00D         	goto	u2271
  7032  001BD2  EFED  F00D         	goto	u2270
  7033  001BD6                     u2271:
  7034  001BD6  EFFF  F00D         	goto	l2362
  7035  001BDA                     u2270:
  7036  001BDA  C001  F005         	movff	pinMode@pin,??_pinMode
  7037  001BDE  0EE0               	movlw	-32
  7038  001BE0  2605               	addwf	??_pinMode^0,f,c
  7039  001BE2  0E01               	movlw	1
  7040  001BE4  6E06               	movwf	(??_pinMode+1)^0,c
  7041  001BE6  2A05               	incf	??_pinMode^0,f,c
  7042  001BE8  EFF8  F00D         	goto	u2284
  7043  001BEC                     u2285:
  7044  001BEC  90D8               	bcf	status,0,c
  7045  001BEE  3606               	rlcf	(??_pinMode+1)^0,f,c
  7046  001BF0                     u2284:
  7047  001BF0  2E05               	decfsz	??_pinMode^0,f,c
  7048  001BF2  EFF6  F00D         	goto	u2285
  7049  001BF6  5006               	movf	(??_pinMode+1)^0,w,c
  7050  001BF8  1296               	iorwf	150,f,c	;volatile
  7051  001BFA  EF10  F00E         	goto	l310
  7052  001BFE                     l2362:
  7053  001BFE  C001  F005         	movff	pinMode@pin,??_pinMode
  7054  001C02  0EE0               	movlw	-32
  7055  001C04  2605               	addwf	??_pinMode^0,f,c
  7056  001C06  0E01               	movlw	1
  7057  001C08  6E06               	movwf	(??_pinMode+1)^0,c
  7058  001C0A  2A05               	incf	??_pinMode^0,f,c
  7059  001C0C  EF0A  F00E         	goto	u2294
  7060  001C10                     u2295:
  7061  001C10  90D8               	bcf	status,0,c
  7062  001C12  3606               	rlcf	(??_pinMode+1)^0,f,c
  7063  001C14                     u2294:
  7064  001C14  2E05               	decfsz	??_pinMode^0,f,c
  7065  001C16  EF08  F00E         	goto	u2295
  7066  001C1A  5006               	movf	(??_pinMode+1)^0,w,c
  7067  001C1C  0AFF               	xorlw	255
  7068  001C1E  1696               	andwf	150,f,c	;volatile
  7069  001C20                     l310:
  7070  001C20  0012               	return		;funcret
  7071  001C22                     __end_of_pinMode:
  7072                           	callstack 0
  7073                           
  7074                           	psect	rparam
  7075  0000                     
  7076                           	psect	idloc
  7077                           
  7078                           ;Config register IDLOC0 @ 0x200000
  7079                           ;	unspecified, using default values
  7080  200000                     	org	2097152
  7081  200000  FF                 	db	255
  7082                           
  7083                           ;Config register IDLOC1 @ 0x200001
  7084                           ;	unspecified, using default values
  7085  200001                     	org	2097153
  7086  200001  FF                 	db	255
  7087                           
  7088                           ;Config register IDLOC2 @ 0x200002
  7089                           ;	unspecified, using default values
  7090  200002                     	org	2097154
  7091  200002  FF                 	db	255
  7092                           
  7093                           ;Config register IDLOC3 @ 0x200003
  7094                           ;	unspecified, using default values
  7095  200003                     	org	2097155
  7096  200003  FF                 	db	255
  7097                           
  7098                           ;Config register IDLOC4 @ 0x200004
  7099                           ;	unspecified, using default values
  7100  200004                     	org	2097156
  7101  200004  FF                 	db	255
  7102                           
  7103                           ;Config register IDLOC5 @ 0x200005
  7104                           ;	unspecified, using default values
  7105  200005                     	org	2097157
  7106  200005  FF                 	db	255
  7107                           
  7108                           ;Config register IDLOC6 @ 0x200006
  7109                           ;	unspecified, using default values
  7110  200006                     	org	2097158
  7111  200006  FF                 	db	255
  7112                           
  7113                           ;Config register IDLOC7 @ 0x200007
  7114                           ;	unspecified, using default values
  7115  200007                     	org	2097159
  7116  200007  FF                 	db	255
  7117                           
  7118                           	psect	config
  7119                           
  7120                           ; Padding undefined space
  7121  300000                     	org	3145728
  7122  300000  FF                 	db	255
  7123                           
  7124                           ;Config register CONFIG1H @ 0x300001
  7125                           ;	unspecified, using default values
  7126                           ;	Oscillator Selection bits
  7127                           ;	OSC = 0x7, unprogrammed default
  7128                           ;	Fail-Safe Clock Monitor Enable bit
  7129                           ;	FCMEN = 0x0, unprogrammed default
  7130                           ;	Internal/External Oscillator Switchover bit
  7131                           ;	IESO = 0x0, unprogrammed default
  7132  300001                     	org	3145729
  7133  300001  07                 	db	7
  7134                           
  7135                           ;Config register CONFIG2L @ 0x300002
  7136                           ;	unspecified, using default values
  7137                           ;	Power-up Timer Enable bit
  7138                           ;	PWRT = 0x1, unprogrammed default
  7139                           ;	Brown-out Reset Enable bits
  7140                           ;	BOREN = 0x3, unprogrammed default
  7141                           ;	Brown Out Reset Voltage bits
  7142                           ;	BORV = 0x3, unprogrammed default
  7143  300002                     	org	3145730
  7144  300002  1F                 	db	31
  7145                           
  7146                           ;Config register CONFIG2H @ 0x300003
  7147                           ;	unspecified, using default values
  7148                           ;	Watchdog Timer Enable bit
  7149                           ;	WDT = 0x1, unprogrammed default
  7150                           ;	Watchdog Timer Postscale Select bits
  7151                           ;	WDTPS = 0xF, unprogrammed default
  7152  300003                     	org	3145731
  7153  300003  1F                 	db	31
  7154                           
  7155                           ; Padding undefined space
  7156  300004                     	org	3145732
  7157  300004  FF                 	db	255
  7158                           
  7159                           ;Config register CONFIG3H @ 0x300005
  7160                           ;	unspecified, using default values
  7161                           ;	CCP2 MUX bit
  7162                           ;	CCP2MX = 0x1, unprogrammed default
  7163                           ;	PORTB A/D Enable bit
  7164                           ;	PBADEN = 0x1, unprogrammed default
  7165                           ;	Low-Power Timer1 Oscillator Enable bit
  7166                           ;	LPT1OSC = 0x0, unprogrammed default
  7167                           ;	MCLR Pin Enable bit
  7168                           ;	MCLRE = 0x1, unprogrammed default
  7169  300005                     	org	3145733
  7170  300005  83                 	db	131
  7171                           
  7172                           ;Config register CONFIG4L @ 0x300006
  7173                           ;	unspecified, using default values
  7174                           ;	Stack Full/Underflow Reset Enable bit
  7175                           ;	STVREN = 0x1, unprogrammed default
  7176                           ;	Single-Supply ICSP Enable bit
  7177                           ;	LVP = 0x1, unprogrammed default
  7178                           ;	Extended Instruction Set Enable bit
  7179                           ;	XINST = 0x0, unprogrammed default
  7180                           ;	Background Debugger Enable bit
  7181                           ;	DEBUG = 0x1, unprogrammed default
  7182  300006                     	org	3145734
  7183  300006  85                 	db	133
  7184                           
  7185                           ; Padding undefined space
  7186  300007                     	org	3145735
  7187  300007  FF                 	db	255
  7188                           
  7189                           ;Config register CONFIG5L @ 0x300008
  7190                           ;	unspecified, using default values
  7191                           ;	Code Protection bit
  7192                           ;	CP0 = 0x1, unprogrammed default
  7193                           ;	Code Protection bit
  7194                           ;	CP1 = 0x1, unprogrammed default
  7195                           ;	Code Protection bit
  7196                           ;	CP2 = 0x1, unprogrammed default
  7197                           ;	Code Protection bit
  7198                           ;	CP3 = 0x1, unprogrammed default
  7199  300008                     	org	3145736
  7200  300008  0F                 	db	15
  7201                           
  7202                           ;Config register CONFIG5H @ 0x300009
  7203                           ;	unspecified, using default values
  7204                           ;	Boot Block Code Protection bit
  7205                           ;	CPB = 0x1, unprogrammed default
  7206                           ;	Data EEPROM Code Protection bit
  7207                           ;	CPD = 0x1, unprogrammed default
  7208  300009                     	org	3145737
  7209  300009  C0                 	db	192
  7210                           
  7211                           ;Config register CONFIG6L @ 0x30000A
  7212                           ;	unspecified, using default values
  7213                           ;	Write Protection bit
  7214                           ;	WRT0 = 0x1, unprogrammed default
  7215                           ;	Write Protection bit
  7216                           ;	WRT1 = 0x1, unprogrammed default
  7217                           ;	Write Protection bit
  7218                           ;	WRT2 = 0x1, unprogrammed default
  7219                           ;	Write Protection bit
  7220                           ;	WRT3 = 0x1, unprogrammed default
  7221  30000A                     	org	3145738
  7222  30000A  0F                 	db	15
  7223                           
  7224                           ;Config register CONFIG6H @ 0x30000B
  7225                           ;	unspecified, using default values
  7226                           ;	Configuration Register Write Protection bit
  7227                           ;	WRTC = 0x1, unprogrammed default
  7228                           ;	Boot Block Write Protection bit
  7229                           ;	WRTB = 0x1, unprogrammed default
  7230                           ;	Data EEPROM Write Protection bit
  7231                           ;	WRTD = 0x1, unprogrammed default
  7232  30000B                     	org	3145739
  7233  30000B  E0                 	db	224
  7234                           
  7235                           ;Config register CONFIG7L @ 0x30000C
  7236                           ;	unspecified, using default values
  7237                           ;	Table Read Protection bit
  7238                           ;	EBTR0 = 0x1, unprogrammed default
  7239                           ;	Table Read Protection bit
  7240                           ;	EBTR1 = 0x1, unprogrammed default
  7241                           ;	Table Read Protection bit
  7242                           ;	EBTR2 = 0x1, unprogrammed default
  7243                           ;	Table Read Protection bit
  7244                           ;	EBTR3 = 0x1, unprogrammed default
  7245  30000C                     	org	3145740
  7246  30000C  0F                 	db	15
  7247                           
  7248                           ;Config register CONFIG7H @ 0x30000D
  7249                           ;	unspecified, using default values
  7250                           ;	Boot Block Table Read Protection bit
  7251                           ;	EBTRB = 0x1, unprogrammed default
  7252  30000D                     	org	3145741
  7253  30000D  40                 	db	64
  7254                           tosu	equ	0xFFF
  7255                           tosh	equ	0xFFE
  7256                           tosl	equ	0xFFD
  7257                           stkptr	equ	0xFFC
  7258                           pclatu	equ	0xFFB
  7259                           pclath	equ	0xFFA
  7260                           pcl	equ	0xFF9
  7261                           tblptru	equ	0xFF8
  7262                           tblptrh	equ	0xFF7
  7263                           tblptrl	equ	0xFF6
  7264                           tablat	equ	0xFF5
  7265                           prodh	equ	0xFF4
  7266                           prodl	equ	0xFF3
  7267                           indf0	equ	0xFEF
  7268                           postinc0	equ	0xFEE
  7269                           postdec0	equ	0xFED
  7270                           preinc0	equ	0xFEC
  7271                           plusw0	equ	0xFEB
  7272                           fsr0h	equ	0xFEA
  7273                           fsr0l	equ	0xFE9
  7274                           wreg	equ	0xFE8
  7275                           indf1	equ	0xFE7
  7276                           postinc1	equ	0xFE6
  7277                           postdec1	equ	0xFE5
  7278                           preinc1	equ	0xFE4
  7279                           plusw1	equ	0xFE3
  7280                           fsr1h	equ	0xFE2
  7281                           fsr1l	equ	0xFE1
  7282                           bsr	equ	0xFE0
  7283                           indf2	equ	0xFDF
  7284                           postinc2	equ	0xFDE
  7285                           postdec2	equ	0xFDD
  7286                           preinc2	equ	0xFDC
  7287                           plusw2	equ	0xFDB
  7288                           fsr2h	equ	0xFDA
  7289                           fsr2l	equ	0xFD9
  7290                           status	equ	0xFD8

Data Sizes:
    Strings     104
    Constant    10
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    108     118
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcdString@msg	PTR unsigned char  size(2) Largest target is 11
		 -> STR_26(CODE[7]), STR_25(CODE[6]), STR_24(CODE[11]), STR_23(CODE[9]), 
		 -> STR_22(CODE[10]), STR_20(CODE[6]), STR_19(CODE[5]), STR_16(CODE[6]), 
		 -> STR_15(CODE[5]), STR_13(CODE[6]), STR_12(CODE[10]), STR_9(CODE[6]), 
		 -> STR_8(CODE[10]), STR_6(CODE[6]), STR_5(CODE[8]), STR_2(CODE[6]), 
		 -> STR_1(CODE[8]), 

    serialSendString@String	PTR unsigned char  size(2) Largest target is 11
		 -> STR_21(CODE[6]), STR_18(CODE[6]), STR_17(CODE[6]), STR_14(CODE[6]), 
		 -> STR_11(CODE[6]), STR_10(CODE[11]), STR_7(CODE[6]), STR_4(CODE[6]), 
		 -> STR_3(CODE[9]), 


Critical Paths under _main in COMRAM

    _main->_leADC
    _serialSendString->_serialSend
    _leTeclado->_lcdString
    _leSerial->_serialReadChar
    _serialReadChar->_serialRead
    _leADC->___fltol
    _lcdString->_lcdChar
    ___fltol->___fladd
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    ___fladd->___flmul
    _lcdNumber->___awmod
    _lcdNumber->_lcdChar
    _lcdChar->_pushByte
    ___awmod->___awdiv
    _lcdInit->_lcdCommand
    _pushNibble->_soWrite
    _lcdCommand->_pushByte
    _pushByte->_soWrite
    _pulseEnablePin->_digitalWrite
    _kpInit->_pinMode
    _soInit->_pinMode
    _kpDebounce->_soWrite
    _soWrite->_digitalWrite
    _PulseEnClock->_digitalWrite
    _PulseClockData->_digitalWrite
    _adcInit->_pinMode

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0  165292
                                             98 COMRAM    10    10      0
                            ___awdiv
                            ___awmod
                            _adcInit
                          _atraso_ms
                         _kpDebounce
                             _kpInit
                         _lcdCommand
                            _lcdInit
                          _lcdNumber
                          _lcdString
                              _leADC
                           _leSerial
                          _leTeclado
                         _serialInit
                         _serialSend
                   _serialSendString
 ---------------------------------------------------------------------------------
 (1) _serialSendString                                     5     3      2     789
                                              1 COMRAM     5     3      2
                         _serialSend
 ---------------------------------------------------------------------------------
 (2) _serialSend                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _serialInit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _leTeclado                                            2     2      0   25362
                                             20 COMRAM     2     2      0
                             _kpRead
                          _kpReadKey
                         _lcdCommand
                          _lcdString
 ---------------------------------------------------------------------------------
 (2) _kpReadKey                                            5     5      0      60
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (2) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _leSerial                                             3     3      0     105
                                              2 COMRAM     3     3      0
                     _serialReadChar
 ---------------------------------------------------------------------------------
 (2) _serialReadChar                                       1     1      0      45
                                              1 COMRAM     1     1      0
                         _serialRead
 ---------------------------------------------------------------------------------
 (3) _serialRead                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _leADC                                                8     7      1   48914
                                             90 COMRAM     8     7      1
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                            _adcRead
                            _lcdChar
                         _lcdCommand
                          _lcdString
 ---------------------------------------------------------------------------------
 (2) _lcdString                                            6     4      2   13357
                                             14 COMRAM     6     4      2
                            _lcdChar
 ---------------------------------------------------------------------------------
 (2) _adcRead                                              4     2      2     145
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     305
                                             80 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1744
                                             39 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1399
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    2388
                                             64 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcdNumber                                            4     2      2   17373
                                             14 COMRAM     4     2      2
                            ___awdiv
                            ___awmod
                            _lcdChar
 ---------------------------------------------------------------------------------
 (3) _lcdChar                                              1     1      0   11975
                                             13 COMRAM     1     1      0
                         _delayMicro
                           _pushByte
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    2880
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1972
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0   28276
                         _delayMicro
                          _delayMili
                         _lcdCommand
                            _pinMode
                         _pushNibble
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _pushNibble                                           3     1      2   11681
                                              9 COMRAM     3     1      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           1     1      0   11945
                                             13 COMRAM     1     1      0
                          _delayMili
                           _pushByte
 ---------------------------------------------------------------------------------
 (4) _pushByte                                             4     2      2   11573
                                              9 COMRAM     4     2      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (5) _pulseEnablePin                                       0     0      0    2496
                         _delayMicro
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (6) _delayMicro                                           4     2      2     380
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _delayMili                                            5     3      2     350
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0    3920
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _soInit                                               0     0      0    1960
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                           5     5      0    7205
                                              9 COMRAM     5     5      0
                        _digitalRead
                            _soWrite
 ---------------------------------------------------------------------------------
 (5) _soWrite                                              3     1      2    6721
                                              6 COMRAM     3     1      2
                     _PulseClockData
                       _PulseEnClock
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (6) _PulseEnClock                                         0     0      0    2116
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (6) _PulseClockData                                       0     0      0    2116
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (6) _digitalWrite                                         6     2      4    2116
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _digitalRead                                          5     3      2     372
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _atraso_ms                                            6     4      2     594
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0    1960
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _pinMode                                              6     2      4    1960
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _adcInit
     _pinMode
   _atraso_ms
   _kpDebounce
     _digitalRead
     _soWrite
       _PulseClockData
         _digitalWrite
       _PulseEnClock
         _digitalWrite
       _digitalWrite
   _kpInit
     _pinMode
     _soInit
       _pinMode
   _lcdCommand
     _delayMili
     _pushByte
       _digitalWrite
       _pulseEnablePin
         _delayMicro
         _digitalWrite
       _soWrite
   _lcdInit
     _delayMicro
     _delayMili
     _lcdCommand
     _pinMode
     _pushNibble
       _digitalWrite
       _pulseEnablePin
       _soWrite
     _soInit
   _lcdNumber
     ___awdiv
     ___awmod
     _lcdChar
       _delayMicro
       _pushByte
   _lcdString
     _lcdChar
   _leADC
     ___awdiv
     ___awmod
     ___fladd
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
     ___flmul
     ___fltol
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _adcRead
     _lcdChar
     _lcdCommand
     _lcdString
   _leSerial
     _serialReadChar
       _serialRead
   _leTeclado
     _kpRead
     _kpReadKey
     _lcdCommand
     _lcdString
   _serialInit
   _serialSend
   _serialSendString
     _serialSend

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     6C      76       1       92.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      76      15        0.0%
DATA                 0      0      76       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Dec 15 22:55:20 2021

             ___fldiv@aexp 0027               ___fldiv@bexp 0026               ___fldiv@sign 001F  
           _pulseEnablePin 2938               lcdString@msg 000F                         l70 1F80  
                       l73 2ADC                         l82 2B34                         l67 2550  
                       l84 2B4C                         l79 2850               ___awdiv@sign 0006  
                      l101 2936                        l105 2876                        l202 249E  
                      l107 2884                        l131 2678                        l108 28A0  
                      l125 2B82                        l310 1C20                        l150 29E8  
                      l231 2A44                        l223 2B66                        l320 2A6E  
                      l145 2208                        l161 2B84                        l170 2978  
                      l234 2B32                        l226 2B78                        l323 2A98  
                      l147 2220                        l317 29B6                        l173 2ABE  
                      l167 2A18                        l280 20EA                        l328 28EE  
                      l176 27AA                        l281 20E6                        l193 2800  
                      l338 2750                        l179 2B18                        l187 2AFA  
                      l276 19D2                        l285 20E6                        l199 26EC  
                      l572 23EA                        l638 2326                        l585 2600  
                      l923 1784                        l925 15E4                        l870 0850  
                      l934 162A                        l871 0816                        l936 16A2  
                      l928 15A8                        l937 1690                        l962 127C  
                      l955 1086                        l972 13AC                        l964 12F4  
                      l869 0862                        l965 12E2                        l886 097C  
                      l878 0B32                        l895 0A4C                        l959 13EA  
                      l896 0A3A                        l996 1C78                        l999 1DD4  
                      u220 2A2C                        u221 2A28                        u230 2A3E  
                      u231 2A3A                        u520 2B4A                        u521 2B46  
                      u460 2B74                        u461 2B70                        u480 2642  
                      u481 263E                        u490 2676                        u474 2622  
                      u491 2672                        u475 261C               ___awmod@sign 000E  
                      wreg 000FE8               ___flmul@aexp 0039               ___flmul@bexp 003A  
 __end_of_serialSendString 2852               ___flmul@sign 0034               ___flmul@temp 003F  
             ___flmul@prod 003B               ___fltol@exp1 005A                       l1010 1D6C  
                     l1003 1D10                       l1200 2B3A                       l1202 2B4A  
                     l3000 2288                       l1160 2B74                       l3010 22B2  
                     l3002 228C                       l1090 2A1E                       l1170 260A  
                     l3100 248C                       l3020 22DA                       l3012 22BC  
                     l3004 229A                       l1092 2A2C                       l1180 2676  
                     l1172 2642                       l1164 2602                       l2310 28EA  
                     l2302 28BA                       l3102 2492                       l3022 22E6  
                     l3014 22C6                       l1094 2A30                       l1158 2B66  
                     l3110 2826                       l3120 26EE                       l2304 28D2  
                     l2312 2938                       l3104 2498                       l2320 2AE0  
                     l3024 22F6                       l3040 1C9E                       l3032 1C24  
                     l1096 2A3E                       l1088 2A1A                       l1176 2656  
                     l3200 254E                       l3112 2828                       l2330 1A22  
                     l3130 2716                       l3122 26FA                       l2250 1786  
                     l2306 28D8                       l2314 294C                       l2322 2AEE  
                     l3114 267A                       l3026 2306                       l3050 1CF8  
                     l3034 1C34                       l3210 1DEC                       l1098 2A42  
                     l1178 265A                       l3106 2802                       l2340 1ABC  
                     l2332 1A44                       l2324 19D4                       l3124 26FE  
                     l2420 2056                       l2412 200E                       l2404 1FC6  
                     l2260 1812                       l2252 17A2                       l2308 28DA  
                     l2316 2958                       l3116 2686                       l2500 0794  
                     l3028 2316                       l3060 1D5C                       l3052 1CFA  
                     l3044 1CB2                       l3036 1C42                       l3220 1F58  
                     l3212 1EC2                       l3108 280A                       l3300 0CE0  
                     l2350 1B50                       l2342 1AD8                       l2334 1A60  
                     l2326 19F0                       l3134 272A                       l3142 2736  
                     l2430 20BA                       l2422 2072                       l2414 202A  
                     l2406 1FE2                       l2270 18A4                       l2262 182C  
                     l2254 17B4                       l2318 2754                       l3118 26D2  
                     l2510 07A8                       l2502 0798                       l3070 1DB4  
                     l3062 1D7A                       l3054 1D06                       l3046 1CBA  
                     l3038 1C88                       l3222 1F74                       l3214 1EC8  
                     l1198 2B34                       l3310 0D44                       l3302 0CEA  
                     l3230 0B44                       l2360 1BDA                       l2352 1B62  
                     l2344 1AEA                       l2336 1A72                       l2328 1A02  
                     l3128 2712                       l3144 273A                       l2280 193C  
                     l2272 18C4                       l2264 184C                       l2256 17D4  
                     l3160 21D6                       l3152 211C                       l3080 29E4  
                     l2600 0A0E                       l2520 07E2                       l2512 07AC  
                     l2504 079C                       l2440 0680                       l3072 1DC2  
                     l3064 1D7C                       l3056 1D42                       l3048 1CC6  
                     l3216 1EF8                       l3208 1DD8                       l3400 0F88  
                     l3320 0D6E                       l3312 0D4A                       l3304 0D18  
                     l3240 0B64                       l3232 0B48                       l3224 0B34  
                     l2362 1BFE                       l2354 1B86                       l2346 1B0E  
                     l2338 1A96                       l3082 28F0                       l3138 2730  
                     l2282 195E                       l2274 18E6                       l2266 186E  
                     l2258 17F6                       l2290 2A46                       l3170 2200  
                     l3154 2168                       l3146 20EC                       l2434 297A  
                     l2370 2AFE                       l3090 23EC                       l2610 0A68  
                     l2602 0A1C                       l2530 0834                       l2522 07FE  
                     l2514 07B0                       l2506 07A0                       l2450 06C0  
                     l2442 068E                       l3074 1DC4                       l3066 1D80  
                     l3058 1D4E                       l3218 1F28                       l3330 0DD2  
                     l3322 0D7A                       l3314 0D50                       l3306 0D32  
                     l3250 0B94                       l3242 0B6A                       l3234 0B4C  
                     l3226 0B3C                       l2356 1BAC                       l2348 1B34  
                     l3084 292C                       l2428 209E                       l2284 197A  
                     l2276 1902                       l2268 188A                       l2292 2A70  
                     l3172 2218                       l3156 218E                       l3164 21DE  
                     l3148 20FC                       l2364 29EA                       l2436 2A9C  
                     l3092 244C                       l2620 0AD2                       l2612 0A76  
                     l2604 0A32                       l2540 0880                       l2532 0842  
                     l2524 080E                       l2508 07A4                       l2516 07B4  
                     l2460 06F2                       l2452 06C2                       l2444 0690  
                     l2700 153C                       l3068 1DA4                       l2372 27AC  
                     l2380 2B7A                       l3180 24D2                       l3340 0DFC  
                     l3332 0DD8                       l3324 0D80                       l3316 0D5C  
                     l3308 0D38                       l3260 0BF8                       l3252 0B9E  
                     l3244 0B76                       l3236 0B52                       l3228 0B40  
                     l2358 1BC8                       l3086 292E                       l2286 1994  
                     l2278 191C                       l2294 28A2                       l3166 21F6  
                     l3158 21AC                       l3078 29B8                       l2366 29F6  
                     l3094 2458                       l2630 0B0C                       l2622 0AF2  
                     l2614 0AB0                       l2550 08C0                       l2534 0844  
                     l2526 0824                       l2518 07B8                       l2470 071A  
                     l2462 06F4                       l2446 06A0                       l2454 06CA  
                     l2438 0674                       l2710 1584                       l2702 154C  
                     l2390 2890                       l2382 2852                       l2374 27B8  
                     l3430 2530                       l3190 2500                       l3182 24DE  
                     l3174 24A0                       l3406 0F8C                       l3350 0E2C  
                     l3342 0E02                       l3334 0DE4                       l3326 0D8A  
                     l3318 0D62                       l3270 0C22                       l3262 0BFE  
                     l3254 0BCC                       l3246 0B82                       l3238 0B58  
                     l3088 2932                       l2288 19B4                       l2296 28B6  
                     l3168 21FC                       l2368 29FA                       l3096 2472  
                     l2632 0B12                       l2624 0AF6                       l2608 0A5C  
                     l2616 0AB2                       l2560 08EA                       l2552 08CC  
                     l2544 0894                       l2536 084E                       l2528 0830  
                     l2480 0754                       l2472 072A                       l2464 06FA  
                     l2456 06DA                       l2448 06B0                       l2720 15D2  
                     l2712 1598                       l2704 155C                       l2640 13EC  
                     l2800 103E                       l2392 2898                       l2384 286C  
                     l2376 27D4                       l3192 2506                       l3184 24E6  
                     l3176 24BC                       l1920 2B30                       l3360 0E90  
                     l3352 0E36                       l3344 0E0E                       l3336 0DEA  
                     l3328 0DB8                       l3280 0C86                       l3272 0C2E  
                     l3264 0C04                       l3256 0BE6                       l3248 0B8E  
                     l3098 2480                       l2634 0B20                       l2626 0B04  
                     l2618 0AC2                       l2570 095C                       l2554 08D0  
                     l2546 08A4                       l2538 0870                       l2562 08F0  
                     l2490 0780                       l2482 0766                       l2474 073A  
                     l2466 0708                       l2458 06E0                       l2730 161A  
                     l2722 15E2                       l2714 15A6                       l2706 156C  
                     l2650 1428                       l2642 13F8                       l2810 1076  
                     l2802 1040                       l2386 2874                       l2378 27D8  
                     l1930 2AC0                       l3194 2512                       l3186 24EC  
                     l3178 24CC                       l3370 0EBA                       l3362 0E96  
                     l3354 0E64                       l3346 0E1A                       l3338 0DF0  
                     l3290 0CB0                       l3282 0C8C                       l3274 0C34  
                     l3266 0C10                       l3258 0BEC                       l2396 1F82  
                     l2636 0B22                       l2628 0B0A                       l2580 09B6  
                     l2564 0916                       l2572 096C                       l2556 08DE  
                     l2548 08B2                       l2492 0784                       l2484 0774  
                     l2476 073C                       l2468 070A                       l2740 165A  
                     l2732 1628                       l2724 15F4                       l2716 15B2  
                     l2708 1574                       l2660 1458                       l2652 1438  
                     l2644 1406                       l2900 13D0                       l2820 10C6  
                     l2812 1096                       l2804 1050                       l2388 288A  
                     l1932 2AD2                       l3188 24F8                       l1916 2B1A  
                     l3428 0FA0                       l3380 0F1E                       l3372 0EC6  
                     l3364 0E9C                       l3356 0E7E                       l3348 0E26  
                     l3292 0CB6                       l3284 0C98                       l3276 0C3E  
                     l3268 0C16                       l2398 1F9E                       l2910 232C  
                     l2590 09E6                       l2582 09C0                       l2574 0992  
                     l2566 094A                       l2558 08E0                       l2494 0788  
                     l2486 0778                       l2478 0744                       l2750 16CC  
                     l2742 1688                       l2726 160A                       l2734 163A  
                     l2718 15D0                       l2670 148E                       l2662 145E  
                     l2654 143A                       l2646 1408                       l2902 13D6  
                     l2830 1116                       l2822 10D0                       l2814 10A6  
                     l2806 1060                       l3198 251A                       l1918 2B2E  
                     l3390 0F4C                       l3382 0F24                       l3374 0ECC  
                     l3366 0EA8                       l3358 0E84                       l3294 0CC2  
                     l3286 0C9E                       l3278 0C6C                       l2920 235C  
                     l2912 233A                       l2592 09EA                       l2584 09CE  
                     l2576 09A2                       l2568 094C                       l2496 078C  
                     l2488 077C                       l2760 1744                       l2752 16F6  
                     l2736 1648                       l2728 1610                       l2680 14CE  
                     l2672 149E                       l2664 146C                       l2648 1418  
                     l2656 1442                       l2904 13DA                       l2840 1158  
                     l2832 1122                       l2824 10E6                       l2808 1070  
                     l3392 0F50                       l3384 0F30                       l3376 0ED6  
                     l3368 0EAE                       l3296 0CCE                       l3288 0CA4  
                     l2930 238A                       l2922 2360                       l2914 2342  
                     l2594 09FA                       l2586 09D0                       l2498 0790  
                     l2770 177A                       l2762 1760                       l2746 16B2  
                     l2754 16FA                       l2738 164C                       l2682 14DE  
                     l2690 14FE                       l2674 14A0                       l2666 146E  
                     l2658 1452                       l2850 11BA                       l2842 1168  
                     l2834 1130                       l2826 10F2                       l2818 10BA  
                     l3394 0F58                       l3386 0F36                       l3378 0F04  
                     l3298 0CDA                       l2940 23BE                       l2932 2398  
                     l2924 2368                       l2916 2346                       l2908 2328  
                     l2588 09DE                       l2596 09FC                       l2764 1764  
                     l2756 1714                       l2748 16BE                       l2692 150E  
                     l2684 14E6                       l2668 147E                       l2676 14A8  
                     l2860 1262                       l2852 11D6                       l2844 1182  
                     l2836 113C                       l2828 110A                       l2780 0FCE  
                     l3396 0F5E                       l3388 0F3C                       l2942 23C4  
                     l2934 239E                       l2926 237A                       l2918 2354  
                     l2598 0A0A                       l2766 1772                       l2758 172A  
                     l2694 150E                       l2686 14EA                       l2678 14B8  
                     l2870 129E                       l2862 126C                       l2854 1200  
                     l2846 1192                       l2838 114C                       l2790 100E  
                     l2782 0FDC                       l3398 0F66                       l2936 23B4  
                     l2928 2382                       l2944 23CA                       l2960 2570  
                     l2952 2552                       l2768 1778                       l2880 1310  
                     l2872 12AC                       l2864 127A                       l2856 1236  
                     l2848 11AE                       l2792 1014                       l2784 0FDE  
                     l2946 23DA                       l2938 23BC                       l2970 25A8  
                     l2962 257E                       l2954 2556                       l2698 1522  
                     l2890 137A                       l2882 131E                       l2874 12DA  
                     l2866 128C                       l2858 1244                       l2794 1024  
                     l2786 0FEE                       l2778 0FC2                       l2948 23E2  
                     l2972 25B6                       l2980 25E0                       l2964 2586  
                     l2956 2564                       l2892 1394                       l2884 1348  
                     l2868 129A                       l2796 102A                       l2788 0FFE  
                     l2982 25F0                       l2974 25CC                       l2966 2598  
                     l2958 256C                       l2894 13B0                       l2878 1304  
                     l2886 134C                       l2798 1030                       l2990 2238  
                     l2984 25F8                       l2976 25D4                       l2968 25A0  
                     l2896 13C0                       l2888 1366                       l2978 25DA  
                     l2898 13CE                       l2994 224C                       l2996 2276  
                     l2988 2222                       l2998 2278                       STR_1 0647  
                     STR_2 0662                       STR_3 0635                       STR_4 0662  
                     STR_5 0647                       STR_6 065C                       STR_7 065C  
                     STR_8 062B                       STR_9 0662                       u2010 1902  
                     u2011 18FE                       u2100 19F0                       u2020 191C  
                     u2004 18D6                       u2101 19EC                       u2021 1918  
                     u2005 18D2                       u2110 1A02                       u2111 19FE  
                     u3000 169E                       u3001 169A                       u2050 197A  
                     u2034 192E                       u3010 16B2                       u2051 1976  
                     u2035 192A                       u3011 16AE                       u2220 1B50  
                     u2204 1B00                       u2140 1A60                       u2124 1A14  
                     u2060 1994                       u2044 194E                       u2300 2A18  
                     u3020 16CC                       u3100 1050                       u2221 1B4C  
                     u2205 1AFC                       u2141 1A5C                       u2125 1A10  
                     u2061 1990                       u2045 194A                       u2301 2A14  
                     u3021 16C8                       u3101 104C                       u2230 1B62  
                     u2214 1B24                       u2150 1A72                       u2134 1A34  
                     u3030 1714                       u3110 1060                       u2310 2800  
                     u2231 1B5E                       u2215 1B20                       u2151 1A6E  
                     u2135 1A30                       u3031 1710                       u3111 105C  
                     u2311 27FC                       u2400 2072                       u3040 1744  
                     u3200 1304                       u3120 1096                       u2320 286C  
                     u2401 206E                       u3041 1740                       u3201 1300  
                     u3121 1092                       u2321 2868                       u2074 19A6  
                     u2090 28EA                       u3050 1772                       u3210 131E  
                     u3130 10A6                       u2330 2884                       u2075 19A2  
                     u2091 28E6                       u3051 176E                       u3211 131A  
                     u3131 10A2                       u2331 2880                       u2260 1BC8  
                     u2244 1B78                       u2180 1AD8                       u2164 1A88  
                     u2420 20BA                       u2340 1F9E                       u2084 19C6  
                     u3300 23DA                       u2500 072A                       u3220 1366  
                     u3140 1220                       u3060 0FDC                       u2261 1BC4  
                     u2245 1B74                       u2181 1AD4                       u2165 1A84  
                     u2421 20B6                       u2341 1F9A                       u2085 19C2  
                     u3301 23D6                       u2501 0726                       u3221 1362  
                     u3061 0FD8                       u2270 1BDA                       u2254 1B9C  
                     u2190 1AEA                       u2174 1AAC                       u2414 2088  
                     u3310 2564                       u2510 0766                       u3230 1394  
                     u3150 127A                       u3070 0FEE                       u2271 1BD6  
                     u2255 1B98                       u2191 1AE6                       u2175 1AA8  
                     u2415 2084                       u3311 2560                       u2511 0762  
                     u3231 1390                       u3151 1276                       u3071 0FEA  
                     u2360 1FE2                       u3320 257E                       u2600 0880  
                     u2520 0774                       u2440 068E                       u3240 13CE  
                     u3160 129A                       u3080 0FFE                       u3400 22AE  
                     u2361 1FDE                       u3321 257A                       u2601 087C  
                     u2521 0770                       u2441 068A                       u3241 13CA  
                     u3161 1296                       u3145 1216                       u3081 0FFA  
                     u3401 22AA                       u2434 20D0                       u2354 1FB0  
                     u3250 233A                       u3330 2598                       u2610 08B2  
                     u2530 07E2                       u2450 06A0                       u3170 12AC  
                     u3090 103E                       u3410 22D6                       u2435 20CC  
                     u2355 1FAC                       u3251 2336                       u3331 2594  
                     u2611 08AE                       u2531 07DE                       u2451 069C  
                     u3171 12A8                       u3091 103A                       u3411 22D2  
                     u2284 1BF0                       u2380 202A                       u1900 17B4  
                     u3260 2354                       u3340 25B6                       u2700 09FA  
                     u2620 08C0                       u2540 07FA                       u2460 06B0  
                     u3180 12DA                       u3420 22F6                       u3500 1D6C  
                     u2285 1BEC                       u2381 2026                       u1901 17B0  
                     u3261 2350                       u3341 25B2                       u2701 09F6  
                     u2621 08BC                       u2541 07F4                       u2461 06AC  
                     u3181 12D6                       u3421 22F2                       u3501 1D68  
                     u2294 1C14                       u2374 1FF8                       u3270 237A  
                     u3350 25CC                       u2710 0A0A                       u2630 08DE  
                     u2550 07FC                       u2470 06F2                       u3190 12F0  
                     u3430 2306                       u3510 1D7A                       u2295 1C10  
                     u2375 1FF4                       u3271 2376                       u3351 25C8  
                     u2711 0A06                       u2631 08DA                       u2471 06EE  
                     u3191 12EC                       u3431 2302                       u3511 1D76  
                     u3280 2398                       u3360 25F0                       u2800 0AF2  
                     u2720 0A1C                       u2640 0916                       u2560 0824  
                     u2480 0708                       u3520 1DB4                       u3440 1C34  
                     u3281 2394                       u3361 25EC                       u2801 0AEE  
                     u2721 0A18                       u2641 0912                       u2561 0820  
                     u2481 0704                       u3521 1DB0                       u3441 1C30  
                     u2394 2040                       u1930 1812                       u1914 17C6  
                     u3610 2168                       u3290 23B4                       u2810 0B04  
                     u2730 0A32                       u2650 095C                       u2570 0842  
                     u2490 071A                       u3370 2238                       u3530 1DC2  
                     u3450 1C42                       u2395 203C                       u1931 180E  
                     u1915 17C2                       u3611 2164                       u3291 23B0  
                     u2811 0B00                       u2731 0A2E                       u2651 0958  
                     u2571 083E                       u2491 0716                       u3371 2234  
                     u3531 1DBE                       u3451 1C3E                       u1940 182C  
                     u1924 17E6                       u3604 2138                       u2820 0B20  
                     u2740 0A48                       u2660 0992                       u2580 0862  
                     u2900 150E                       u3380 226C                       u3460 1C9E  
                     u3540 2850                       u1941 1828                       u1925 17E2  
                     u3605 2132                       u2821 0B1C                       u2741 0A44  
                     u2661 098E                       u2581 085E                       u2901 150A  
                     u3461 1C9A                       u3541 284C                       u3630 21AC  
                     u3550 26EC                       u2750 0A5C                       u2670 09A2  
                     u2590 0870                       u2910 1584                       u2830 1406  
                     u3390 229A                       u3470 1CF4                       u3631 21A8  
                     u3551 26E8                       u2751 0A58                       u2671 099E  
                     u2591 086C                       u2911 1580                       u2831 1402  
                     u3391 2296                       u3471 1CF0                       u3560 270E  
                     u3624 2180                       u2760 0A76                       u2680 09CE  
                     u2920 15A6                       u2840 1418                       u3480 1D3E  
                     u3561 270A                       u3625 217A                       u2761 0A72  
                     u2681 09CA                       u2921 15A2                       u2841 1414  
                     u3385 2262                       u3481 1D3A                       u3570 2726  
                     u1970 188A                       u1954 183E                       u1890 17A2  
                     u3650 21F6                       u2770 0AB0                       u2690 09DE  
                     u2930 15D0                       u2850 1428                       u3490 1D5C  
                     u3571 2722                       u1971 1886                       u1955 183A  
                     u1891 179E                       u3651 21F2                       u2771 0AAC  
                     u2691 09DA                       u2931 15CC                       u2851 1424  
                     u3491 1D58                       u3580 2750                       u1980 18A4  
                     u1964 185E                       u3660 2218                       u3644 21C8  
                     u2780 0AC2                       u2940 15F4                       u2860 146C  
                     u3581 274C                       u1981 18A0                       u1965 185A  
                     u3661 2214                       u3645 21C2                       u2781 0ABE  
                     u2941 15F0                       u2861 1468                       u3590 2118  
                     u2790 0AD2                       u2950 160A                       u2870 147E  
                     u3670 24BC                       u3591 2114                       u2791 0ACE  
                     u2951 1606                       u2871 147A                       u3671 24B8  
                     u2960 1628                       u2880 148E                       u2961 1624  
                     u2881 148A                       u1994 18B6                       u2970 1648  
                     u2890 14CE                       u1995 18B2                       u2971 1644  
                     u2891 14CA                       u2980 165A                       u2981 1656  
                     u2990 1688                       u2991 1684                       _PIR1 000F9E  
            leADC@ValorADC 005E                       _main 0B34                       _keys 0071  
         ??_PulseClockData 0007                       indf2 000FDF                       fsr2l 000FD9  
                     prodh 000FF4                       prodl 000FF3                       start 0000  
          ___fldiv@new_exp 0020            pushNibble@value 000C               ___param_bank 000000  
   __end_of_pulseEnablePin 297A              ___fltol@sign1 0059            __end_of___fladd 0B34  
                    ?_main 0001            __end_of_adcInit 2938            __end_of___fldiv 1786  
          __end_of_adcRead 28A2            __end_of___awdiv 23EC                      STR_10 060B  
                    STR_11 0662                      STR_20 065C                      STR_12 062B  
                    STR_21 065C                      STR_13 065C                      STR_14 065C  
                    STR_22 0621                      STR_15 066E                      STR_23 063E  
                    STR_16 0662                      STR_24 0616                      STR_25 0668  
                    STR_17 0656                      STR_18 0662                      STR_26 064F  
                    STR_19 066E            __end_of___awmod 2602            __end_of___flmul 13EC  
          __end_of___fltol 2328            ___awdiv@divisor 0003            ___awdiv@counter 0005  
                    _RCREG 000FAE                      _RCSTA 000FAB                      _SPBRG 000FAF  
                    _PORTA 000F80                      _PORTB 000F81                      _PORTC 000F82  
                    _PORTD 000F83                      _PORTE 000F84            __end_of_charKey 060B  
                    _TRISA 000F92                      _TRISB 000F93                      _TRISC 000F94  
                    _TRISD 000F95                      _TRISE 000F96                      _TXREG 000FAD  
                    _TXSTA 000FAC            __end_of_lcdChar 2AFC            __end_of_lcdInit 24A0  
                    _leADC 1DD6            __end_of_pinMode 1C22            __end_of_soWrite 28F0  
                    tablat 000FF5              main@Superfice 0066                      status 000FD8  
             pushNibble@rs 000A       __end_of_digitalWrite 19D4            __initialization 2B4E  
          ?_pulseEnablePin 0001               __end_of_main 0FC2                     ??_main 0063  
            __activetblptr 000002       __size_of_digitalRead 016A                     ?_leADC 005B  
                   _ADCON0 000FC2                     _ADCON1 000FC1                     _ADCON2 000FC0  
                   _ADRESH 000FC4                     _ADRESL 000FC3           ___awdiv@dividend 0001  
             atraso_ms@num 0001                     _SPBRGH 000FB0           __end_of___xxtofl 1DD6  
         __end_of_leSerial 2ADE                     leADC@x 0061                  ??___fladd 0049  
                ??_adcInit 0007                  ??___fldiv 0017                  ??_adcRead 0003  
                ??___awdiv 0005                  ??___awmod 000D                  ??___flmul 0030  
                ??___fltol 0055                     _kpInit 29B8                     _kpRead 2B7A  
                   clear_0 2B54                     _soInit 297A           ___awdiv@quotient 0007  
          ___awmod@divisor 000B                  ??_lcdChar 000E                     isa$std 000001  
                ??_lcdInit 000F            ___awmod@counter 000D                  ??_pinMode 0005  
             __mediumconst 0000                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8                  ??_soWrite 0009           __end_of_pushByte 27AC  
  __size_of_serialReadChar 001A               ___xxtofl@arg 000B               ___xxtofl@exp 000A  
             ___xxtofl@val 0001                 __accesstop 0080    __end_of__initialization 2B5A  
            ___rparam_used 000001              pushByte@value 000D                 ___fltol@f1 0051  
              pinMode@type 0003             __pcstackCOMRAM 0001              __end_of_leADC 1F82  
       __size_of_delayMili 0030         __size_of_leTeclado 00B2         __size_of_lcdNumber 0074  
       __size_of_lcdString 0056                    ??_leADC 005C         __size_of_kpReadKey 0078  
        ?_serialSendString 0002         __size_of_atraso_ms 0064         ??_serialSendString 0004  
    __size_of_digitalWrite 024E                 _delayMicro 2B84                 _lcdCommand 2AFC  
                  ?_kpInit 0001                    ?_kpRead 0001                    _BAUDCON 000FB8  
                  ?_soInit 0001                 _kpDebounce 20EC                  ?___xxtofl 0001  
             _digitalWrite 1786                  ?_leSerial 0001          __end_of_delayMili 2A1A  
         ??_pulseEnablePin 0007          __end_of_leTeclado 2552                    __Hparam 0000  
        __end_of_lcdNumber 26EE                    __Lparam 0000          __end_of_lcdString 2802  
          kpDebounce@tempo 0075          __end_of_kpReadKey 267A                    ___fladd 0674  
                  _adcInit 28F0                    ___fldiv 13EC                    _adcRead 2852  
                  ___awdiv 2328                    ___awmod 2552                    ___flmul 0FC2  
                  ___fltol 2222                  ?_pushByte 000A          __end_of_atraso_ms 2752  
             __psmallconst 0600            __size_of_kpInit 0032            __size_of_kpRead 000A  
                  _charKey 0601                    __pcinit 2B4E             serialRead@resp 0001  
                  _lcdChar 2ADE                    __ramtop 0600            __size_of_soInit 003E  
                  _lcdInit 23EC                    __ptext0 0B34                    __ptext1 2802  
                  __ptext2 2B64                    __ptext3 2B1A                    __ptext4 24A0  
                  __ptext5 2602                    __ptext6 2B7A                    __ptext7 2AC0  
                  __ptext8 2B34                    __ptext9 2A1A                 ??___xxtofl 0005  
                  _pinMode 19D4           ___awmod@dividend 0009                serialSend@c 0001  
               delayMili@a 0001                 delayMili@i 0004                    _soWrite 28A2  
               ??_leSerial 0003             _serialReadChar 2B34                    main@Max 0067  
                  main@Min 006A       end_of_initialization 2B5A              ?_PulseEnClock 0001  
            __Lmediumconst 0000             digitalRead@pin 0001                ?_delayMicro 0001  
               _serialInit 2B1A                 _serialRead 2A1A                 _serialSend 2B64  
              ?_lcdCommand 0001                    postinc0 000FEE                 ??_pushByte 000C  
  __size_of_PulseClockData 002A              ??_digitalRead 0003                ?_kpDebounce 0001  
               lcdNumber@i 0011                ___fladd@grs 0050     __end_of_serialReadChar 2B4E  
            ___xxtofl@sign 0009                 _pushNibble 2A9A                 lcdString@i 0013  
              ___fldiv@grs 0022                ___fldiv@rem 001B             ??_PulseEnClock 0007  
              ___flmul@grs 0035          serialSendString@i 0006                 kpReadKey@i 0004  
               atraso_ms@i 0003                 atraso_ms@j 0005                 atraso_ms@k 0006  
           adcRead@ADvalor 0003             __end_of_kpInit 29EA             __end_of_kpRead 2B84  
           __end_of_soInit 29B8        __size_of_delayMicro 0002        start_initialization 2B4E  
          ?_serialReadChar 0001        __end_of_digitalRead 20EC        __size_of_lcdCommand 001E  
      __size_of_kpDebounce 0136             adcRead@channel 0001                ?_serialInit 0001  
              ?_serialRead 0001                ?_serialSend 0001  __size_of_serialSendString 0050  
        kpDebounce@oldRead 006D          kpDebounce@newRead 006F                   ??_kpInit 0007  
                 ??_kpRead 0003                   ??_soInit 0007                  ___fladd@a 0045  
                ___fladd@b 0041     serialSendString@String 0002                  ___fldiv@a 0013  
                ___fldiv@b 000F                  ___flmul@a 002C                  ___flmul@b 0028  
              __pbssCOMRAM 006D         serialReadChar@Byte 0002                ?_pushNibble 000A  
               pinMode@pin 0001          __size_of___xxtofl 01B4          __size_of_leSerial 001E  
                _delayMili 29EA                  _leTeclado 24A0                   ?___fladd 0041  
                 ?_adcInit 0001                   ?___fldiv 000F                   ?_adcRead 0001  
                 ?___awdiv 0001                   ?___awmod 0009                   ?___flmul 0028  
                 ?___fltol 0051             _PulseClockData 2A70                  _lcdNumber 267A  
     __end_of_PulseEnClock 2A70                  _lcdString 27AC                _digitalRead 1F82  
                 ?_lcdChar 0001          __size_of_pushByte 005A                   ?_lcdInit 0001  
                _kpReadKey 2602                  _atraso_ms 26EE                __smallconst 0600  
                 ?_pinMode 0001                   ?_soWrite 0007             __size_of_leADC 01AC  
      __size_of_serialInit 001A        __size_of_serialRead 002C        __size_of_serialSend 0016  
             ??_delayMicro 0003                 ?_delayMili 0001     __end_of_PulseClockData 2A9A  
               ?_leTeclado 0001        __size_of_pushNibble 0026               ??_lcdCommand 000E  
               ?_lcdNumber 000F                 ?_lcdString 000F               ??_kpDebounce 000A  
               ?_kpReadKey 0001                 ?_atraso_ms 0001            lcdCommand@value 000E  
       __end_of_delayMicro 2B86         __end_of_lcdCommand 2B1A                 pushByte@rs 000A  
             lcdChar@value 000E           leTeclado@Leitura 0073         __end_of_kpDebounce 2222  
         leTeclado@Retorno 0076              leSerial@Input 0003                   __Hrparam 0000  
         _serialSendString 2802                   __Lrparam 0000            ?_PulseClockData 0001  
         __size_of___fladd 04C0           __size_of_adcInit 0048           __size_of___fldiv 039A  
         __size_of_adcRead 0050           __size_of___awdiv 00C4           __size_of___awmod 00B0  
         __size_of___flmul 042A           __size_of___fltol 0106    __size_of_pulseEnablePin 0042  
           lcdNumber@value 000F                   leADC@Max 0060                   leADC@Min 005B  
         ??_serialReadChar 0002           __size_of_lcdChar 001E           __size_of_lcdInit 00B4  
                 ___xxtofl 1C22           __size_of_pinMode 024E                   _leSerial 2AC0  
                 __ptext10 1DD6                   __ptext11 27AC                   __ptext20 2552  
                 __ptext12 2852                   __ptext21 2328                   __ptext13 1C22  
                 __ptext30 297A                   __ptext22 23EC                   __ptext14 2222  
                 __ptext31 20EC                   __ptext23 2A9A                   __ptext15 0FC2  
                 __ptext32 28A2                   __ptext24 2AFC                   __ptext16 13EC  
                 __ptext33 2A46                   __ptext25 2752                   __ptext17 0674  
                 __ptext34 2A70                   __ptext26 2938                   __ptext18 267A  
                 __ptext35 1786                   __ptext27 2B84                   __ptext19 2ADE  
                 __ptext36 1F82                   __ptext28 29EA                   __ptext37 26EE  
                 __ptext29 29B8                   __ptext38 28F0                   __ptext39 19D4  
         __size_of_soWrite 004E              __size_of_main 048E                ??_delayMili 0003  
             ??_serialInit 0001               ??_serialRead 0001      __size_of_PulseEnClock 002A  
             ??_serialSend 0001                delayMicro@a 0001                   isa$xinst 000000  
              ??_leTeclado 0015               soWrite@value 0007                   _pushByte 2752  
              ??_lcdNumber 0011                   main@Slot 0065                ??_lcdString 0011  
              ??_kpReadKey 0001                ??_atraso_ms 0003               ??_pushNibble 000C  
            ?_digitalWrite 0001         __end_of_serialInit 2B34         __end_of_serialRead 2A46  
       __end_of_serialSend 2B7A               _PulseEnClock 2A46          digitalWrite@value 0003  
                 soWrite@i 0009         __end_of_pushNibble 2AC0               ?_digitalRead 0001  
              kpDebounce@i 000D             ??_digitalWrite 0005              ___fladd@signs 004D  
          digitalWrite@pin 0001               ___fladd@aexp 004E               ___fladd@bexp 004F  
